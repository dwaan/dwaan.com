{"version":3,"file":"706.bundle.js","mappings":"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","sources":["webpack://dwaan/./src/js/replurk/icons.js","webpack://dwaan/./src/js/replurk/span.js","webpack://dwaan/./src/js/replurk/colors.js","webpack://dwaan/./src/js/replurk/main.js"],"sourcesContent":["\"use strict\";\n\nvar iconLink = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\"><path id=\"right\" d=\"M19.188,12.001c0,1.1-0.891,2.015-1.988,2.015l-4.195-0.015C13.543,15.089,13.968,16,15.002,16h3C19.658,16,21,13.657,21,12s-1.342-4-2.998-4h-3c-1.034,0-1.459,0.911-1.998,1.999l4.195-0.015C18.297,9.984,19.188,10.901,19.188,12.001z\"/><path id=\"center\" d=\"M8,12c0,0.535,0.42,1,0.938,1h6.109c0.518,0,0.938-0.465,0.938-1c0-0.534-0.42-1-0.938-1H8.938C8.42,11,8,11.466,8,12z\"/><path id=\"left\" d=\"M4.816,11.999c0-1.1,0.891-2.015,1.988-2.015L11,9.999C10.461,8.911,10.036,8,9.002,8h-3c-1.656,0-2.998,2.343-2.998,4s1.342,4,2.998,4h3c1.034,0,1.459-0.911,1.998-1.999l-4.195,0.015C5.707,14.016,4.816,13.099,4.816,11.999z\"/></svg>';\n\nexport default iconLink;","\"use strict\";\n\nimport { _q, _qAll, animateNumber } from '../helpers/helper.js';\n\n/*\n    Simple span element object:\n\n    1. update(text): update the content with text value, and animate it if it's number\n    2. updateHTML(text): update the content with html value\n*/\n\nclass span {\n    constructor(classname, text) {\n        this.el = document.createElement('span');\n        this.el.setAttribute(\"class\", classname);\n        this.el.innerHTML = text;\n    }\n\n    update(text) {\n        animateNumber(this.el.textContent, text, (text) => {\n            this.el.textContent = text;\n        });\n    }\n\n    updateHTML(text) {\n        this.el.innerHTML = text;\n    }\n}\n\nexport default span;","\"use strict\";\n\n/*\n    Color randomizer\n\n    1. colors: array of colors value\n    2. getRandomColor(): get the randomized color from colors list\n*/\n\nclass colors {\n    constructor() {\n        this.oldcolor = \"\";\n        this.randomcolors = [];\n\n        const allColorArrays = [\n            [\n                'rgb(63,94,251)',     // Dodger Blue\n                'rgb(252,70,107)',    // Radical Red\n                'rgb(34,193,195)',    // Light Sea Green\n                'rgb(253,187,45)',    // Goldenrod\n                'rgb(195,34,190)',    // Deep Pink\n                'rgb(219,158,0)',     // Golden Yellow\n                'rgb(75,231,152)',    // Medium Spring Green\n                'rgb(195,34,103)',    // Cerise\n                'rgb(45,182,253)'     // Dodger Blue (Lighter)\n            ]\n        ];\n\n        const seconds = Math.floor(Date.now() / 1000); // Get current time in seconds\n        const arrayIndex = seconds % allColorArrays.length; // Use seconds to determine the index\n        this.colors = allColorArrays[arrayIndex];\n    }\n\n    getRandomColor() {\n        var color;\n        do {\n            this.randomcolors = gsap.utils.shuffle(this.colors).slice();\n        } while (this.oldcolor == (color = this.randomcolors.pop()));\n        this.oldcolor = color;\n        return color;\n    }\n}\n\nexport default colors;","\"use strict\";\n\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js';\nimport api from \"../helpers/api.js\";\nimport scroll from \"../helpers/scroll.js\";\nimport darkmode from \"../helpers/darkmode.js\";\nimport animate from \"../helpers/animate.js\";\nimport html2canvas from \"html2canvas\";\nimport { _q, _qAll, hasClass, plural, monthNames, animateNumber, datediff, pluralinwords, reduceMotionFilter, waitForImg } from '../helpers/helper.js';\n\nimport iconLink from \"./icons.js\";\nimport span from \"./span.js\";\nimport colors from \"./colors.js\";\n\n\n\n\n\n/*\n    Replurk class\n*/\nclass replurk {\n    // Draw in which element?\n    next = document.createElement('div');\n    // Plurks array\n    plurks = [];\n    // Plurker profile object\n    me = { \"id\": 3203568, \"has_profile_image\": 1, \"timeline_privacy\": 0, \"nick_name\": \"dwan\", \"display_name\": \"Dwan\", \"date_of_birth\": \"Sat, 29 Oct 1983 00:01:00 GMT\", \"avatar\": 41917598, \"gender\": 1, \"karma\": 199.24, \"premium\": true, \"verified_account\": false, \"dateformat\": 3, \"default_lang\": \"en\", \"friend_list_privacy\": \"public\", \"name_color\": \"FFA59A\", \"full_name\": \"Dwan B.\", \"location\": \"Tel Aviv-Yafo, Dan, Israel\", \"timezone\": \"Asia/Jerusalem\", \"phone_verified\": 0, \"bday_privacy\": 1, \"plurks_count\": 14598, \"response_count\": 79484, \"pinned_plurk_id\": 0, \"background_id\": 0, \"show_ads\": false, \"show_location\": 0, \"profile_views\": 36112, \"avatar_small\": \"https://avatars.plurk.com/3203568-small41917598.gif\", \"avatar_medium\": \"https://avatars.plurk.com/3203568-medium41917598.gif\", \"avatar_big\": \"https://avatars.plurk.com/3203568-big41917598.jpg\", \"about\": \"Mr. Goat\\u2019s dad and full-time husband\", \"about_renderred\": \"Mr. Goat\\u2019s dad and full-time husband\", \"page_title\": \"The world revolve around me\", \"recruited\": 14, \"relationship\": \"married\", \"friends_count\": 571, \"fans_count\": 498, \"join_date\": \"Wed, 15 Oct 2008 07:48:05 GMT\", \"privacy\": \"world\", \"accept_private_plurk_from\": \"all\", \"post_anonymous_plurk\": false, \"badges\": [\"10_invites\", \"14\", \"9\", \"10000_views\", \"10000_plurks\", \"50000_comments\", \"upload_profile_image\", \"50_fans\", \"coin\"], \"link_facebook\": false, \"setup_facebook_sync\": false, \"setup_twitter_sync\": false, \"setup_weibo_sync\": false, \"filter\": { \"porn\": 2, \"anonymous\": 0, \"keywords\": null }, \"anniversary\": { \"years\": 13, \"days\": 27 }, \"phone_number\": null, \"creature\": 0, \"creature_url\": null, \"creature_special\": 1, \"creature_special_url\": null };\n\n    /*\n        Friends object spesification:\n\n        1. data: contains all the friends collection data\n        2. add(data): add friend to friends collection data\n        3. find(user_id): return friend data based on their id\n        4. findByUsername(nick_name): return friend data based on their nick name\n        5. getAvatar(user_id): return avatar url based on their id for from friends collection data\n        6. getAvatarByUsername(user_id): return avatar url based on their nick name for from friends collection data\n    */\n    friends = {\n        data: {},\n        unavailable: [],\n        parent: this,\n        init: function () {\n            this.data = {};\n        },\n        add: function (new_friends) {\n            Object.assign(this.data, new_friends);\n        },\n        find: async function (user_id) {\n            if (this.unavailable.findIndex(el => el == user_id) >= 0) return false;\n\n            if (this.data && this.data[user_id]) {\n                return this.data[user_id];\n            } else {\n                var result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&user_id=\" + user_id);\n\n                if (result.success) {\n                    var temp = {};\n                    temp[result.message.user_info.id] = result.message.user_info;\n                    this.add(temp);\n                    return result.message.user_info;\n                } else {\n                    this.unavailable.push(user_id);\n                    return false;\n                }\n            }\n        },\n        findByUsername: async function (nick_name) {\n            var user_id = false;\n\n            if (this.unavailable.findIndex(el => el == nick_name) >= 0) return false;\n\n            for (var index in this.data) {\n                if (this.data[index].nick_name.toLowerCase() == nick_name.toLowerCase()) {\n                    user_id = index;\n                    break;\n                }\n            }\n\n            if (user_id) {\n                return this.data[user_id];\n            } else {\n                var result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&nick_name=\" + nick_name);\n\n                if (result.success) {\n                    var temp = {};\n                    temp[result.message.user_info.id] = result.message.user_info;\n                    this.add(temp);\n                    return result.message.user_info;\n                } else {\n                    this.unavailable.push(nick_name);\n                    return false;\n                }\n            }\n        },\n        getAvatar: function (user_id) {\n            if (user_id && this.data && this.data[user_id]) {\n                if (this.data[user_id].has_profile_image) {\n                    var avatar = \"\";\n                    if (this.data[user_id].avatar) avatar = this.data[user_id].avatar;\n                    return 'https://avatars.plurk.com/' + user_id + '-big' + avatar + '.jpg';\n                }\n            }\n            return 'https://plurk.com/static/default_big.jpg';\n        },\n        getAvatarByUsername: function (user_name) {\n            var user_id = false;\n\n            if (user_name) {\n                for (var index in this.data) {\n                    if (this.data[index].nick_name.toLowerCase() == user_name.toLowerCase()) {\n                        user_id = index;\n                        break;\n                    }\n                }\n            }\n\n            return this.getAvatar(user_id);\n        }\n    }\n\n    // Statistics plurker object renderer\n    statistics = {\n        // Storage\n        whispers_count: 0,\n        coins_count: 0,\n        porn_count: 0,\n        noresponse_count: 0,\n        private_count: 0,\n        replurker_count: 0,\n        replurker_list: [],\n        favourite_count: 0,\n        favorite_list: [],\n        response_count: 0,\n        responded_count: 0,\n        responded_other_count: 0,\n        responded_other_list: [],\n        plurks_count: 0,\n        poll_count: 0,\n        poll_responder_count: 0,\n        poll_popular_plurk: {},\n        redditor_count: 0,\n        tiktoker_count: 0,\n        instagrammer_count: 0,\n        imgurer_count: 0,\n        facebooker_count: 0,\n        twitterer_count: 0,\n        youtuber_count: 0,\n        id: 0,\n        // Other\n        next: document.createElement('div'),\n        el: document.createElement('div'),\n        randomcolors: [],\n        parent: this,\n        init: function (next) {\n            this.whispers_count = 0;\n            this.coins_count = 0;\n            this.porn_count = 0;\n            this.noresponse_count = 0;\n            this.private_count = 0;\n            this.replurker_count = 0;\n            this.replurker_list = [];\n            this.favourite_count = 0;\n            this.favorite_list = [];\n            this.response_count = 0;\n            this.responded_count = 0;\n            this.responded_other_count = 0;\n            this.responded_other_list = [];\n            this.plurks_count = 0;\n            this.id = 0;\n            this.next = next;\n            this.randomcolors = [];\n\n            this.el = this.next.querySelector(\"#statistics\");\n\n            // Obverse when element is added to DOM\n            var observer = new MutationObserver((mutationsList) => {\n                mutationsList.forEach(mutation => {\n                    mutation.addedNodes.forEach(el => {\n                        this.afterDraw(el);\n                    });\n                });\n            });\n            observer.observe(this.el, {\n                attributes: true,\n                childList: true,\n                subtree: false\n            });\n        },\n        clear: function () {\n            this.el.innerHTML = \"\";\n        },\n        listCount: function (list, collection) {\n            if (collection.length > 0) {\n                collection.forEach(value => {\n                    var index = list.findIndex(el => el.id == value)\n\n                    if (index < 0) list.push({ id: value, count: 1 });\n                    else list[index].count++;\n                });\n            }\n\n            return list;\n        },\n        title: function (text, style = \"\", loading = false) {\n            if (loading) this.el.insertAdjacentHTML('beforeend', '<div class=\"statistics middle statistics-title ' + style + '\"><h3><span>' + text + '</span><span class=\"loading\"><i/></span></h3></div>');\n            else this.el.insertAdjacentHTML('beforeend', '<div class=\"statistics middle statistics-title ' + style + '\"><h3><span>' + text + '</span><span class=\"line\"><i/></span></h3></div>');\n        },\n        afterDraw: function (el) {\n            var length = reduceMotionFilter(1);\n\n            if (hasClass(el, 'statistics-wrap')) {\n                var color = new colors();\n                var randomcolors = [color.getRandomColor(), color.getRandomColor()]\n                var anim = el.querySelector(\".anim\");\n\n                gsap.set(anim, {\n                    background: 'radial-gradient(at 10% 10%, ' + randomcolors[0] + ' 0%, ' + randomcolors[1] + ' 100%)'\n                });\n\n                gsap.to(anim, {\n                    opacity: 1,\n                    duration: length / 2,\n                    ease: \"power3.out\"\n                }, 0);\n\n                // Scroll animation wrap section\n                var screen = gsap.matchMedia();\n                screen.add(\"(min-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: window.innerHeight * 1 / 5\n                        }, {\n                            y: 0,\n                            ease: \"ease.out\"\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"0 100%-=100px\",\n                            animation: tl,\n                            scrub: 2\n                        });\n                    });\n                });\n                screen.add(\"(max-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: 0\n                        }, {\n                            y: 0\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"100px 100%-=100px\",\n                            animation: tl,\n                            scrub: 1\n                        });\n                    });\n                });\n\n                scroll.push(function (tl) {\n                    if (el.querySelector(\".big\")) {\n                        var number = Number(el.querySelector(\".big\").textContent);\n                        if (number > 0) {\n                            var load = { progress: 0 };\n                            var duration = 1;\n                            if (number >= 500 && number < 1000) duration = 2;\n                            else if (number >= 1000 && number < 99999) duration = 3;\n                            else if (number >= 99999) duration = 4;\n                            tl.to(load, {\n                                progress: number,\n                                snap: \"progress\",\n                                ease: \"power3.out\",\n                                duration: duration,\n                                onUpdate: () => {\n                                    el.querySelector(\".big\").textContent = plural(load.progress);\n                                }\n                            }, 0);\n                        }\n                    }\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"0 100%-=100px\",\n                        end: \"100px 100%-=100px\",\n                        animation: tl,\n                        toggleActions: \"play none none none\"\n                    });\n                });\n            } else {\n                // Scroll animation line section\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelectorAll(\"i\"), {\n                        x: \"-100%\"\n                    }, {\n                        x: \"0%\",\n                        ease: \"ease.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"100% 100%\",\n                        end: \"100% 0\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'drawgraph')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".graph\"), {\n                        y: 100\n                    }, {\n                        y: 0\n                    }, 0);\n\n                    tl.fromTo(el.querySelector(\".graph i\"), {\n                        height: \"0%\"\n                    }, {\n                        height: el.querySelector(\".graph i\").getAttribute(\"data-number\") + \"%\"\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'coins')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".big\"), {\n                        y: \"50%\"\n                    }, {\n                        y: 0,\n                        ease: \"power3.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 2\n                    });\n                });\n            }\n\n            // Capture function\n            this.capture(el);\n\n            scroll.refresh();\n        },\n        capture: (el) => {\n            var capture = el.querySelector(\".capture small\");\n            if (!capture) return;\n\n            capture.onclick = async () => {\n                if (capture.generating) return;\n\n                var imgs = el.querySelectorAll(\"img\");\n\n                // Informing user the process is starting\n                capture.generating = true;\n                document.body.style.cursor = \"wait\";\n\n                // Proxying images\n                imgs.forEach(img => {\n                    if (!img.getAttribute(\"src\").includes(\"http\") || img.localUrl) return;\n\n                    img.localUrl = true;\n                    img.setAttribute(\"src\", api.url + \"?img=\" + img.getAttribute(\"src\"));\n                });\n                // Load and cache image\n                await waitForImg(imgs, (_, progress) => {\n                    capture.innerHTML = \"Downloading images... (\" + Math.round(progress) + \"%)\";\n                });\n\n                // HTML to Canvas magic\n                capture.innerHTML = \"Processing...\";\n                var canvas = await html2canvas(el.querySelector(\".anim\"), {\n                    backgroundColor: null,\n                    logging: false,\n                });\n\n                // Download the output\n                var link = document.createElement(\"a\");\n                link.style.display = \"none\";\n                link.download = \"replurk\" + this.year + \"-\" + Date.now() + \".png\";\n                link.href = canvas.toDataURL();\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n                link.remove();\n\n                // Reset button after 3s\n                capture.innerHTML = \"Done\";\n                document.body.style.cursor = \"default\";\n                setTimeout(() => {\n                    capture.innerHTML = \"Recapture\";\n                    capture.generating = false;\n                }, 3000);\n            }\n        },\n        wrapper: function (style, text, background) {\n            if (!background) return '<div class=\"statistics middle statistics-wrap ' + style + '\"><div class=\"anim\">' + text + '</div><div class=\"capture\"><small>Capture</small></div></div>';\n            else return '<div class=\"statistics middle statistics-wrap ' + style + '\"><div class=\"anim\" style=\"background-images:url(' + background + ')\">' + text + '</div><div class=\"capture\"><small>Capture</small></div></div>';\n        },\n        draw: function (style, number, text, background) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"big\">' + number + '</span>\\\n\t\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'), background);\n            }\n        },\n        drawDiv: function (style, text) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '<div class=\"box\">' + text + '</div>'));\n        },\n        drawGraph: function (style, number, text) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawgraph movetitle\", '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"graph\"><i data-number=\"' + number + '\"></i></span>\\\n\t\t\t\t\t\t<span class=\"info\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'));\n            }\n        },\n        drawImage: function (style, image, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawimage\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span class=\"avatar\"><img src=\"' + image + '\" /></span>\\\n\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawHTML: function (style, title, html) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawhtml\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<div class=\"htmlcontent\">' + html + '</div>\\\n\t\t\t\t\t<div class=\"title\">' + title + '</div>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawLink: function (style, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawlink\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span>' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawPost: function (style, id, title, text, badge) {\n            var url = \"\";\n            if (id) url = 'https://plurk.com/p/' + id.toString(36);\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawpost\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<a href=\"' + url + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<p class=\"post\">' + text + '</p>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawUserList: async function (style, id, title, list) {\n            var html = \"\";\n            var max = list.length >= 5 ? 5 : list.length;\n            var length = reduceMotionFilter(1);\n\n            this.drawHTML(style + \" drawuserlist movetitle \" + id, title, \"<span class='info'>Downloading user data</span>\");\n            for (var index = 0; index < max; index++) {\n                var value = list[index];\n                if (value) {\n                    var friends = this.parent.friends;\n                    var friend = await friends.find(value.id);\n                    if (friend) {\n                        var plurker = new plurkerElement(value.id, friend, \"\", plurker => {\n                            plurker.avatar = new span('avatar', '<img src=\"' + friends.getAvatar(plurker.user.id) + '\" />');\n                            plurker.name = new span('name', plurker.user.display_name);\n                            plurker.counts = new span('count', value.count);\n                            plurker.el.appendChild(plurker.avatar.el);\n                            plurker.el.appendChild(plurker.name.el);\n                            plurker.el.appendChild(plurker.counts.el);\n                            plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.user.nick_name);\n                        });\n                        plurker.create();\n                        html += plurker.el.outerHTML;\n                    } else {\n                        max++;\n                    }\n                }\n            }\n            this.el.querySelector(\".\" + id + \" .htmlcontent\").innerHTML = html;\n\n            // Stagger animation\n            if (id == 'mostinteraction' || id == 'mvp') {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        scale: .3,\n                        opacity: 0\n                    }, {\n                        scale: 1,\n                        opacity: 1,\n                        ease: \"elastic.out(1.2, 0.5)\",\n                        duration: length * 3 / 4,\n                        stagger: {\n                            amount: length / 3,\n                            from: \"end\"\n                        }\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"50% 100%\",\n                        end: \"50% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            } else {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        y: 50,\n                        opacity: 0\n                    }, {\n                        y: 0,\n                        opacity: 1,\n                        duration: length,\n                        ease: \"power3.out\",\n                        stagger: length / 3\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"0% 100%\",\n                        end: \"0% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            }\n        },\n        attach: function (charttitle, node, max) {\n            var that = this;\n            var id = node.id;\n            var chart;\n            var title;\n            var text;\n            var anim;\n            var wrapper;\n            var capture;\n\n            var opacity = 0;\n            var position = max;\n            var zIndex = 0;\n            var hidden = true;\n\n            if (node.position <= max) {\n                hidden = false;\n                zIndex = position = (node.position - 1);\n                opacity = 1;\n            }\n\n            // Create the box\n            if (!that.next.querySelector(\".\" + id)) {\n                chart = document.createElement('div');\n                chart.setAttribute('class', 'chart');\n\n                title = document.createElement('div');\n                title.setAttribute('class', 'title');\n                title.innerHTML = charttitle;\n\n                text = document.createElement('div');\n                text.setAttribute('class', 'text');\n                text.appendChild(chart);\n                text.appendChild(title);\n\n                anim = document.createElement('div');\n                anim.setAttribute('class', 'anim');\n                anim.appendChild(text);\n\n                text = document.createElement('small');\n                text.innerHTML = \"Capture\";\n                capture = document.createElement('div');\n                capture.setAttribute('class', 'capture');\n                capture.appendChild(text);\n\n                wrapper = document.createElement('div');\n                wrapper.setAttribute('class', 'statistics middle statistics-wrap attach ' + id);\n                wrapper.appendChild(anim);\n                wrapper.appendChild(capture);\n\n                that.el.insertAdjacentElement(\"beforeend\", wrapper);\n            }\n\n            // Add  element\n            if (!hidden && !node.attached) {\n                var maxTop = max / (max - 1) * 100;\n\n                node.insertTo(that.el.querySelector(\".\" + id + ' .chart'));\n\n                gsap.set(node.el, {\n                    top: maxTop + \"%\",\n                    opacity: 0,\n                    zIndex: 0,\n                });\n            }\n            // Update position\n            if (!hidden || !node.hidden) {\n                var currentTop = position / (max - 1) * 100;\n                var length = reduceMotionFilter(1);\n\n                gsap.killTweensOf(node.el);\n                gsap.to(node.el, {\n                    top: currentTop + \"%\",\n                    opacity: opacity,\n                    zIndex: zIndex,\n                    duration: length / 2,\n                    ease: \"power3.out\",\n                    onComplete: function () {\n                        if (hidden) {\n                            node.destroy();\n                        }\n                    }\n                });\n                node.hidden = hidden;\n            }\n\n            node.update();\n        },\n        drawAll: async function (plurks) {\n            var response_percentage = Math.round((this.plurks_count - this.noresponse_count) / this.plurks_count * 100);\n\n            this.parent.most.responses.draw(plurks);\n            this.drawGraph('center graph percentage', response_percentage, 'Around <i>' + response_percentage + '%</i> of my plurks got <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> responses ' + ((response_percentage <= 50) ? '<img src=\"https://api.iconify.design/fluent-emoji:crying-face.svg\" />' : '<img src=\"https://api.iconify.design/fluent-emoji:star-struck.svg\" />'));\n\n            this.draw('spansmall recievereplurk', this.replurker_count, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + plural(this.replurker_count, 'replurk') + '</i>');\n            this.parent.most.replurk.draw(plurks);\n\n            this.parent.most.favorite.draw(plurks);\n            this.draw('spansmall recievelove', this.favourite_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + plural(this.favourite_count, 'love') + '</i>');\n\n            this.draw('spansmall privateplurk', this.private_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:lip.svg\" /> ' + plural(this.private_count, 'private plurk') + '</i>');\n            this.draw('spansmall whisper', this.whispers_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-in-clouds.svg\" /> ' + plural(this.whispers_count, 'whisper') + '</i>');\n            this.draw('spansmall porn', this.porn_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg\" /> ' + plural(this.porn_count, 'adult plurk') + '</i>');\n\n            this.draw('span2 responsecount', this.plurks_count + \" &rarr; \" + this.response_count, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(this.response_count, 'response') + '</i> from <i>' + plural(this.plurks_count, 'plurk') + '</i>');\n            this.draw('spansmall center coins', this.coins_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:coin.svg\" /> ' + plural(this.coins_count, 'coin') + '</i>');\n\n            if (this.favorite_list.length > 0) this.drawUserList(\"avatar\", \"loved\", 'These Plurkers <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Loved</i> My Posts', this.favorite_list.sort(this.parent.most.sort));\n            if (this.replurker_list.length > 0) this.drawUserList(\"avatar\", \"replurked\", 'These Plurkers likes to <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Replurked</i> My Posts', this.replurker_list.sort(this.parent.most.sort));\n        }\n    };\n\n    // Most statistics object renderer\n    most = {\n        parent: this,\n        sort: function (a, b) {\n            return b.count - a.count;\n        },\n        // Find and count all based on regex\n        findregex: function (regex, replace, content, storage) {\n            var result = content.match(regex);\n\n            for (var index in result) {\n                var value = replace(result[index]);\n                var idx = storage.findIndex(el => el.value == value);\n\n                if (idx < 0) {\n                    storage.push({\n                        id: value,\n                        value: value,\n                        count: 1\n                    });\n                } else {\n                    storage[idx].count++;\n                }\n            }\n\n            return result;\n        },\n        init: function () {\n            this.responders.data = [];\n            this.mentions.data = [];\n            this.mentions.dataAll = [];\n            this.myemoticons.data = [];\n            this.hashtags.data = [];\n            this.links.links = [];\n            this.links.pics = [];\n            this.types.words = 0;\n            this.types.chars = 0;\n        },\n        countAll: async function (data) {\n            // Find and count all my emoticons from my post\n            if (data.user_id == this.parent.me.id) this.myemoticons.count(data.content);\n            // Find and count all mentions from my post\n            await this.mentions.count(data.content_raw);\n            // Find and count all hashtags from my post\n            if (data.user_id == this.parent.me.id) this.hashtags.count(data.content);\n            // Find and count all links and pictures post from my post\n            if (data.user_id == this.parent.me.id) this.links.count(data.content, data.plurk_id, data.response_count, data.replurkers_count, data.favorite_count);\n            // Find and count characther and words from my post\n            if (data.user_id == this.parent.me.id) this.types.count(data.content_raw);\n        },\n        responders: {\n            data: [],\n            parent: this,\n            count: async function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.user_id == response.user_id;\n                });\n\n                if (index < 0) {\n                    var friends = this.parent.friends;\n                    var user = await friends.find(response.user_id);\n                    this.data.push(new plurkerElement('mostresponders', user, friends.getAvatar(user.id)));\n                } else {\n                    this.data[index].count++;\n                }\n                this.data.sort(this.parent.most.sort);\n\n                // Update top 5\n                var index = 1;\n                for (var i = 0; i < this.data.length; i++) {\n                    this.data[i].position = this.data.length;\n                    if (this.data[i].user_id != this.parent.me.id && this.data[i].user_id != 99999) {\n                        this.data[i].position = index++;\n                        this.parent.statistics.attach('<i>Top <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> Responders</i> <strong>of My Timeline</strong>', this.data[i], 5);\n                    }\n                }\n            },\n            draw: function () {\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatar(this.data[index].user_id), 'https://plurk.com/' + this.data[index].user.nick_name, '<i>Most Responder</i>', this.data[index].user.display_name, this.data[index].count);\n                }\n            }\n        },\n        mentions: {\n            data: [],\n            dataAll: [],\n            parent: this,\n            count: async function (content) {\n                var result = this.parent.most.findregex(/\\@(\\w{1,30})[\\ |\\:]/g, value => value.replace(/\\@|\\ |\\:/g, ''), content, this.data);\n                var max = 5;\n                var index = 1;\n\n                if (result) {\n                    // Update top 5\n                    this.data.sort(this.parent.most.sort);\n                    for (var idx = 0; idx < this.data.length; idx++) {\n                        this.data[idx].position = this.data.length;\n\n                        if (index <= max) {\n                            var user = await this.parent.friends.findByUsername(this.data[idx].value);\n\n                            if (this.data[idx].el == undefined) {\n                                this.data[idx] = new plurkerElement('mostmentionedbyme', user, \"\", plurker => {\n                                    plurker.avatar = new span('avatar', '<img src=\"' + this.parent.friends.getAvatar(plurker.user_id) + '\" />');\n                                    plurker.name = new span('name', \"@\" + plurker.nick_name);\n                                    plurker.counts = new span('count', plurker.count);\n                                    plurker.el.appendChild(plurker.avatar.el);\n                                    plurker.el.appendChild(plurker.name.el);\n                                    plurker.el.appendChild(plurker.counts.el);\n                                    plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.nick_name);\n                                });\n                            }\n\n                            if (user.id != this.parent.me.id && user.id != 99999) {\n                                this.data[idx].position = index++;\n                                this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/fluent-emoji:person-raising-hand-light.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                            }\n                        }\n\n                        if (this.data[idx].el) this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/fluent-emoji:person-raising-hand-light.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                    }\n                }\n            },\n            draw: function () {\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatarByUsername(this.data[index].value), 'https://plurk.com/' + this.data[index].value, '<i>Most Mentioned</i> by me', \"@\" + this.data[index].value, this.data[index].count);\n                }\n            }\n        },\n        myemoticons: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/emoticon_my\\\" src=\\\"(.*?)\\\"/g, function (value) {\n                    return value.replace(/emoticon_my\\\" src=\\\"|\\\"/gi, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 7;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><img src=\"' + this.data[i].value + '\" /> <span class=\"count\">' + this.data[i].count + '</span></div>';\n                if (html != \"\") this.parent.statistics.drawHTML(\"smallspan grid emoticons\", 'Most Used <i>My Emoticons</i>', html);\n            }\n        },\n        hashtags: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/hashtag\\\"\\>(.*?)\\</g, function (value) {\n                    return value.replace(/hashtag\\\"\\>\\#|\\.\\<|\\</g, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 5;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><a href=\"https://plurk.com/search?q=' + this.data[i].value + '\" target=\"_BLANK\" /><span class=\"count\">' + this.data[i].count + '</span> #' + this.data[i].value + '</a></div>';\n                if (html != \"\") {\n                    html = \"<strong>#</strong>\" + html;\n                    this.parent.statistics.drawHTML(\"hashtags\", 'Most Used <i>Hashtags</i>', html);\n                }\n            }\n        },\n        links: {\n            data: [],\n            links: [],\n            pics: [],\n            parent: this,\n            count: function (content, id, response, replurk, loved) {\n                var result = content.match(/href\\=\\\"(.*?)\\\"\\ class=\\\"(.*?)\\\"\\ rel/g);\n                var count = 0;\n                var pics = [];\n                var links = [];\n\n                if (result) for (var data of result) {\n                    if (!this.data[id]) {\n                        count = response + (replurk * 250) + (loved * 50);\n                    }\n\n                    if (data.includes(\"pictureservices\")) {\n                        this.pics.push(data);\n                        if (count > 0) {\n                            var pic = data.split('\\\"')\n                            pics.push({\n                                url: pic[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n                    }\n                    else {\n                        this.links.push(data);\n                        if (count > 0) {\n                            var link = data.split('\\\"')\n                            links.push({\n                                url: link[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n\n                    }\n                }\n\n                if (count) this.data.push({\n                    id: id,\n                    pics: pics,\n                    links: links,\n                    count: count,\n                    content: content\n                });\n            },\n            drawLinks: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].links.length > 0) {\n                        var link = this.data[index].links[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].id.toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"post\"><div class=\"info\">' + this.data[index].content + '</div><div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + link.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + link.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + link.loved + '</span>' + url + '</div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n                if (this.links.length > 0) this.parent.statistics.drawDiv('spansmall sharedlinks', \"<div class='title'>I shared <i>🔗 \" + plural(this.links.length, 'link') + '</i> and this is the most popular one</div>' + result);\n            },\n            drawPics: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].pics.length > 0) {\n                        var pics = this.data[index].pics[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"box\"><div class=\"image\" style=\"background-image: url(' + api.url + \"?img=\" + pics.url + ')\"></div><div class=\"post\">' + this.data[index].content + '<div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + pics.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + pics.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + pics.loved + '</span>' + url + '</div></div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n\n                if (this.pics.length > 0) this.parent.statistics.draw('spansmall sharedpictures', this.pics.length, 'I shared <i>🖼 ' + plural(this.pics.length, 'image') + '</i>');\n                if (result != \"\") this.parent.statistics.drawHTML('span2 previewpics', '<i>🖼 Most Popular Image</i>', result);\n            }\n        },\n        types: {\n            words: 0,\n            chars: 0,\n            parent: this,\n            count: function (content) {\n                var words = content.split(\" \");\n\n                this.chars += content.length;\n                this.words += words.length;\n            },\n            draw: function () {\n                if (this.chars > 0) this.parent.statistics.draw('span2 mediumnumber', this.chars, 'I typed more than  <i>' + pluralinwords(this.chars, 'character') + '</i>, around <i>' + pluralinwords(this.words, 'word') + '</i> this year');\n            }\n        },\n        responses: {\n            parent: this,\n            sort: function (a, b) {\n                return b.response_count - a.response_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.response_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostresponded', value.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> Most Responded</i> ' + datediff(value.posted), value.content, value.response_count);\n                        return;\n                    }\n                }\n            }\n        },\n        replurk: {\n            parent: this,\n            sort: function (a, b) {\n                return b.replurkers_count - a.replurkers_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.replurkers_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostreplurked', value.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Most Replurked</i> ' + datediff(value.posted), value.content, value.replurkers_count);\n                        return;\n                    }\n                }\n            }\n        },\n        favorite: {\n            parent: this,\n            sort: function (a, b) {\n                return b.favorite_count - a.favorite_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.favorite_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostfavorited', value.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Most Loved</i> ' + datediff(value.posted), value.content, value.favorite_count);\n                        return;\n                    }\n                }\n            }\n        },\n        interaction: {\n            data: [],\n            parent: this,\n            count: function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier++;\n                    else this.data[index].multiplier = 1;\n                    this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span2\", \"mostinteraction\", \"Plurkers who really like to <i><img src='https://api.iconify.design/fluent-emoji:speaking-head.svg' /> interact</i> with me\", result);\n                } catch {\n                    console.info(\"Error while counting most interacted plurker\");\n                }\n            }\n        },\n        mvp: {\n            data: [],\n            parent: this,\n            count: function (response, type) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (type == \"replurk\") {\n                        this.data[index].count += (response.count * 250);\n                    } else if (type == \"favorite\") {\n                        this.data[index].count += (response.count * 50);\n                    } else if (response.content_raw.length > 16) {\n                        if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier += .5;\n                        else this.data[index].multiplier = .5;\n                        this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                    }\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span3\", \"mvp\", \"My \" + this.parent.year + \" <i><img src='https://api.iconify.design/fluent-emoji:biting-lip.svg' /> MVP</i>\", result);\n                } catch (error) {\n                    console.info(\"Error while counting my mvp\", error);\n                }\n            }\n        }\n    };\n\n    // Inactive plurker object\n    inactive = {\n        draw: (data, year) => {\n            this.statistics.draw('inactive', year + \" &#8617;\", 'I\\'ve been inactive since ' + year + ' <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n            this.statistics.drawPost('postcontent span2 inactivemore', data.plurk_id, '<i>My last Plurk</i> ' + datediff(data.posted), data.content, data.response_count);\n        },\n        empty: () => {\n            this.statistics.draw('inactive', '-', 'I didn\\'t post anything at this year <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n        }\n    }\n\n    // Loading object\n    loading = {\n        count: 0,\n        prev_count: 0,\n        counts: -1,\n        clean: false,\n        next: document.createElement('div'),\n        parent: this,\n        isComplete: function () { return this.count == this.counts },\n        init: function (next) {\n            this.count = 0;\n            this.prev_count = 0;\n            this.counts = -1;\n            this.clean = false;\n            this.next = next;\n        },\n        draw: function (item) {\n            return new Promise(resolve => {\n                var length = reduceMotionFilter(1);\n                this.prev_count = item;\n\n                if (!this.next.querySelector(\".statistics.statistics-loading\")) {\n                    this.parent.statistics.draw(\"statistics-loading\", item + \"%\", \"<i class='month'>Data from \" + this.year + \"</i>. Loading. <small>As long as you didn't close this browser tab, You can resume later by refreshing this page.</small>\");\n                }\n\n                // Animate loading\n                var load = { progress: this.prev_count };\n                gsap.to(load, {\n                    progress: Math.round(item),\n                    snap: \"progress\",\n                    ease: \"linear\",\n                    duration: length / 4,\n                    onUpdate: () => {\n                        var el = this.next.querySelector(\".statistics-loading .big\");\n                        if (el) el.innerHTML = load.progress + \"%\";\n                    },\n                    onComplete: async () => {\n                        if (this.clean) await this.done();\n                        resolve();\n                    }\n                });\n            });\n        },\n        loop: async function (length) {\n            this.clean = true;\n            this.counts = length;\n            await this.draw(0);\n        },\n        update: async function (month, value) {\n            var el = this.next.querySelector(\".statistics-loading .month\");\n            if (month && el) el.innerHTML = month;\n\n            if (this.counts >= 0) {\n                this.count = value ? value : this.count + 1;\n                await this.draw(Math.round(100 * (this.count / this.counts)));\n            }\n        },\n        fakeupdate: async function () {\n            if (this.counts >= 0) {\n                this.count++;\n                if (this.count >= (this.counts - 10)) this.count = (this.counts - 10);\n                await this.draw(100 * (this.count / this.counts));\n            }\n        },\n        forcedone: async function () {\n            this.count = this.counts;\n            await this.draw(100);\n        },\n        done: function () {\n            return new Promise(resolve => {\n                var length = reduceMotionFilter(1);\n\n                if (this.isComplete()) {\n                    var el = this.next.querySelector(\".statistics.statistics-loading\");\n                    this.clean = false;\n                    if (el) {\n                        gsap.to(el, {\n                            opacity: 0,\n                            width: 0,\n                            height: 0,\n                            padding: 0,\n                            margin: 0,\n                            overflow: \"hidden\",\n                            duration: length / 2,\n                            ease: \"power3.out\",\n                            onComplete: () => {\n                                el.remove();\n                                scroll.refresh();\n                                resolve();\n                            }\n                        });\n                    }\n                } else resolve();\n            });\n        }\n    }\n\n    // Scroll Animation\n    scrollAnimate = {\n        credits: (tl) => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation, #credits .made\"), {\n                y: window.innerHeight * 1 / 8\n            }, {\n                y: 0,\n                ease: \"linear\",\n                duration: length * 2,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                stagger: {\n                    from: 'end',\n                    amount: length / 10\n                },\n                duration: length,\n                ease: \"power3.in\"\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .made\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length,\n                ease: \"power3.in\"\n            }, length * 3 / 10);\n\n            return tl;\n        },\n        statistics: () => {\n            var next = this.next;\n\n            // Scroll animate statistics\n            scroll.push(tl => this.scrollAnimate.credits(tl), tl => ScrollTrigger.create({\n                trigger: next.querySelectorAll(\"#statistics\"),\n                start: \"100%-=\" + window.innerHeight + \" 0\",\n                end: \"100% 0\",\n                animation: tl,\n                scrub: .5\n            }));\n        },\n        permisions: () => {\n            var next = this.next;\n\n            // Scroll animation permission section\n            scroll.push((tl) => {\n                tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n                    y: 0\n                }, {\n                    y: window.innerHeight * -3 / 4,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sup\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * -1 / 10,\n                    rotation: -10,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sub\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * 1 / 10,\n                    rotation: 10,\n                    ease: \"linear\"\n                }, 0);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n            scroll.push((tl) => {\n                tl = this.scrollAnimate.credits(tl);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n        },\n        menu: () => {\n            // Scroll animation menu and logout\n            scroll.push(tl => tl, tl => {\n                return ScrollTrigger.create({\n                    trigger: 'main',\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    onUpdate: update => {\n                        var el1 = '.logo, .size, .lamp, .switch';\n                        var el2 = el1 + \", .footer > *\";\n\n                        if (update.direction > 0) {\n                            gsap.killTweensOf(_qAll(el2));\n                            gsap.to(_qAll(el1), { y: -100, opacity: 0 });\n                            gsap.to(_qAll('.footer > *'), { y: 100, opacity: 0 });\n                        } else {\n                            gsap.to(_qAll(el2), { y: 0, opacity: 1 });\n                        }\n                    }\n                });\n            });\n        },\n        browserBar: (login = true) => {\n            if (login) {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#hello',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#statistics',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnter: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"white\");\n                        }\n                    });\n                });\n            } else {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#permission',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n            }\n        }\n    }\n\n    constructor(year) {\n        // Which year?\n        this.year = year;\n        this.startDate = this.year + '-10-29T09:00:00';\n        this.endDate = new Date((this.year - 1) + '-10-29T09:00:00');\n        this.days = 60 * 60 * 24 * 1000;\n        this.fulldays = 365;\n    }\n\n    // Browser color\n    getSetStateColor(state) {\n        if (typeof (state) == \"object\" && state.length >= 1) {\n            if (state.length == 1) {\n                darkmode.browserColorDark = state[0];\n                darkmode.browserColorLight = state[0];\n            } else {\n                darkmode.browserColorDark = state[1];\n                darkmode.browserColorLight = state[0];\n            }\n        } else if (state == \"green\") {\n            darkmode.browserColorDark = \"#0d4f03\";\n            darkmode.browserColorLight = \"#60e670\";\n        } else if (state == \"yellow\") {\n            darkmode.browserColorDark = \"#705f02\";\n            darkmode.browserColorLight = \"#FFD700\";\n        } else {\n            darkmode.browserColorDark = \"#000000\";\n            darkmode.browserColorLight = \"#FFFFFF\";\n        }\n\n        return [darkmode.browserColorLight, darkmode.browserColorDark];\n    }\n    browserColor(state, duration, ease) {\n        this.getSetStateColor(state);\n        darkmode.setDarkMode(duration, ease);\n    }\n\n    // Show/hide Animations\n    // Login Pages\n    showLoginPage(tl) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n\n        this.browserColor(\"green\", 1);\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            display: \"\",\n            opacity: 0,\n            top: 0\n        }, {\n            opacity: 1,\n            duration: length,\n            ease: \"power3.in\"\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: length / 5,\n            duration: length,\n            ease: \"power3.out\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    top: \"\"\n                });\n            }\n        }, \">-\" + (length / 2));\n\n        return tl;\n    }\n    hideLoginPage(tl) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n\n        tl.set(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            top: 0,\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *, #permission form\"), {\n            y: 0,\n            opacity: 1,\n        }, {\n            y: 200,\n            opacity: 0,\n            stagger: {\n                from: \"end\",\n                amount: length / 5\n            },\n            duration: length,\n            ease: \"power3.in\",\n            onComplete: () => {\n                this.browserColor(\"yellow\");\n            }\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            opacity: 1\n        }, {\n            opacity: 0,\n            duration: length,\n            ease: \"power3.in\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    display: \"none\",\n                    top: \"\"\n                }, \">\");\n            }\n        }, \">-\" + (length / 4));\n\n        return tl;\n    }\n    // Statistic Pages\n    showStatisticPages() {\n        return new Promise(resolve => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n            var tl = gsap.timeline();\n\n            tl.fromTo(next.querySelectorAll(\"#hello\"), {\n                display: \"\",\n                opacity: 0\n            }, {\n                opacity: 1,\n                ease: \"power3.in\",\n                duration: length,\n                onStart: () => this.browserColor(\"green\", .5)\n            }, length / 4);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext > *\"), {\n                display: \"\",\n                opacity: 0,\n                y: 200\n            }, {\n                opacity: 1,\n                y: 0,\n                duration: length,\n                stagger: length / 5,\n                ease: \"power3.out\"\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\" #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n                display: \"\",\n                opacity: 0,\n                y: 200\n            }, {\n                opacity: 1,\n                y: 0,\n                duration: length,\n                stagger: length / 5,\n                ease: \"power3.out\"\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n                display: \"\",\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length / 2,\n                onComplete: () => resolve()\n            }, length / 2);\n        });\n    }\n    hideStatisticPages() {\n        return new Promise(async resolve => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n            var tl = gsap.timeline();\n\n            await animate.top(next);\n\n            tl.fromTo(next.querySelectorAll(\".footer > *, #hello .bgtext > *, #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n                opacity: 1,\n                y: 0\n            }, {\n                opacity: 0,\n                y: 200,\n                duration: length,\n                stagger: {\n                    from: \"end\",\n                    amount: length / 5\n                },\n                ease: \"power3.in\"\n            }, length / 5);\n            tl.set(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n                opacity: 0\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\"#hello\"), {\n                opacity: 1\n            }, {\n                opacity: 0,\n                duration: length,\n                ease: \"power3.in\",\n                onComplete: () => {\n                    gsap.set(next.querySelectorAll(\".grant\"), { display: \"none\" });\n                    resolve();\n                }\n            }, length / 2);\n        });\n    }\n\n    // Login messages\n    message(message, quick) {\n        var next = this.next;\n\n        var loginmessage = next.querySelector(\"#login-message\");\n\n        if (quick) {\n            loginmessage.innerHTML = message;\n        } else {\n            gsap.to(loginmessage, {\n                opacity: 0,\n                onComplete: function () {\n                    loginmessage.innerHTML = message;\n                    gsap.to(loginmessage, {\n                        opacity: 1\n                    });\n                }\n            });\n        }\n    }\n\n    // Logout\n    async requestLogout() {\n        var tl = gsap.timeline();\n\n        api.abort();\n\n        // Hide statistic pages\n        await this.hideStatisticPages(tl);\n\n        // Logout\n        await api.call(\"?fetch=logout\");\n        this.statistics.clear();\n        api.clear();\n        this.login();\n\n        scroll.refresh();\n    }\n\n    // Request token\n    async requestToken(text) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n        var tokenlink = next.querySelector(\"#tokenurl\");\n        tokenlink.textContent = \"Connecting Plurk...\";\n\n        var tl = gsap.timeline();\n        tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            duration: length,\n            ease: \"power3.out\"\n        }, length);\n        tl.fromTo(next.querySelectorAll(\"#permission h1, #permission li\"), {\n            display: \"\",\n            y: 50,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: length / 10,\n            duration: length,\n            ease: \"power3.out\"\n        }, length);\n\n        api.call(\"?request=token\").then(data => {\n            if (text) {\n                message(text);\n            } else {\n                tokenlink.textContent = \"Grant Access\";\n                tokenlink.setAttribute(\"href\", api.url + \"?redirect=\" + data.message.url);\n            }\n        }, () => {\n            message(\"Error when requesting verification from Plurk, please reload your browser again.\");\n        });\n\n        if (!text) next.querySelector(\"#permission form\").style.display = \"none\";\n    }\n\n    // Display current Plurker data\n    async displayPlurkerData() {\n        var plurker = this.me;\n        var next = this.next;\n        var extra = \"\";\n        var length = reduceMotionFilter(1);\n\n        // plurks_count\n        var days = (plurker.anniversary.years * 365) + plurker.anniversary.days;\n        var responses = Math.round(plurker.response_count / days);\n\n        next.querySelector(\"#hello .thumbs\").innerHTML = \"<img src='\" + plurker.avatar_big + \"' />\";\n        if (this.year == 2021) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>If \" + this.year + \" have been a rough year you, hopefully RePlurk will cheer you by bringing some good memories</p>\";\n        else if (this.year == 2022) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>It's 2020 v2, and this is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n        else next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>This is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\n        // Draw statistic\n        this.statistics.title('All Time', 'alltime');\n        if (plurker.anniversary.years && plurker.anniversary.days) {\n            this.statistics.draw('spansmall center posted', Math.round(plurker.plurks_count / days), 'I posted around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(Math.round(plurker.plurks_count / days), \"plurk\") + \" per day</i>\");\n\n            // Responses\n            var oneday = 16;\n            if (responses <= oneday) extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday / responses), \"hour\") + '</i>';\n            else extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday * 60 / responses), \"minute\") + '</i>';\n            this.statistics.draw('span2 center responded', responses, 'I responded around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(responses, \"time\") + \"</i> per day. \" + extra + \" when I'm not asleep\");\n\n            var join = new Date(plurker.join_date)\n            this.statistics.draw('spansmall center anniversary', \"<strong><i>\" + monthNames[join.getMonth()] + \"</i> <i>\" + join.getFullYear() + \"</i></strong> <em>\" + join.getDate() + \"</em>\", \"I joined Plurk <i>\" + plural(plurker.anniversary.years, \"year\") + \"</i> and <i>\" + plural(plurker.anniversary.days, \"day\") + \"</i> ago\");\n            this.statistics.draw('spansmall center badges', plurker.badges.length, \"I have <i><img src='https://api.iconify.design/fluent-emoji:shield.svg' /> \" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        } else {\n            this.statistics.draw('', '-', \"There is no data in my timeline\");\n            this.statistics.draw('', plurker.badges.length, \"But at least I have <i>\" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        }\n\n        // Scroll animation hello section\n        scroll.push(tl => {\n            tl.fromTo(next.querySelectorAll(\"#hello .text, #hello .thumbs\"), {\n                y: 0\n            }, {\n                y: window.innerHeight * -3 / 4,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sup\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * -1 / 10,\n                rotation: -10,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sub\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * 1 / 10,\n                rotation: 10,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .arrow-big\"), {\n                y: 0,\n                opacity: 1\n            }, {\n                y: window.innerHeight * 1 / 4,\n                opacity: 0,\n                ease: \"linear\",\n                duration: length / 4,\n            }, 0);\n            return tl;\n        }, tl => ScrollTrigger.create({\n            trigger: next.querySelectorAll(\"#hello\"),\n            start: \"0 0\",\n            end: \"100% 0\",\n            animation: tl,\n            scrub: true\n        }));\n        scroll.refresh();\n    }\n    // Display statistics\n    async displayStatistics() {\n        this.statistics.title('This Year', 'thisyear');\n        this.statistics.draw(\"statistics-loading thisyearloading\", \"\", \"<i class='month'>Data from December</i>1 of 2. Loading \" + this.year + \" timeline. It can take up to 1 minute.\");\n\n        this.loading.init(this.next);\n        this.loading.loop(this.fulldays);\n\n        // Load loop timeline\n        var getTimeline = async (offset) => {\n            offset = (!offset) ? \"\" : \"&offset=\" + offset;\n\n            var data = await api.call(\"?fetch=plurk&filter=my\" + offset, 1);\n            if (data.success) {\n                this.friends.add(data.message.plurk_users);\n                this.plurks = this.plurks.concat(data.message.plurks);\n\n                if (data.message.plurks.length > 0) {\n                    var lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\n                    if (lastposted >= this.endDate) {\n                        this.loading.update(\"Data from \" + monthNames[lastposted.getMonth()] + \" \" + lastposted.getFullYear(), this.fulldays - Math.floor((lastposted - this.endDate) / this.days));\n\n                        // Load next plurks\n                        await getTimeline(data.message.offset);\n                    } else {\n                        while (lastposted < this.endDate && this.plurks.length > 1) {\n                            this.plurks.pop();\n                            lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n                        }\n                        await this.loading.forcedone();\n                    }\n                } else {\n                    await this.loading.forcedone();\n                }\n            } else {\n                this.requestLogout();\n            }\n        }\n        await getTimeline(this.startDate);\n\n        // When loading done\n        var largest_poll_result = 0;\n        if (this.plurks.length > 1) {\n            // Count user statistics\n            this.statistics.plurks_count = 0;\n            this.plurks.forEach(plurk => {\n                // Calculate the statistics\n                if (plurk.responded) this.statistics.responded_count++;\n                if (plurk.owner_id == this.me.id) {\n                    this.statistics.plurks_count++;\n                    this.statistics.replurker_count += plurk.replurkers.length;\n                    this.statistics.replurker_list = this.statistics.listCount(this.statistics.replurker_list, plurk.replurkers);\n                    this.statistics.favourite_count += plurk.favorers.length;\n                    this.statistics.favorite_list = this.statistics.listCount(this.statistics.favorite_list, plurk.favorers);\n                    if (plurk.anonymous) this.statistics.whispers_count++;\n                    if (plurk.coins) this.statistics.coins_count += plurk.coins;\n                    if (plurk.porn) this.statistics.porn_count++;\n                    if (!plurk.response_count) this.statistics.noresponse_count++;\n                    if (plurk.plurk_type == 3) this.statistics.private_count++;\n                    this.statistics.response_count += plurk.response_count;\n\n                    if (plurk.content_raw.includes(\"instagram.com\")) this.statistics.instagrammer_count++;\n                    if (plurk.content_raw.includes(\"facebook.com\")) this.statistics.facebooker_count++;\n                    else if (plurk.content_raw.includes(\"fb.watch\")) this.statistics.facebooker_count++;\n                    if (plurk.content_raw.includes(\"twitter.com\")) this.statistics.twitterer_count++;\n                    if (plurk.content_raw.includes(\"reddit.com\")) this.statistics.redditor_count++;\n                    if (plurk.content_raw.includes(\"tiktok.com\")) this.statistics.tiktoker_count++;\n                    if (plurk.content_raw.includes(\"imgur.com\")) this.statistics.imgurer_count++;\n                    if (plurk.content_raw.includes(\"youtube.com\")) this.statistics.youtuber_count++;\n\n                    // Calculate polls\n                    if (plurk.with_poll) {\n                        var response_count = plurk.poll.response.response_count;\n                        this.statistics.poll_count++;\n                        this.statistics.poll_responder_count += response_count;\n\n                        if (largest_poll_result < response_count) {\n                            largest_poll_result = response_count;\n                            this.statistics.poll_popular_plurk = plurk;\n                        }\n                    }\n                } else if (plurk.responded) this.statistics.responded_other_count++;\n            });\n\n            // Sort based on date\n            this.plurks.sort((a, b) => new Date(b.posted) - new Date(a.posted));\n\n            // Draw statistics\n            try {\n                await this.statistics.drawAll(this.plurks);\n            } catch (error) {\n                console.info(\"Error while counting statistics\", error);\n            }\n\n            // Display extended statistics\n            this.displayExtendedStatistics();\n        } else {\n            if (this.plurks[0]) {\n                var date = new Date(plurk[0].posted);\n                inactive.draw(plurk[0], date.getFullYear());\n            }\n            else inactive.empty();\n        }\n    }\n    // Display extended statistics\n    async displayExtendedStatistics() {\n        // Deeper user statistics\n        this.statistics.title('Dig Deeper', 'digdeeper');\n        this.statistics.draw(\"statistics-loading digdeeperloading\", \"\", \"<i class='month'>Data from \" + this.year + \"</i> 2 of 2. Loading all responses. <small>If the loading seems to stop, refresh your browser tab to resume your download. Closing your browser tab will clear all downloaded data.</small>\");\n\n        // Load each post responses and calculate statistics\n        this.loading.init(this.next);\n        this.loading.loop(this.plurks.length);\n\n        // Get the responses for each plurks in parallel\n        this.plurks.sort((a, b) => new Date(a.posted) < new Date(b.posted));\n        for (var plurk of this.plurks) {\n            var date = new Date(plurk.posted);\n            this.loading.update(\"Data from \" + monthNames[date.getMonth()] + \" \" + date.getFullYear());\n\n            // Count all\n            await this.most.countAll(plurk);\n\n            // Count responses\n            if (plurk.response_count > 0 && (plurk.responded || plurk.owner_id == this.me.id)) {\n                var result = await api.call(\"?fetch=response&plurk_ids=\" + plurk.plurk_id);\n                if (result.success) for (var message of result.message) {\n                    // Add friends from response lists\n                    this.friends.add(message.friends);\n\n                    // Count the rest of statistics\n                    for (var response of message.responses) {\n                        // Find and count all responders\n                        await this.most.responders.count(response);\n                        this.most.interaction.count(response);\n                        this.most.mvp.count(response, \"response\");\n                        // Count all\n                        await this.most.countAll(response);\n                    }\n                } else {\n                    this.requestLogout();\n                    break;\n                }\n            }\n        }\n\n        // Display How Many Links\n        this.most.links.drawLinks();\n        // Display How Many Pictures\n        this.most.links.drawPics();\n\n        // Draw Results\n        // Display Most Responder\n        // this.most.responders.draw();\n\n        // Display Most Interaction\n        this.most.interaction.draw();\n\n        // Display Most Mentioned by me\n        // this.most.mentions.draw();\n\n        // Display How Many Words-Characters\n        this.most.types.draw();\n\n        // Display Most hashtags by me\n        this.most.hashtags.draw();\n\n        // Display Most My Emoticons\n        this.most.myemoticons.draw();\n\n        // Display MVP\n        this.statistics.replurker_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"replurk\");\n        });\n        this.statistics.favorite_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"favorite\");\n        });\n        this.most.mvp.draw();\n\n        // Replurk Badges\n        var gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Leader\";\n        if (this.me.gender == 1) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> King\";\n        if (this.me.gender == 0) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Queen\";\n\n        var tiktok = \"<img src='https://api.iconify.design/fluent-emoji:mirror-ball.svg' />\";\n        if (this.me.gender == 1) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:man-dancing-medium-dark-skin-tone.svg' />\";\n        if (this.me.gender == 0) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:woman-dancing-medium-dark-skin-tone.svg' />\";\n\n        var facebook = \"<img src='https://api.iconify.design/fluent-emoji:older-person.svg' />\";\n        if (this.me.gender == 1) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-man.svg' />\";\n        if (this.me.gender == 0) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-woman.svg' />\";\n\n        var plurker = \"<img src='https://api.iconify.design/fluent-emoji:person-bowing.svg' />\";\n        if (this.me.gender == 1) plurker = \"<img src='https://api.iconify.design/fluent-emoji:man-bowing.svg' />\";\n        if (this.me.gender == 0) plurker = \"<img src='https://api.iconify.design/fluent-emoji:woman-bowing.svg' />\";\n\n        this.statistics.title('RePlurk Badges', 'replurkbadges');\n        this.statistics.title('What are RePlurk Badges consist of? They are badges based on your activities in Plurk. Currently there are 16 badges in total, for activities such as: creating lots of polls (Polling ' + gender + '), receiving lots of coins (Plurk Coins Billionaire), writing lots of posts (Novelist and Keyboard Warrior), sharing lots of pictures and links (Meme Lord & Missing Link), sharing social medias urls (there are 7 badges), posting lots of adult posts (Adult-er), getting lots of replurks (Trendsetter), and constantly posting in Plurk almost everyday (Active Plurker).', 'replurkbadges description');\n        if (this.statistics.poll_count >= 5) this.statistics.draw('spansmall center badges pollbadges', \"<img src='https://api.iconify.design/fluent-emoji:ballot-box-with-ballot.svg' />\", \"<strong>Polling \" + gender + \"</strong>\");\n        if (this.statistics.coins_count >= 5) this.statistics.draw('spansmall center badges coinbadges', \"<img src='https://api.iconify.design/fluent-emoji:coin.svg' />\", \"<strong>Plurk Coins Billionaire</strong>\");\n        if (this.most.types.words >= 50000) this.statistics.draw('spansmall center badges novelistbadges', \"<img src='https://api.iconify.design/fluent-emoji:orange-book.svg' />\", \"<strong>Novelist</strong>\");\n        if (this.most.types.chars >= 1000000) this.statistics.draw('spansmall center badges keyboardbadges', \"<img src='https://api.iconify.design/fluent-emoji:keyboard.svg' />\", \"<strong>Keyboard Warrior</strong>\");\n        if (this.most.links.pics.length >= 356) this.statistics.draw('spansmall center badges memebadges', \"<img src='https://api.iconify.design/fluent-emoji:cat.svg' />\", \"<strong>Meme Lord</strong>\");\n        if (this.most.links.links.length >= 356 / 2) this.statistics.draw('spansmall center badges missingbadges', \"<img src='https://api.iconify.design/fluent-emoji:orangutan.svg' />\", \"<strong>The Missing Link</strong>\");\n        if (this.statistics.instagrammer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:camera.svg' />\", \"<strong>Instagrammer</strong>\");\n        if (this.statistics.facebooker_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', facebook, \"<strong>Facebooker</strong>\");\n        if (this.statistics.twitterer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:hatching-chick.svg' />\", \"<strong>The Real Chief Twit</strong>\");\n        if (this.statistics.redditor_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:robot.svg' />\", \"<strong>/r</strong>\");\n        if (this.statistics.tiktoker_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', tiktok, \"<strong>Tiktoker</strong>\");\n        if (this.statistics.imgurer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:framed-picture.svg' />\", \"<strong>Imgur-er</strong>\");\n        if (this.statistics.youtuber_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:movie-camera.svg' />\", \"<strong>Youtuber <img src='https://api.iconify.design/fluent-emoji:sleepy-face.svg' /></strong>\");\n        if (this.statistics.porn_count >= 10) this.statistics.draw('spansmall center badges adultbadges', \"<img src='https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg' />\", \"<strong>Adult-er</strong>\");\n        if (this.statistics.replurker_count >= 50) this.statistics.draw('spansmall center badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:trophy.svg' />\", \"<strong>Trendsetter</strong>\");\n        if (this.statistics.plurks_count >= 356 * 1.5) this.statistics.draw('spansmall center badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:military-medal.svg' />\", \"<strong>Active Plurker \" + plurker + \"</strong>\");\n\n        this.logSessionStrorageSize();\n    }\n\n    // Display LocalStorage stats\n    logSessionStrorageSize() {\n        function getSessionStorageSize() {\n            var totalBytes = 0;\n\n            for (var key in sessionStorage) {\n                if (sessionStorage.hasOwnProperty(key)) {\n                    var itemValue = sessionStorage.getItem(key);\n                    totalBytes += itemValue.length;\n                }\n            }\n\n            // Convert bytes to Megabytes\n            var totalMegabytes = Math.round((totalBytes / 1024 / 1024) * 100) / 100;\n\n            return totalMegabytes;\n        }\n\n        // Usage\n        var sessionStorageSize = getSessionStorageSize();\n        console.info('SessionStorage Size: ' + sessionStorageSize + ' MB');\n    }\n\n    // Check login status\n    async login(clear) {\n        var next = this.next;\n\n        this.me = { id: 0 };\n        this.friends.init();\n        this.statistics.init(next);\n        this.most.init();\n        this.plurks = [];\n\n        scroll.destroy();\n\n        window.scrollTo(0, 0);\n        this.browserColor(\"yellow\");\n\n        // Scroll animation menu and logout\n        this.scrollAnimate.menu();\n\n        // Check is server have open session\n        var tl = gsap.timeline();\n        tl.set(next.querySelector(\"#hello .arrow-big\"), {\n            opacity: 0\n        });\n\n        var data = await api.call(\"?\");\n        var interval = null;\n        if (data.success) {\n            this.me = data.message;\n\n            // Initial Plurk statistics\n            await this.displayPlurkerData();\n\n            // Display the rest of the statistics\n            this.displayStatistics();\n\n            // Scroll top top\n            await animate.top(next);\n\n            // Hide login page\n            if (clear) next.querySelector(\"#permission\").style.display = \"none\";\n            else tl = this.hideLoginPage(tl);\n\n            // Show statistic pages\n            await this.showStatisticPages(tl);\n\n            // Add logout event\n            next.querySelector(\"#logout\").onclick = () => this.requestLogout();\n\n            // Scroll animate statistics\n            this.scrollAnimate.statistics();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar();\n\n            scroll.refresh();\n        } else {\n            // Hide statistic pages\n            if (clear) next.querySelectorAll(\".grant\").forEach(function (el) { el.style.display = \"none\"; });\n            // Show login page\n            this.showLoginPage(tl);\n            // Request token\n            this.requestToken();\n\n            // Scroll animation permission section\n            this.scrollAnimate.permisions();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar(false);\n\n            scroll.refresh();\n\n            // Automatic login\n            interval = setInterval(async () => {\n                var data = await api.call(\"?\");\n\n                if (data.success) {\n                    clearInterval(interval);\n                    this.login();\n                }\n            }, 3000);\n        }\n\n        // Snap\n        next.querySelectorAll(\"section.snap\").forEach(el => scroll.snap(el));\n        next.querySelectorAll(\"section.snap-bottom\").forEach(el => scroll.snap(el, \"bottom\"));\n    }\n\n    // Run the API call\n    run(el) {\n        return new Promise(resolve => {\n            var length = reduceMotionFilter(1);\n            this.next = el;\n            this.browserColor(\"yellow\");\n\n            // Run the login\n            gsap.fromTo(this.next.querySelectorAll('#credits'), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length,\n                ease: \"power3.in\",\n                onComplete: async () => {\n                    // Change color\n                    this.browserColor(\"yellow\", 0);\n\n                    // Display login\n                    await this.login(true);\n\n                    resolve();\n                }\n            });\n        });\n    }\n}\n\nexport default replurk;"],"names":["constructor","classname","text","this","el","document","createElement","setAttribute","innerHTML","update","textContent","updateHTML","oldcolor","randomcolors","allColorArrays","arrayIndex","Math","floor","Date","now","length","colors","getRandomColor","color","gsap","utils","shuffle","slice","pop","next","plurks","me","friends","data","unavailable","parent","init","add","new_friends","Object","assign","find","async","user_id","findIndex","result","api","call","success","temp","message","user_info","id","push","findByUsername","nick_name","index","toLowerCase","getAvatar","has_profile_image","avatar","getAvatarByUsername","user_name","statistics","whispers_count","coins_count","porn_count","noresponse_count","private_count","replurker_count","replurker_list","favourite_count","favorite_list","response_count","responded_count","responded_other_count","responded_other_list","plurks_count","poll_count","poll_responder_count","poll_popular_plurk","redditor_count","tiktoker_count","instagrammer_count","imgurer_count","facebooker_count","twitterer_count","youtuber_count","querySelector","MutationObserver","mutationsList","forEach","mutation","addedNodes","afterDraw","observe","attributes","childList","subtree","clear","listCount","list","collection","value","count","title","style","loading","insertAdjacentHTML","anim","set","background","to","opacity","duration","ease","screen","matchMedia","tl","fromTo","children","y","window","innerHeight","ScrollTrigger","create","trigger","start","end","animation","scrub","number","Number","load","progress","snap","onUpdate","toggleActions","querySelectorAll","x","height","getAttribute","capture","refresh","onclick","generating","imgs","body","cursor","img","includes","localUrl","url","_","round","canvas","html2canvas","backgroundColor","logging","link","display","download","year","href","toDataURL","appendChild","click","removeChild","remove","setTimeout","wrapper","draw","drawDiv","drawGraph","drawImage","image","badge","drawHTML","html","drawLink","drawPost","toString","drawUserList","max","friend","plurker","plurkerElement","user","name","display_name","counts","outerHTML","scale","stagger","amount","from","attach","charttitle","node","chart","that","position","zIndex","hidden","insertAdjacentElement","attached","maxTop","insertTo","top","currentTop","killTweensOf","onComplete","destroy","drawAll","response_percentage","most","responses","replurk","favorite","sort","a","b","findregex","regex","replace","content","storage","match","idx","responders","mentions","dataAll","myemoticons","hashtags","links","pics","types","words","chars","countAll","content_raw","plurk_id","replurkers_count","favorite_count","response","i","undefined","loved","pic","split","drawLinks","drawPics","owner_id","plurk_type","posted","interaction","multiplier","console","info","mvp","type","error","inactive","empty","prev_count","clean","isComplete","item","Promise","resolve","done","loop","month","fakeupdate","forcedone","width","padding","margin","overflow","scrollAnimate","credits","permisions","rotation","menu","el1","el2","direction","browserBar","login","onLeave","browserColor","onEnterBack","onEnter","startDate","endDate","days","fulldays","getSetStateColor","state","darkmode","browserColorDark","browserColorLight","setDarkMode","showLoginPage","hideLoginPage","showStatisticPages","timeline","onStart","hideStatisticPages","animate","quick","loginmessage","requestLogout","abort","requestToken","tokenlink","then","displayPlurkerData","extra","anniversary","years","avatar_big","oneday","join","join_date","getMonth","getFullYear","getDate","badges","displayStatistics","getTimeline","offset","plurk_users","concat","lastposted","largest_poll_result","plurk","responded","replurkers","favorers","anonymous","coins","porn","with_poll","poll","displayExtendedStatistics","date","gender","tiktok","facebook","logSessionStrorageSize","sessionStorageSize","totalBytes","key","sessionStorage","hasOwnProperty","getItem","getSessionStorageSize","scrollTo","interval","setInterval","clearInterval","run"],"sourceRoot":""}