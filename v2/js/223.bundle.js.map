{"version":3,"file":"223.bundle.js","mappings":"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","sources":["webpack://dwaan/./src/js/replurk/icons.js","webpack://dwaan/./src/js/replurk/span.js","webpack://dwaan/./src/js/replurk/colors.js","webpack://dwaan/./src/js/replurk/element.js","webpack://dwaan/./src/js/replurk/main.js"],"sourcesContent":["\"use strict\";\n\nvar iconLink = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\"><path id=\"right\" d=\"M19.188,12.001c0,1.1-0.891,2.015-1.988,2.015l-4.195-0.015C13.543,15.089,13.968,16,15.002,16h3C19.658,16,21,13.657,21,12s-1.342-4-2.998-4h-3c-1.034,0-1.459,0.911-1.998,1.999l4.195-0.015C18.297,9.984,19.188,10.901,19.188,12.001z\"/><path id=\"center\" d=\"M8,12c0,0.535,0.42,1,0.938,1h6.109c0.518,0,0.938-0.465,0.938-1c0-0.534-0.42-1-0.938-1H8.938C8.42,11,8,11.466,8,12z\"/><path id=\"left\" d=\"M4.816,11.999c0-1.1,0.891-2.015,1.988-2.015L11,9.999C10.461,8.911,10.036,8,9.002,8h-3c-1.656,0-2.998,2.343-2.998,4s1.342,4,2.998,4h3c1.034,0,1.459-0.911,1.998-1.999l-4.195,0.015C5.707,14.016,4.816,13.099,4.816,11.999z\"/></svg>';\n\nexport default iconLink;","\"use strict\";\n\nimport { _q, _qAll, animateNumber } from '../helpers/helper.js';\n\n/*\n    Simple span element object:\n\n    1. update(text): update the content with text value, and animate it if it's number\n    2. updateHTML(text): update the content with html value\n*/\n\nclass span {\n    constructor(classname, text) {\n        this.el = document.createElement('span');\n        this.el.setAttribute(\"class\", classname);\n        this.el.innerHTML = text;\n    }\n\n    update(text) {\n        animateNumber(this.el.textContent, text, (text) => {\n            this.el.textContent = text;\n        });\n    }\n\n    updateHTML(text) {\n        this.el.innerHTML = text;\n    }\n}\n\nexport default span;","\"use strict\";\n\nimport { gsap } from 'gsap';\n\n/*\n    Color randomizer\n\n    1. colors: array of colors value\n    2. getRandomColor(): get the randomized color from colors list\n*/\n\nclass colors {\n    constructor() {\n        this.oldcolor = \"\";\n        this.randomcolors = [];\n\n        const allColorArrays = [\n            [\n                'rgb(63,94,251)',     // Dodger Blue\n                'rgb(252,70,107)',    // Radical Red\n                'rgb(34,193,195)',    // Light Sea Green\n                'rgb(253,187,45)',    // Goldenrod\n                'rgb(195,34,190)',    // Deep Pink\n                'rgb(219,158,0)',     // Golden Yellow\n                'rgb(75,231,152)',    // Medium Spring Green\n                'rgb(195,34,103)',    // Cerise\n                'rgb(45,182,253)'     // Dodger Blue (Lighter)\n            ]\n        ];\n\n        const seconds = Math.floor(Date.now() / 1000); // Get current time in seconds\n        const arrayIndex = seconds % allColorArrays.length; // Use seconds to determine the index\n        this.colors = allColorArrays[arrayIndex];\n    }\n\n    getRandomColor() {\n        var color;\n        do {\n            this.randomcolors = gsap.utils.shuffle(this.colors).slice();\n        } while (this.oldcolor == (color = this.randomcolors.pop()));\n        this.oldcolor = color;\n        return color;\n    }\n}\n\nexport default colors;","\"use strict\";\n\nimport span from \"./span.js\";\n\n/*\n    Plurk element object spesification:\n\n    1. id: contain the id name\n    2. user: contain user object\n    3. attached: status of element is attached in DOM or not\n    4. create(): create the DOM element\n    4. destroy(): remove the DOM element\n    4. update(): update the DOM element based on it's current value\n    5. insertTo(element): insert DOM element to spesific element, also will check if it's already created or not\n*/\n\nclass element {\n    constructor(id, data, avatarurl, customcreate) {\n        this.id = id;\n        this.user = data;\n        this.user_id = data.id;\n        this.value = data.nick_name;\n        this.nick_name = data.nick_name;\n        this.attached = false;\n        this.hidden = true;\n        this.count = 1;\n        this.position = 0;\n        this.customcreate = customcreate;\n        this.el = document.createElement('a');\n        this.created = false;\n        this.avatarurl = avatarurl;\n        this.counts = new span('count', this.count);\n    }\n\n    create() {\n        this.created = true;\n\n        this.el.setAttribute(\"id\", this.id + this.user_id);\n        this.el.setAttribute(\"class\", 'plurkers');\n        this.el.setAttribute(\"href\", 'https://plurk.com/' + this.user.nick_name);\n        this.el.setAttribute(\"target\", '_BLANK');\n\n        if (!this.customcreate) {\n            this.avatar = new span('avatar', '<img src=\"' + this.avatarurl + '\" />');\n            this.name = new span('name', this.user.display_name);\n            this.counts = new span('count', this.count);\n            this.el.appendChild(this.avatar.el);\n            this.el.appendChild(this.name.el);\n            this.el.appendChild(this.counts.el);\n        } else {\n            this.customcreate(this);\n        }\n    }\n\n    insertTo(element) {\n        if (!this.created) this.create();\n\n        this.attached = true;\n        element.insertAdjacentElement(\"beforeend\", this.el);\n    }\n\n    destroy() {\n        this.attached = false;\n\n        if (this.el) {\n            this.el.remove();\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    update() {\n        // Only update when it's attached\n        if (this.attached) {\n            this.counts.update(this.count);\n        }\n    }\n}\n\nexport default element;","\"use strict\";\n\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js';\nimport api from \"../helpers/api.js\";\nimport scroll from \"../helpers/scroll.js\";\nimport darkmode from \"../helpers/darkmode.js\";\nimport animate from \"../helpers/animate.js\";\nimport html2canvas from \"html2canvas\";\nimport { _q, _qAll, hasClass, plural, monthNames, animateNumber, datediff, pluralinwords, reduceMotionFilter, waitForImg } from '../helpers/helper.js';\n\nimport iconLink from \"./icons.js\";\nimport span from \"./span.js\";\nimport colors from \"./colors.js\";\nimport element from \"./element.js\";\n\n/*\n    Replurk class\n*/\nclass replurk {\n    // Draw in which element?\n    next = document.createElement('div');\n    // Plurks array\n    plurks = [];\n    // Plurker profile object\n    me = { \"id\": 3203568, \"has_profile_image\": 1, \"timeline_privacy\": 0, \"nick_name\": \"dwan\", \"display_name\": \"Dwan\", \"date_of_birth\": \"Sat, 29 Oct 1983 00:01:00 GMT\", \"avatar\": 41917598, \"gender\": 1, \"karma\": 199.24, \"premium\": true, \"verified_account\": false, \"dateformat\": 3, \"default_lang\": \"en\", \"friend_list_privacy\": \"public\", \"name_color\": \"FFA59A\", \"full_name\": \"Dwan B.\", \"location\": \"Tel Aviv-Yafo, Dan, Israel\", \"timezone\": \"Asia/Jerusalem\", \"phone_verified\": 0, \"bday_privacy\": 1, \"plurks_count\": 14598, \"response_count\": 79484, \"pinned_plurk_id\": 0, \"background_id\": 0, \"show_ads\": false, \"show_location\": 0, \"profile_views\": 36112, \"avatar_small\": \"https://avatars.plurk.com/3203568-small41917598.gif\", \"avatar_medium\": \"https://avatars.plurk.com/3203568-medium41917598.gif\", \"avatar_big\": \"https://avatars.plurk.com/3203568-big41917598.jpg\", \"about\": \"Mr. Goat\\u2019s dad and full-time husband\", \"about_renderred\": \"Mr. Goat\\u2019s dad and full-time husband\", \"page_title\": \"The world revolve around me\", \"recruited\": 14, \"relationship\": \"married\", \"friends_count\": 571, \"fans_count\": 498, \"join_date\": \"Wed, 15 Oct 2008 07:48:05 GMT\", \"privacy\": \"world\", \"accept_private_plurk_from\": \"all\", \"post_anonymous_plurk\": false, \"badges\": [\"10_invites\", \"14\", \"9\", \"10000_views\", \"10000_plurks\", \"50000_comments\", \"upload_profile_image\", \"50_fans\", \"coin\"], \"link_facebook\": false, \"setup_facebook_sync\": false, \"setup_twitter_sync\": false, \"setup_weibo_sync\": false, \"filter\": { \"porn\": 2, \"anonymous\": 0, \"keywords\": null }, \"anniversary\": { \"years\": 13, \"days\": 27 }, \"phone_number\": null, \"creature\": 0, \"creature_url\": null, \"creature_special\": 1, \"creature_special_url\": null };\n\n\n    // Statistics plurker object renderer\n    statistics = {\n        // Storage\n        whispers_count: 0,\n        coins_count: 0,\n        porn_count: 0,\n        noresponse_count: 0,\n        private_count: 0,\n        replurker_count: 0,\n        replurker_list: [],\n        favourite_count: 0,\n        favorite_list: [],\n        response_count: 0,\n        responded_count: 0,\n        responded_other_count: 0,\n        responded_other_list: [],\n        plurks_count: 0,\n        poll_count: 0,\n        poll_responder_count: 0,\n        poll_popular_plurk: {},\n        redditor_count: 0,\n        tiktoker_count: 0,\n        instagrammer_count: 0,\n        imgurer_count: 0,\n        facebooker_count: 0,\n        twitterer_count: 0,\n        youtuber_count: 0,\n        id: 0,\n        // Other\n        next: document.createElement('div'),\n        el: document.createElement('div'),\n        randomcolors: [],\n        parent: this,\n        init: function (next) {\n            this.whispers_count = 0;\n            this.coins_count = 0;\n            this.porn_count = 0;\n            this.noresponse_count = 0;\n            this.private_count = 0;\n            this.replurker_count = 0;\n            this.replurker_list = [];\n            this.favourite_count = 0;\n            this.favorite_list = [];\n            this.response_count = 0;\n            this.responded_count = 0;\n            this.responded_other_count = 0;\n            this.responded_other_list = [];\n            this.plurks_count = 0;\n            this.id = 0;\n            this.next = next;\n            this.randomcolors = [];\n\n            this.el = this.next.querySelector(\"#statistics\");\n\n            // Obverse when element is added to DOM\n            var observer = new MutationObserver((mutationsList) => {\n                mutationsList.forEach(mutation => {\n                    mutation.addedNodes.forEach(el => {\n                        this.afterDraw(el);\n                    });\n                });\n            });\n            observer.observe(this.el, {\n                attributes: true,\n                childList: true,\n                subtree: false\n            });\n        },\n        clear: function () {\n            this.el.innerHTML = \"\";\n        },\n        listCount: function (list, collection) {\n            if (collection.length > 0) {\n                collection.forEach(value => {\n                    var index = list.findIndex(el => el.id == value)\n\n                    if (index < 0) list.push({ id: value, count: 1 });\n                    else list[index].count++;\n                });\n            }\n\n            return list;\n        },\n        title: function (text, style = \"\", loading = false) {\n            if (loading) this.el.insertAdjacentHTML('beforeend', '<div class=\"statistics middle statistics-title ' + style + '\"><h3><span>' + text + '</span><span class=\"loading\"><i/></span></h3></div>');\n            else this.el.insertAdjacentHTML('beforeend', '<div class=\"statistics middle statistics-title ' + style + '\"><h3><span>' + text + '</span><span class=\"line\"><i/></span></h3></div>');\n        },\n        afterDraw: function (el) {\n            var length = reduceMotionFilter(1);\n\n            if (hasClass(el, 'statistics-wrap')) {\n                var color = new colors();\n                var randomcolors = [color.getRandomColor(), color.getRandomColor()]\n                var anim = el.querySelector(\".anim\");\n\n                gsap.set(anim, {\n                    background: 'radial-gradient(at 10% 10%, ' + randomcolors[0] + ' 0%, ' + randomcolors[1] + ' 100%)'\n                });\n\n                gsap.to(anim, {\n                    opacity: 1,\n                    duration: length / 2,\n                    ease: \"power3.out\"\n                }, 0);\n\n                // Scroll animation wrap section\n                var screen = gsap.matchMedia();\n                screen.add(\"(min-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: window.innerHeight * 1 / 5\n                        }, {\n                            y: 0,\n                            ease: \"ease.out\"\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"0 100%-=100px\",\n                            animation: tl,\n                            scrub: 2\n                        });\n                    });\n                });\n                screen.add(\"(max-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: 0\n                        }, {\n                            y: 0\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"100px 100%-=100px\",\n                            animation: tl,\n                            scrub: 1\n                        });\n                    });\n                });\n\n                scroll.push(function (tl) {\n                    if (el.querySelector(\".big\")) {\n                        var number = Number(el.querySelector(\".big\").textContent);\n                        if (number > 0) {\n                            var load = { progress: 0 };\n                            var duration = 1;\n                            if (number >= 500 && number < 1000) duration = 2;\n                            else if (number >= 1000 && number < 99999) duration = 3;\n                            else if (number >= 99999) duration = 4;\n                            tl.to(load, {\n                                progress: number,\n                                snap: \"progress\",\n                                ease: \"power3.out\",\n                                duration: duration,\n                                onUpdate: () => {\n                                    el.querySelector(\".big\").textContent = plural(load.progress);\n                                }\n                            }, 0);\n                        }\n                    }\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"0 100%-=100px\",\n                        end: \"100px 100%-=100px\",\n                        animation: tl,\n                        toggleActions: \"play none none none\"\n                    });\n                });\n            } else {\n                // Scroll animation line section\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelectorAll(\"i\"), {\n                        x: \"-100%\"\n                    }, {\n                        x: \"0%\",\n                        ease: \"ease.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"100% 100%\",\n                        end: \"100% 0\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'drawgraph')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".graph\"), {\n                        y: 100\n                    }, {\n                        y: 0\n                    }, 0);\n\n                    tl.fromTo(el.querySelector(\".graph i\"), {\n                        height: \"0%\"\n                    }, {\n                        height: el.querySelector(\".graph i\").getAttribute(\"data-number\") + \"%\"\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'coins')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".big\"), {\n                        y: \"50%\"\n                    }, {\n                        y: 0,\n                        ease: \"power3.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 2\n                    });\n                });\n            }\n\n            // Capture function\n            this.capture(el);\n\n            scroll.refresh();\n        },\n        capture: (el) => {\n            var capture = el.querySelector(\".capture small\");\n            if (!capture) return;\n\n            capture.onclick = async () => {\n                if (capture.generating) return;\n\n                var imgs = el.querySelectorAll(\"img\");\n\n                // Informing user the process is starting\n                capture.generating = true;\n                document.body.style.cursor = \"wait\";\n\n                // Proxying images\n                imgs.forEach(img => {\n                    if (!img.getAttribute(\"src\").includes(\"http\") || img.localUrl) return;\n\n                    img.localUrl = true;\n                    img.setAttribute(\"src\", api.url + \"?img=\" + img.getAttribute(\"src\"));\n                });\n                // Load and cache image\n                await waitForImg(imgs, (_, progress) => {\n                    capture.innerHTML = \"Downloading images... (\" + Math.round(progress) + \"%)\";\n                });\n\n                // HTML to Canvas magic\n                capture.innerHTML = \"Processing...\";\n                var canvas = await html2canvas(el.querySelector(\".anim\"), {\n                    backgroundColor: null,\n                    logging: false,\n                });\n\n                // Download the output\n                var link = document.createElement(\"a\");\n                link.style.display = \"none\";\n                link.download = \"replurk\" + this.year + \"-\" + Date.now() + \".png\";\n                link.href = canvas.toDataURL();\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n                link.remove();\n\n                // Reset button after 3s\n                capture.innerHTML = \"Done\";\n                document.body.style.cursor = \"default\";\n                setTimeout(() => {\n                    capture.innerHTML = \"Recapture\";\n                    capture.generating = false;\n                }, 3000);\n            }\n        },\n        wrapper: function (style, text, background) {\n            if (!background) return '<div class=\"statistics middle statistics-wrap ' + style + '\"><div class=\"anim\">' + text + '</div><div class=\"capture\"><small>Capture</small></div></div>';\n            else return '<div class=\"statistics middle statistics-wrap ' + style + '\"><div class=\"anim\" style=\"background-images:url(' + background + ')\">' + text + '</div><div class=\"capture\"><small>Capture</small></div></div>';\n        },\n        draw: function (style, number, text, background) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"big\">' + number + '</span>\\\n\t\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'), background);\n            }\n        },\n        drawDiv: function (style, text) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '<div class=\"box\">' + text + '</div>'));\n        },\n        drawGraph: function (style, number, text) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawgraph movetitle\", '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"graph\"><i data-number=\"' + number + '\"></i></span>\\\n\t\t\t\t\t\t<span class=\"info\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'));\n            }\n        },\n        drawImage: function (style, image, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawimage\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span class=\"avatar\"><img src=\"' + image + '\" /></span>\\\n\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawHTML: function (style, title, html) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawhtml\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<div class=\"htmlcontent\">' + html + '</div>\\\n\t\t\t\t\t<div class=\"title\">' + title + '</div>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawLink: function (style, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawlink\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span>' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawPost: function (style, id, title, text, badge) {\n            var url = \"\";\n            if (id) url = 'https://plurk.com/p/' + id.toString(36);\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawpost\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<a href=\"' + url + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<p class=\"post\">' + text + '</p>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawUserList: async function (style, id, title, list) {\n            var html = \"\";\n            var max = list.length >= 5 ? 5 : list.length;\n            var length = reduceMotionFilter(1);\n\n            this.drawHTML(style + \" drawuserlist movetitle \" + id, title, \"<span class='info'>Downloading user data</span>\");\n            for (var index = 0; index < max; index++) {\n                var value = list[index];\n                if (value) {\n                    var friends = this.parent.friends;\n                    var friend = await friends.find(value.id);\n                    if (friend) {\n                        var plurker = new element(value.id, friend, \"\", plurker => {\n                            plurker.avatar = new span('avatar', '<img src=\"' + friends.getAvatar(plurker.user.id) + '\" />');\n                            plurker.name = new span('name', plurker.user.display_name);\n                            plurker.counts = new span('count', value.count);\n                            plurker.el.appendChild(plurker.avatar.el);\n                            plurker.el.appendChild(plurker.name.el);\n                            plurker.el.appendChild(plurker.counts.el);\n                            plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.user.nick_name);\n                        });\n                        plurker.create();\n                        html += plurker.el.outerHTML;\n                    } else {\n                        max++;\n                    }\n                }\n            }\n            this.el.querySelector(\".\" + id + \" .htmlcontent\").innerHTML = html;\n\n            // Stagger animation\n            if (id == 'mostinteraction' || id == 'mvp') {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        scale: .3,\n                        opacity: 0\n                    }, {\n                        scale: 1,\n                        opacity: 1,\n                        ease: \"elastic.out(1.2, 0.5)\",\n                        duration: length * 3 / 4,\n                        stagger: {\n                            amount: length / 3,\n                            from: \"end\"\n                        }\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"50% 100%\",\n                        end: \"50% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            } else {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        y: 50,\n                        opacity: 0\n                    }, {\n                        y: 0,\n                        opacity: 1,\n                        duration: length,\n                        ease: \"power3.out\",\n                        stagger: length / 3\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"0% 100%\",\n                        end: \"0% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            }\n        },\n        attach: function (charttitle, node, max) {\n            var that = this;\n            var id = node.id;\n            var chart;\n            var title;\n            var text;\n            var anim;\n            var wrapper;\n            var capture;\n\n            var opacity = 0;\n            var position = max;\n            var zIndex = 0;\n            var hidden = true;\n\n            if (node.position <= max) {\n                hidden = false;\n                zIndex = position = (node.position - 1);\n                opacity = 1;\n            }\n\n            // Create the box\n            if (!that.next.querySelector(\".\" + id)) {\n                chart = document.createElement('div');\n                chart.setAttribute('class', 'chart');\n\n                title = document.createElement('div');\n                title.setAttribute('class', 'title');\n                title.innerHTML = charttitle;\n\n                text = document.createElement('div');\n                text.setAttribute('class', 'text');\n                text.appendChild(chart);\n                text.appendChild(title);\n\n                anim = document.createElement('div');\n                anim.setAttribute('class', 'anim');\n                anim.appendChild(text);\n\n                text = document.createElement('small');\n                text.innerHTML = \"Capture\";\n                capture = document.createElement('div');\n                capture.setAttribute('class', 'capture');\n                capture.appendChild(text);\n\n                wrapper = document.createElement('div');\n                wrapper.setAttribute('class', 'statistics middle statistics-wrap attach ' + id);\n                wrapper.appendChild(anim);\n                wrapper.appendChild(capture);\n\n                that.el.insertAdjacentElement(\"beforeend\", wrapper);\n            }\n\n            // Add  element\n            if (!hidden && !node.attached) {\n                var maxTop = max / (max - 1) * 100;\n\n                node.insertTo(that.el.querySelector(\".\" + id + ' .chart'));\n\n                gsap.set(node.el, {\n                    top: maxTop + \"%\",\n                    opacity: 0,\n                    zIndex: 0,\n                });\n            }\n            // Update position\n            if (!hidden || !node.hidden) {\n                var currentTop = position / (max - 1) * 100;\n                var length = reduceMotionFilter(1);\n\n                gsap.killTweensOf(node.el);\n                gsap.to(node.el, {\n                    top: currentTop + \"%\",\n                    opacity: opacity,\n                    zIndex: zIndex,\n                    duration: length / 2,\n                    ease: \"power3.out\",\n                    onComplete: function () {\n                        if (hidden) {\n                            node.destroy();\n                        }\n                    }\n                });\n                node.hidden = hidden;\n            }\n\n            node.update();\n        },\n        drawAll: async function (plurks) {\n            var response_percentage = Math.round((this.plurks_count - this.noresponse_count) / this.plurks_count * 100);\n\n            this.parent.most.responses.draw(plurks);\n            this.drawGraph('center graph percentage', response_percentage, 'Around <i>' + response_percentage + '%</i> of my plurks got <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> responses ' + ((response_percentage <= 50) ? '<img src=\"https://api.iconify.design/fluent-emoji:crying-face.svg\" />' : '<img src=\"https://api.iconify.design/fluent-emoji:star-struck.svg\" />'));\n\n            this.draw('spansmall recievereplurk', this.replurker_count, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + plural(this.replurker_count, 'replurk') + '</i>');\n            this.parent.most.replurk.draw(plurks);\n\n            this.parent.most.favorite.draw(plurks);\n            this.draw('spansmall recievelove', this.favourite_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + plural(this.favourite_count, 'love') + '</i>');\n\n            this.draw('spansmall privateplurk', this.private_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:lip.svg\" /> ' + plural(this.private_count, 'private plurk') + '</i>');\n            this.draw('spansmall whisper', this.whispers_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-in-clouds.svg\" /> ' + plural(this.whispers_count, 'whisper') + '</i>');\n            this.draw('spansmall porn', this.porn_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg\" /> ' + plural(this.porn_count, 'adult plurk') + '</i>');\n\n            this.draw('span2 responsecount', this.plurks_count + \" &rarr; \" + this.response_count, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(this.response_count, 'response') + '</i> from <i>' + plural(this.plurks_count, 'plurk') + '</i>');\n            this.draw('spansmall center coins', this.coins_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:coin.svg\" /> ' + plural(this.coins_count, 'coin') + '</i>');\n\n            if (this.favorite_list.length > 0) this.drawUserList(\"avatar\", \"loved\", 'These Plurkers <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Loved</i> My Posts', this.favorite_list.sort(this.parent.most.sort));\n            if (this.replurker_list.length > 0) this.drawUserList(\"avatar\", \"replurked\", 'These Plurkers likes to <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Replurked</i> My Posts', this.replurker_list.sort(this.parent.most.sort));\n        }\n    };\n\n    // Most statistics object renderer\n    most = {\n        parent: this,\n        sort: function (a, b) {\n            return b.count - a.count;\n        },\n        // Find and count all based on regex\n        findregex: function (regex, replace, content, storage) {\n            var result = content.match(regex);\n\n            for (var index in result) {\n                var value = replace(result[index]);\n                var idx = storage.findIndex(el => el.value == value);\n\n                if (idx < 0) {\n                    storage.push({\n                        id: value,\n                        value: value,\n                        count: 1\n                    });\n                } else {\n                    storage[idx].count++;\n                }\n            }\n\n            return result;\n        },\n        init: function () {\n            this.responders.data = [];\n            this.mentions.data = [];\n            this.mentions.dataAll = [];\n            this.myemoticons.data = [];\n            this.hashtags.data = [];\n            this.links.links = [];\n            this.links.pics = [];\n            this.types.words = 0;\n            this.types.chars = 0;\n        },\n        countAll: async function (data) {\n            // Find and count all my emoticons from my post\n            if (data.user_id == this.parent.me.id) this.myemoticons.count(data.content);\n            // Find and count all mentions from my post\n            await this.mentions.count(data.content_raw);\n            // Find and count all hashtags from my post\n            if (data.user_id == this.parent.me.id) this.hashtags.count(data.content);\n            // Find and count all links and pictures post from my post\n            if (data.user_id == this.parent.me.id) this.links.count(data.content, data.plurk_id, data.response_count, data.replurkers_count, data.favorite_count);\n            // Find and count characther and words from my post\n            if (data.user_id == this.parent.me.id) this.types.count(data.content_raw);\n        },\n        responders: {\n            data: [],\n            parent: this,\n            count: async function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.user_id == response.user_id;\n                });\n\n                if (index < 0) {\n                    var friends = this.parent.friends;\n                    var user = await friends.find(response.user_id);\n                    this.data.push(new element('mostresponders', user, friends.getAvatar(user.id)));\n                } else {\n                    this.data[index].count++;\n                }\n                this.data.sort(this.parent.most.sort);\n\n                // Update top 5\n                var index = 1;\n                for (var i = 0; i < this.data.length; i++) {\n                    this.data[i].position = this.data.length;\n                    if (this.data[i].user_id != this.parent.me.id && this.data[i].user_id != 99999) {\n                        this.data[i].position = index++;\n                        this.parent.statistics.attach('<i>Top <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> Responders</i> <strong>of My Timeline</strong>', this.data[i], 5);\n                    }\n                }\n            },\n            draw: function () {\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatar(this.data[index].user_id), 'https://plurk.com/' + this.data[index].user.nick_name, '<i>Most Responder</i>', this.data[index].user.display_name, this.data[index].count);\n                }\n            }\n        },\n        mentions: {\n            data: [],\n            dataAll: [],\n            parent: this,\n            count: async function (content) {\n                var result = this.parent.most.findregex(/\\@(\\w{1,30})[\\ |\\:]/g, value => value.replace(/\\@|\\ |\\:/g, ''), content, this.data);\n                var max = 5;\n                var index = 1;\n\n                if (result) {\n                    // Update top 5\n                    this.data.sort(this.parent.most.sort);\n                    for (var idx = 0; idx < this.data.length; idx++) {\n                        this.data[idx].position = this.data.length;\n\n                        if (index <= max) {\n                            var user = await this.parent.friends.findByUsername(this.data[idx].value);\n\n                            if (this.data[idx].el == undefined) {\n                                this.data[idx] = new element('mostmentionedbyme', user, \"\", plurker => {\n                                    plurker.avatar = new span('avatar', '<img src=\"' + this.parent.friends.getAvatar(plurker.user_id) + '\" />');\n                                    plurker.name = new span('name', \"@\" + plurker.nick_name);\n                                    plurker.counts = new span('count', plurker.count);\n                                    plurker.el.appendChild(plurker.avatar.el);\n                                    plurker.el.appendChild(plurker.name.el);\n                                    plurker.el.appendChild(plurker.counts.el);\n                                    plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.nick_name);\n                                });\n                            }\n\n                            if (user.id != this.parent.me.id && user.id != 99999) {\n                                this.data[idx].position = index++;\n                                this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/fluent-emoji:person-raising-hand-light.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                            }\n                        }\n\n                        if (this.data[idx].el) this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/fluent-emoji:person-raising-hand-light.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                    }\n                }\n            },\n            draw: function () {\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatarByUsername(this.data[index].value), 'https://plurk.com/' + this.data[index].value, '<i>Most Mentioned</i> by me', \"@\" + this.data[index].value, this.data[index].count);\n                }\n            }\n        },\n        myemoticons: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/emoticon_my\\\" src=\\\"(.*?)\\\"/g, function (value) {\n                    return value.replace(/emoticon_my\\\" src=\\\"|\\\"/gi, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 7;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><img src=\"' + this.data[i].value + '\" /> <span class=\"count\">' + this.data[i].count + '</span></div>';\n                if (html != \"\") this.parent.statistics.drawHTML(\"smallspan grid emoticons\", 'Most Used <i>My Emoticons</i>', html);\n            }\n        },\n        hashtags: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/hashtag\\\"\\>(.*?)\\</g, function (value) {\n                    return value.replace(/hashtag\\\"\\>\\#|\\.\\<|\\</g, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 5;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><a href=\"https://plurk.com/search?q=' + this.data[i].value + '\" target=\"_BLANK\" /><span class=\"count\">' + this.data[i].count + '</span> #' + this.data[i].value + '</a></div>';\n                if (html != \"\") {\n                    html = \"<strong>#</strong>\" + html;\n                    this.parent.statistics.drawHTML(\"hashtags\", 'Most Used <i>Hashtags</i>', html);\n                }\n            }\n        },\n        links: {\n            data: [],\n            links: [],\n            pics: [],\n            parent: this,\n            count: function (content, id, response, replurk, loved) {\n                var result = content.match(/href\\=\\\"(.*?)\\\"\\ class=\\\"(.*?)\\\"\\ rel/g);\n                var count = 0;\n                var pics = [];\n                var links = [];\n\n                if (result) for (var data of result) {\n                    if (!this.data[id]) {\n                        count = response + (replurk * 250) + (loved * 50);\n                    }\n\n                    if (data.includes(\"pictureservices\")) {\n                        this.pics.push(data);\n                        if (count > 0) {\n                            var pic = data.split('\\\"')\n                            pics.push({\n                                url: pic[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n                    }\n                    else {\n                        this.links.push(data);\n                        if (count > 0) {\n                            var link = data.split('\\\"')\n                            links.push({\n                                url: link[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n\n                    }\n                }\n\n                if (count) this.data.push({\n                    id: id,\n                    pics: pics,\n                    links: links,\n                    count: count,\n                    content: content\n                });\n            },\n            drawLinks: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].links.length > 0) {\n                        var link = this.data[index].links[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].id.toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"post\"><div class=\"info\">' + this.data[index].content + '</div><div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + link.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + link.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + link.loved + '</span>' + url + '</div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n                if (this.links.length > 0) this.parent.statistics.drawDiv('spansmall sharedlinks', \"<div class='title'>I shared <i>🔗 \" + plural(this.links.length, 'link') + '</i> and this is the most popular one</div>' + result);\n            },\n            drawPics: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].pics.length > 0) {\n                        var pics = this.data[index].pics[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"box\"><div class=\"image\" style=\"background-image: url(' + api.url + \"?img=\" + pics.url + ')\"></div><div class=\"post\">' + this.data[index].content + '<div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + pics.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + pics.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + pics.loved + '</span>' + url + '</div></div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n\n                if (this.pics.length > 0) this.parent.statistics.draw('spansmall sharedpictures', this.pics.length, 'I shared <i>🖼 ' + plural(this.pics.length, 'image') + '</i>');\n                if (result != \"\") this.parent.statistics.drawHTML('span2 previewpics', '<i>🖼 Most Popular Image</i>', result);\n            }\n        },\n        types: {\n            words: 0,\n            chars: 0,\n            parent: this,\n            count: function (content) {\n                var words = content.split(\" \");\n\n                this.chars += content.length;\n                this.words += words.length;\n            },\n            draw: function () {\n                if (this.chars > 0) this.parent.statistics.draw('span2 mediumnumber', this.chars, 'I typed more than  <i>' + pluralinwords(this.chars, 'character') + '</i>, around <i>' + pluralinwords(this.words, 'word') + '</i> this year');\n            }\n        },\n        responses: {\n            parent: this,\n            sort: function (a, b) {\n                return b.response_count - a.response_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.response_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostresponded', value.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> Most Responded</i> ' + datediff(value.posted), value.content, value.response_count);\n                        return;\n                    }\n                }\n            }\n        },\n        replurk: {\n            parent: this,\n            sort: function (a, b) {\n                return b.replurkers_count - a.replurkers_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.replurkers_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostreplurked', value.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Most Replurked</i> ' + datediff(value.posted), value.content, value.replurkers_count);\n                        return;\n                    }\n                }\n            }\n        },\n        favorite: {\n            parent: this,\n            sort: function (a, b) {\n                return b.favorite_count - a.favorite_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.favorite_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostfavorited', value.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Most Loved</i> ' + datediff(value.posted), value.content, value.favorite_count);\n                        return;\n                    }\n                }\n            }\n        },\n        interaction: {\n            data: [],\n            parent: this,\n            count: function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier++;\n                    else this.data[index].multiplier = 1;\n                    this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span2\", \"mostinteraction\", \"Plurkers who really like to <i><img src='https://api.iconify.design/fluent-emoji:speaking-head.svg' /> interact</i> with me\", result);\n                } catch {\n                    console.info(\"Error while counting most interacted plurker\");\n                }\n            }\n        },\n        mvp: {\n            data: [],\n            parent: this,\n            count: function (response, type) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (type == \"replurk\") {\n                        this.data[index].count += (response.count * 250);\n                    } else if (type == \"favorite\") {\n                        this.data[index].count += (response.count * 50);\n                    } else if (response.content_raw.length > 16) {\n                        if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier += .5;\n                        else this.data[index].multiplier = .5;\n                        this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                    }\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span3\", \"mvp\", \"My \" + this.parent.year + \" <i><img src='https://api.iconify.design/fluent-emoji:biting-lip.svg' /> MVP</i>\", result);\n                } catch (error) {\n                    console.info(\"Error while counting my mvp\", error);\n                }\n            }\n        }\n    };\n\n    // Inactive plurker object\n    inactive = {\n        draw: (data, year) => {\n            this.statistics.draw('inactive', year + \" &#8617;\", 'I\\'ve been inactive since ' + year + ' <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n            this.statistics.drawPost('postcontent span2 inactivemore', data.plurk_id, '<i>My last Plurk</i> ' + datediff(data.posted), data.content, data.response_count);\n        },\n        empty: () => {\n            this.statistics.draw('inactive', '-', 'I didn\\'t post anything at this year <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n        }\n    }\n\n    // Loading object\n    loading = {\n        count: 0,\n        prev_count: 0,\n        counts: -1,\n        clean: false,\n        next: document.createElement('div'),\n        parent: this,\n        isComplete: function () { return this.count == this.counts },\n        init: function (next) {\n            this.count = 0;\n            this.prev_count = 0;\n            this.counts = -1;\n            this.clean = false;\n            this.next = next;\n        },\n        draw: function (item) {\n            return new Promise(resolve => {\n                var length = reduceMotionFilter(1);\n                this.prev_count = item;\n\n                if (!this.next.querySelector(\".statistics.statistics-loading\")) {\n                    this.parent.statistics.draw(\"statistics-loading\", item + \"%\", \"<i class='month'>Data from \" + this.year + \"</i>. Loading. <small>As long as you didn't close this browser tab, You can resume later by refreshing this page.</small>\");\n                }\n\n                // Animate loading\n                var load = { progress: this.prev_count };\n                gsap.to(load, {\n                    progress: Math.round(item),\n                    snap: \"progress\",\n                    ease: \"linear\",\n                    duration: length / 4,\n                    onUpdate: () => {\n                        var el = this.next.querySelector(\".statistics-loading .big\");\n                        if (el) el.innerHTML = load.progress + \"%\";\n                    },\n                    onComplete: async () => {\n                        if (this.clean) await this.done();\n                        resolve();\n                    }\n                });\n            });\n        },\n        loop: async function (length) {\n            this.clean = true;\n            this.counts = length;\n            await this.draw(0);\n        },\n        update: async function (month, value) {\n            var el = this.next.querySelector(\".statistics-loading .month\");\n            if (month && el) el.innerHTML = month;\n\n            if (this.counts >= 0) {\n                this.count = value ? value : this.count + 1;\n                await this.draw(Math.round(100 * (this.count / this.counts)));\n            }\n        },\n        fakeupdate: async function () {\n            if (this.counts >= 0) {\n                this.count++;\n                if (this.count >= (this.counts - 10)) this.count = (this.counts - 10);\n                await this.draw(100 * (this.count / this.counts));\n            }\n        },\n        forcedone: async function () {\n            this.count = this.counts;\n            await this.draw(100);\n        },\n        done: function () {\n            return new Promise(resolve => {\n                var length = reduceMotionFilter(1);\n\n                if (this.isComplete()) {\n                    var el = this.next.querySelector(\".statistics.statistics-loading\");\n                    this.clean = false;\n                    if (el) {\n                        gsap.to(el, {\n                            opacity: 0,\n                            width: 0,\n                            height: 0,\n                            padding: 0,\n                            margin: 0,\n                            overflow: \"hidden\",\n                            duration: length / 2,\n                            ease: \"power3.out\",\n                            onComplete: () => {\n                                el.remove();\n                                scroll.refresh();\n                                resolve();\n                            }\n                        });\n                    }\n                } else resolve();\n            });\n        }\n    }\n\n    // Scroll Animation\n    scrollAnimate = {\n        credits: (tl) => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation, #credits .made\"), {\n                y: window.innerHeight * 1 / 8\n            }, {\n                y: 0,\n                ease: \"linear\",\n                duration: length * 2,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                stagger: {\n                    from: 'end',\n                    amount: length / 10\n                },\n                duration: length,\n                ease: \"power3.in\"\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .made\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length,\n                ease: \"power3.in\"\n            }, length * 3 / 10);\n\n            return tl;\n        },\n        statistics: () => {\n            var next = this.next;\n\n            // Scroll animate statistics\n            scroll.push(tl => this.scrollAnimate.credits(tl), tl => ScrollTrigger.create({\n                trigger: next.querySelectorAll(\"#statistics\"),\n                start: \"100%-=\" + window.innerHeight + \" 0\",\n                end: \"100% 0\",\n                animation: tl,\n                scrub: .5\n            }));\n        },\n        permisions: () => {\n            var next = this.next;\n\n            // Scroll animation permission section\n            scroll.push((tl) => {\n                tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n                    y: 0\n                }, {\n                    y: window.innerHeight * -3 / 4,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sup\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * -1 / 10,\n                    rotation: -10,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sub\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * 1 / 10,\n                    rotation: 10,\n                    ease: \"linear\"\n                }, 0);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n            scroll.push((tl) => {\n                tl = this.scrollAnimate.credits(tl);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n        },\n        menu: () => {\n            // Scroll animation menu and logout\n            scroll.push(tl => tl, tl => {\n                return ScrollTrigger.create({\n                    trigger: 'main',\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    onUpdate: update => {\n                        var el1 = '.logo, .size, .lamp, .switch';\n                        var el2 = el1 + \", .footer > *\";\n\n                        if (update.direction > 0) {\n                            gsap.killTweensOf(_qAll(el2));\n                            gsap.to(_qAll(el1), { y: -100, opacity: 0 });\n                            gsap.to(_qAll('.footer > *'), { y: 100, opacity: 0 });\n                        } else {\n                            gsap.to(_qAll(el2), { y: 0, opacity: 1 });\n                        }\n                    }\n                });\n            });\n        },\n        browserBar: (login = true) => {\n            if (login) {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#hello',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#statistics',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnter: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"white\");\n                        }\n                    });\n                });\n            } else {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#permission',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n            }\n        }\n    }\n\n    constructor(year) {\n        // Which year?\n        this.year = year;\n        this.startDate = this.year + '-10-29T09:00:00';\n        this.endDate = new Date((this.year - 1) + '-10-29T09:00:00');\n        this.days = 60 * 60 * 24 * 1000;\n        this.fulldays = 365;\n    }\n\n    // Browser color\n    getSetStateColor(state) {\n        if (typeof (state) == \"object\" && state.length >= 1) {\n            if (state.length == 1) {\n                darkmode.browserColorDark = state[0];\n                darkmode.browserColorLight = state[0];\n            } else {\n                darkmode.browserColorDark = state[1];\n                darkmode.browserColorLight = state[0];\n            }\n        } else if (state == \"green\") {\n            darkmode.browserColorDark = \"#0d4f03\";\n            darkmode.browserColorLight = \"#60e670\";\n        } else if (state == \"yellow\") {\n            darkmode.browserColorDark = \"#705f02\";\n            darkmode.browserColorLight = \"#FFD700\";\n        } else {\n            darkmode.browserColorDark = \"#000000\";\n            darkmode.browserColorLight = \"#FFFFFF\";\n        }\n\n        return [darkmode.browserColorLight, darkmode.browserColorDark];\n    }\n    browserColor(state, duration, ease) {\n        this.getSetStateColor(state);\n        darkmode.setDarkMode(duration, ease);\n    }\n\n    // Show/hide Animations\n    // Login Pages\n    showLoginPage(tl) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n\n        this.browserColor(\"green\", 1);\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            display: \"\",\n            opacity: 0,\n            top: 0\n        }, {\n            opacity: 1,\n            duration: length,\n            ease: \"power3.in\"\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: length / 5,\n            duration: length,\n            ease: \"power3.out\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    top: \"\"\n                });\n            }\n        }, \">-\" + (length / 2));\n\n        return tl;\n    }\n    hideLoginPage(tl) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n\n        tl.set(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            top: 0,\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *, #permission form\"), {\n            y: 0,\n            opacity: 1,\n        }, {\n            y: 200,\n            opacity: 0,\n            stagger: {\n                from: \"end\",\n                amount: length / 5\n            },\n            duration: length,\n            ease: \"power3.in\",\n            onComplete: () => {\n                this.browserColor(\"yellow\");\n            }\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            opacity: 1\n        }, {\n            opacity: 0,\n            duration: length,\n            ease: \"power3.in\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    display: \"none\",\n                    top: \"\"\n                }, \">\");\n            }\n        }, \">-\" + (length / 4));\n\n        return tl;\n    }\n    // Statistic Pages\n    showStatisticPages() {\n        return new Promise(resolve => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n            var tl = gsap.timeline();\n\n            tl.fromTo(next.querySelectorAll(\"#hello\"), {\n                display: \"\",\n                opacity: 0\n            }, {\n                opacity: 1,\n                ease: \"power3.in\",\n                duration: length,\n                onStart: () => this.browserColor(\"green\", .5)\n            }, length / 4);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext > *\"), {\n                display: \"\",\n                opacity: 0,\n                y: 200\n            }, {\n                opacity: 1,\n                y: 0,\n                duration: length,\n                stagger: length / 5,\n                ease: \"power3.out\"\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\" #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n                display: \"\",\n                opacity: 0,\n                y: 200\n            }, {\n                opacity: 1,\n                y: 0,\n                duration: length,\n                stagger: length / 5,\n                ease: \"power3.out\"\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n                display: \"\",\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length / 2,\n                onComplete: () => resolve()\n            }, length / 2);\n        });\n    }\n    hideStatisticPages() {\n        return new Promise(async resolve => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n            var tl = gsap.timeline();\n\n            await animate.top(next);\n\n            tl.fromTo(next.querySelectorAll(\".footer > *, #hello .bgtext > *, #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n                opacity: 1,\n                y: 0\n            }, {\n                opacity: 0,\n                y: 200,\n                duration: length,\n                stagger: {\n                    from: \"end\",\n                    amount: length / 5\n                },\n                ease: \"power3.in\"\n            }, length / 5);\n            tl.set(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n                opacity: 0\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\"#hello\"), {\n                opacity: 1\n            }, {\n                opacity: 0,\n                duration: length,\n                ease: \"power3.in\",\n                onComplete: () => {\n                    gsap.set(next.querySelectorAll(\".grant\"), { display: \"none\" });\n                    resolve();\n                }\n            }, length / 2);\n        });\n    }\n\n    // Login messages\n    message(message, quick) {\n        var next = this.next;\n\n        var loginmessage = next.querySelector(\"#login-message\");\n\n        if (quick) {\n            loginmessage.innerHTML = message;\n        } else {\n            gsap.to(loginmessage, {\n                opacity: 0,\n                onComplete: function () {\n                    loginmessage.innerHTML = message;\n                    gsap.to(loginmessage, {\n                        opacity: 1\n                    });\n                }\n            });\n        }\n    }\n\n    // Logout\n    async requestLogout() {\n        var tl = gsap.timeline();\n\n        api.abort();\n\n        // Hide statistic pages\n        await this.hideStatisticPages(tl);\n\n        // Logout\n        await api.call(\"?fetch=logout\");\n        this.statistics.clear();\n        api.clear();\n        this.login();\n\n        scroll.refresh();\n    }\n\n    // Request token\n    async requestToken(text) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n        var tokenlink = next.querySelector(\"#tokenurl\");\n        tokenlink.textContent = \"Connecting Plurk...\";\n\n        var tl = gsap.timeline();\n        tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            duration: length,\n            ease: \"power3.out\"\n        }, length);\n        tl.fromTo(next.querySelectorAll(\"#permission h1, #permission li\"), {\n            display: \"\",\n            y: 50,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: length / 10,\n            duration: length,\n            ease: \"power3.out\"\n        }, length);\n\n        api.call(\"?request=token\").then(data => {\n            if (text) {\n                message(text);\n            } else {\n                tokenlink.textContent = \"Grant Access\";\n                tokenlink.setAttribute(\"href\", api.url + \"?redirect=\" + data.message.url);\n            }\n        }, () => {\n            message(\"Error when requesting verification from Plurk, please reload your browser again.\");\n        });\n\n        if (!text) next.querySelector(\"#permission form\").style.display = \"none\";\n    }\n\n    // Display current Plurker data\n    async displayPlurkerData() {\n        var plurker = this.me;\n        var next = this.next;\n        var extra = \"\";\n        var length = reduceMotionFilter(1);\n\n        // plurks_count\n        var days = (plurker.anniversary.years * 365) + plurker.anniversary.days;\n        var responses = Math.round(plurker.response_count / days);\n\n        next.querySelector(\"#hello .thumbs\").innerHTML = \"<img src='\" + plurker.avatar_big + \"' />\";\n        if (this.year == 2021) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>If \" + this.year + \" have been a rough year you, hopefully RePlurk will cheer you by bringing some good memories</p>\";\n        else if (this.year == 2022) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>It's 2020 v2, and this is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n        else next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>This is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\n        // Draw statistic\n        this.statistics.title('All Time', 'alltime');\n        if (plurker.anniversary.years && plurker.anniversary.days) {\n            this.statistics.draw('spansmall center posted', Math.round(plurker.plurks_count / days), 'I posted around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(Math.round(plurker.plurks_count / days), \"plurk\") + \" per day</i>\");\n\n            // Responses\n            var oneday = 16;\n            if (responses <= oneday) extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday / responses), \"hour\") + '</i>';\n            else extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday * 60 / responses), \"minute\") + '</i>';\n            this.statistics.draw('span2 center responded', responses, 'I responded around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(responses, \"time\") + \"</i> per day. \" + extra + \" when I'm not asleep\");\n\n            var join = new Date(plurker.join_date)\n            this.statistics.draw('spansmall center anniversary', \"<strong><i>\" + monthNames[join.getMonth()] + \"</i> <i>\" + join.getFullYear() + \"</i></strong> <em>\" + join.getDate() + \"</em>\", \"I joined Plurk <i>\" + plural(plurker.anniversary.years, \"year\") + \"</i> and <i>\" + plural(plurker.anniversary.days, \"day\") + \"</i> ago\");\n            this.statistics.draw('spansmall center badges', plurker.badges.length, \"I have <i><img src='https://api.iconify.design/fluent-emoji:shield.svg' /> \" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        } else {\n            this.statistics.draw('', '-', \"There is no data in my timeline\");\n            this.statistics.draw('', plurker.badges.length, \"But at least I have <i>\" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        }\n\n        // Scroll animation hello section\n        scroll.push(tl => {\n            tl.fromTo(next.querySelectorAll(\"#hello .text, #hello .thumbs\"), {\n                y: 0\n            }, {\n                y: window.innerHeight * -3 / 4,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sup\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * -1 / 10,\n                rotation: -10,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sub\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * 1 / 10,\n                rotation: 10,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .arrow-big\"), {\n                y: 0,\n                opacity: 1\n            }, {\n                y: window.innerHeight * 1 / 4,\n                opacity: 0,\n                ease: \"linear\",\n                duration: length / 4,\n            }, 0);\n            return tl;\n        }, tl => ScrollTrigger.create({\n            trigger: next.querySelectorAll(\"#hello\"),\n            start: \"0 0\",\n            end: \"100% 0\",\n            animation: tl,\n            scrub: true\n        }));\n        scroll.refresh();\n    }\n    // Display statistics\n    async displayStatistics() {\n        this.statistics.title('This Year', 'thisyear');\n        this.statistics.draw(\"statistics-loading thisyearloading\", \"\", \"<i class='month'>Data from December</i>1 of 2. Loading \" + this.year + \" timeline. It can take up to 1 minute.\");\n\n        this.loading.init(this.next);\n        this.loading.loop(this.fulldays);\n\n        // Load loop timeline\n        var getTimeline = async (offset) => {\n            offset = (!offset) ? \"\" : \"&offset=\" + offset;\n\n            var data = await api.call(\"?fetch=plurk&filter=my\" + offset, 1);\n            if (data.success) {\n                this.friends.add(data.message.plurk_users);\n                this.plurks = this.plurks.concat(data.message.plurks);\n\n                if (data.message.plurks.length > 0) {\n                    var lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\n                    if (lastposted >= this.endDate) {\n                        this.loading.update(\"Data from \" + monthNames[lastposted.getMonth()] + \" \" + lastposted.getFullYear(), this.fulldays - Math.floor((lastposted - this.endDate) / this.days));\n\n                        // Load next plurks\n                        await getTimeline(data.message.offset);\n                    } else {\n                        while (lastposted < this.endDate && this.plurks.length > 1) {\n                            this.plurks.pop();\n                            lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n                        }\n                        await this.loading.forcedone();\n                    }\n                } else {\n                    await this.loading.forcedone();\n                }\n            } else {\n                this.requestLogout();\n            }\n        }\n        await getTimeline(this.startDate);\n\n        // When loading done\n        var largest_poll_result = 0;\n        if (this.plurks.length > 1) {\n            // Count user statistics\n            this.statistics.plurks_count = 0;\n            this.plurks.forEach(plurk => {\n                // Calculate the statistics\n                if (plurk.responded) this.statistics.responded_count++;\n                if (plurk.owner_id == this.me.id) {\n                    this.statistics.plurks_count++;\n                    this.statistics.replurker_count += plurk.replurkers.length;\n                    this.statistics.replurker_list = this.statistics.listCount(this.statistics.replurker_list, plurk.replurkers);\n                    this.statistics.favourite_count += plurk.favorers.length;\n                    this.statistics.favorite_list = this.statistics.listCount(this.statistics.favorite_list, plurk.favorers);\n                    if (plurk.anonymous) this.statistics.whispers_count++;\n                    if (plurk.coins) this.statistics.coins_count += plurk.coins;\n                    if (plurk.porn) this.statistics.porn_count++;\n                    if (!plurk.response_count) this.statistics.noresponse_count++;\n                    if (plurk.plurk_type == 3) this.statistics.private_count++;\n                    this.statistics.response_count += plurk.response_count;\n\n                    if (plurk.content_raw.includes(\"instagram.com\")) this.statistics.instagrammer_count++;\n                    if (plurk.content_raw.includes(\"facebook.com\")) this.statistics.facebooker_count++;\n                    else if (plurk.content_raw.includes(\"fb.watch\")) this.statistics.facebooker_count++;\n                    if (plurk.content_raw.includes(\"twitter.com\")) this.statistics.twitterer_count++;\n                    if (plurk.content_raw.includes(\"reddit.com\")) this.statistics.redditor_count++;\n                    if (plurk.content_raw.includes(\"tiktok.com\")) this.statistics.tiktoker_count++;\n                    if (plurk.content_raw.includes(\"imgur.com\")) this.statistics.imgurer_count++;\n                    if (plurk.content_raw.includes(\"youtube.com\")) this.statistics.youtuber_count++;\n\n                    // Calculate polls\n                    if (plurk.with_poll) {\n                        var response_count = plurk.poll.response.response_count;\n                        this.statistics.poll_count++;\n                        this.statistics.poll_responder_count += response_count;\n\n                        if (largest_poll_result < response_count) {\n                            largest_poll_result = response_count;\n                            this.statistics.poll_popular_plurk = plurk;\n                        }\n                    }\n                } else if (plurk.responded) this.statistics.responded_other_count++;\n            });\n\n            // Sort based on date\n            this.plurks.sort((a, b) => new Date(b.posted) - new Date(a.posted));\n\n            // Draw statistics\n            try {\n                await this.statistics.drawAll(this.plurks);\n            } catch (error) {\n                console.info(\"Error while counting statistics\", error);\n            }\n\n            // Display extended statistics\n            this.displayExtendedStatistics();\n        } else {\n            if (this.plurks[0]) {\n                var date = new Date(plurk[0].posted);\n                inactive.draw(plurk[0], date.getFullYear());\n            }\n            else inactive.empty();\n        }\n    }\n    // Display extended statistics\n    async displayExtendedStatistics() {\n        // Deeper user statistics\n        this.statistics.title('Dig Deeper', 'digdeeper');\n        this.statistics.draw(\"statistics-loading digdeeperloading\", \"\", \"<i class='month'>Data from \" + this.year + \"</i> 2 of 2. Loading all responses. <small>If the loading seems to stop, refresh your browser tab to resume your download. Closing your browser tab will clear all downloaded data.</small>\");\n\n        // Load each post responses and calculate statistics\n        this.loading.init(this.next);\n        this.loading.loop(this.plurks.length);\n\n        // Get the responses for each plurks in parallel\n        this.plurks.sort((a, b) => new Date(a.posted) < new Date(b.posted));\n        for (var plurk of this.plurks) {\n            var date = new Date(plurk.posted);\n            this.loading.update(\"Data from \" + monthNames[date.getMonth()] + \" \" + date.getFullYear());\n\n            // Count all\n            await this.most.countAll(plurk);\n\n            // Count responses\n            if (plurk.response_count > 0 && (plurk.responded || plurk.owner_id == this.me.id)) {\n                var result = await api.call(\"?fetch=response&plurk_ids=\" + plurk.plurk_id);\n                if (result.success) for (var message of result.message) {\n                    // Add friends from response lists\n                    this.friends.add(message.friends);\n\n                    // Count the rest of statistics\n                    for (var response of message.responses) {\n                        // Find and count all responders\n                        await this.most.responders.count(response);\n                        this.most.interaction.count(response);\n                        this.most.mvp.count(response, \"response\");\n                        // Count all\n                        await this.most.countAll(response);\n                    }\n                } else {\n                    this.requestLogout();\n                    break;\n                }\n            }\n        }\n\n        // Display How Many Links\n        this.most.links.drawLinks();\n        // Display How Many Pictures\n        this.most.links.drawPics();\n\n        // Draw Results\n        // Display Most Responder\n        // this.most.responders.draw();\n\n        // Display Most Interaction\n        this.most.interaction.draw();\n\n        // Display Most Mentioned by me\n        // this.most.mentions.draw();\n\n        // Display How Many Words-Characters\n        this.most.types.draw();\n\n        // Display Most hashtags by me\n        this.most.hashtags.draw();\n\n        // Display Most My Emoticons\n        this.most.myemoticons.draw();\n\n        // Display MVP\n        this.statistics.replurker_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"replurk\");\n        });\n        this.statistics.favorite_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"favorite\");\n        });\n        this.most.mvp.draw();\n\n        // Replurk Badges\n        var gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Leader\";\n        if (this.me.gender == 1) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> King\";\n        if (this.me.gender == 0) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Queen\";\n\n        var tiktok = \"<img src='https://api.iconify.design/fluent-emoji:mirror-ball.svg' />\";\n        if (this.me.gender == 1) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:man-dancing-medium-dark-skin-tone.svg' />\";\n        if (this.me.gender == 0) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:woman-dancing-medium-dark-skin-tone.svg' />\";\n\n        var facebook = \"<img src='https://api.iconify.design/fluent-emoji:older-person.svg' />\";\n        if (this.me.gender == 1) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-man.svg' />\";\n        if (this.me.gender == 0) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-woman.svg' />\";\n\n        var plurker = \"<img src='https://api.iconify.design/fluent-emoji:person-bowing.svg' />\";\n        if (this.me.gender == 1) plurker = \"<img src='https://api.iconify.design/fluent-emoji:man-bowing.svg' />\";\n        if (this.me.gender == 0) plurker = \"<img src='https://api.iconify.design/fluent-emoji:woman-bowing.svg' />\";\n\n        this.statistics.title('RePlurk Badges', 'replurkbadges');\n        this.statistics.title('What are RePlurk Badges consist of? They are badges based on your activities in Plurk. Currently there are 16 badges in total, for activities such as: creating lots of polls (Polling ' + gender + '), receiving lots of coins (Plurk Coins Billionaire), writing lots of posts (Novelist and Keyboard Warrior), sharing lots of pictures and links (Meme Lord & Missing Link), sharing social medias urls (there are 7 badges), posting lots of adult posts (Adult-er), getting lots of replurks (Trendsetter), and constantly posting in Plurk almost everyday (Active Plurker).', 'replurkbadges description');\n        if (this.statistics.poll_count >= 5) this.statistics.draw('spansmall center badges pollbadges', \"<img src='https://api.iconify.design/fluent-emoji:ballot-box-with-ballot.svg' />\", \"<strong>Polling \" + gender + \"</strong>\");\n        if (this.statistics.coins_count >= 5) this.statistics.draw('spansmall center badges coinbadges', \"<img src='https://api.iconify.design/fluent-emoji:coin.svg' />\", \"<strong>Plurk Coins Billionaire</strong>\");\n        if (this.most.types.words >= 50000) this.statistics.draw('spansmall center badges novelistbadges', \"<img src='https://api.iconify.design/fluent-emoji:orange-book.svg' />\", \"<strong>Novelist</strong>\");\n        if (this.most.types.chars >= 1000000) this.statistics.draw('spansmall center badges keyboardbadges', \"<img src='https://api.iconify.design/fluent-emoji:keyboard.svg' />\", \"<strong>Keyboard Warrior</strong>\");\n        if (this.most.links.pics.length >= 356) this.statistics.draw('spansmall center badges memebadges', \"<img src='https://api.iconify.design/fluent-emoji:cat.svg' />\", \"<strong>Meme Lord</strong>\");\n        if (this.most.links.links.length >= 356 / 2) this.statistics.draw('spansmall center badges missingbadges', \"<img src='https://api.iconify.design/fluent-emoji:orangutan.svg' />\", \"<strong>The Missing Link</strong>\");\n        if (this.statistics.instagrammer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:camera.svg' />\", \"<strong>Instagrammer</strong>\");\n        if (this.statistics.facebooker_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', facebook, \"<strong>Facebooker</strong>\");\n        if (this.statistics.twitterer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:hatching-chick.svg' />\", \"<strong>The Real Chief Twit</strong>\");\n        if (this.statistics.redditor_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:robot.svg' />\", \"<strong>/r</strong>\");\n        if (this.statistics.tiktoker_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', tiktok, \"<strong>Tiktoker</strong>\");\n        if (this.statistics.imgurer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:framed-picture.svg' />\", \"<strong>Imgur-er</strong>\");\n        if (this.statistics.youtuber_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:movie-camera.svg' />\", \"<strong>Youtuber <img src='https://api.iconify.design/fluent-emoji:sleepy-face.svg' /></strong>\");\n        if (this.statistics.porn_count >= 10) this.statistics.draw('spansmall center badges adultbadges', \"<img src='https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg' />\", \"<strong>Adult-er</strong>\");\n        if (this.statistics.replurker_count >= 50) this.statistics.draw('spansmall center badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:trophy.svg' />\", \"<strong>Trendsetter</strong>\");\n        if (this.statistics.plurks_count >= 356 * 1.5) this.statistics.draw('spansmall center badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:military-medal.svg' />\", \"<strong>Active Plurker \" + plurker + \"</strong>\");\n\n        this.logSessionStrorageSize();\n    }\n\n    // Display LocalStorage stats\n    logSessionStrorageSize() {\n        function getSessionStorageSize() {\n            var totalBytes = 0;\n\n            for (var key in sessionStorage) {\n                if (sessionStorage.hasOwnProperty(key)) {\n                    var itemValue = sessionStorage.getItem(key);\n                    totalBytes += itemValue.length;\n                }\n            }\n\n            // Convert bytes to Megabytes\n            var totalMegabytes = Math.round((totalBytes / 1024 / 1024) * 100) / 100;\n\n            return totalMegabytes;\n        }\n\n        // Usage\n        var sessionStorageSize = getSessionStorageSize();\n        console.info('SessionStorage Size: ' + sessionStorageSize + ' MB');\n    }\n\n    // Check login status\n    async login(clear) {\n        var next = this.next;\n\n        this.me = { id: 0 };\n        this.friends.init();\n        this.statistics.init(next);\n        this.most.init();\n        this.plurks = [];\n\n        scroll.destroy();\n\n        window.scrollTo(0, 0);\n        this.browserColor(\"yellow\");\n\n        // Scroll animation menu and logout\n        this.scrollAnimate.menu();\n\n        // Check is server have open session\n        var tl = gsap.timeline();\n        tl.set(next.querySelector(\"#hello .arrow-big\"), {\n            opacity: 0\n        });\n\n        var data = await api.call(\"?\");\n        var interval = null;\n        if (data.success) {\n            this.me = data.message;\n\n            // Initial Plurk statistics\n            await this.displayPlurkerData();\n\n            // Display the rest of the statistics\n            this.displayStatistics();\n\n            // Scroll top top\n            await animate.top(next);\n\n            // Hide login page\n            if (clear) next.querySelector(\"#permission\").style.display = \"none\";\n            else tl = this.hideLoginPage(tl);\n\n            // Show statistic pages\n            await this.showStatisticPages(tl);\n\n            // Add logout event\n            next.querySelector(\"#logout\").onclick = () => this.requestLogout();\n\n            // Scroll animate statistics\n            this.scrollAnimate.statistics();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar();\n\n            scroll.refresh();\n        } else {\n            // Hide statistic pages\n            if (clear) next.querySelectorAll(\".grant\").forEach(function (el) { el.style.display = \"none\"; });\n            // Show login page\n            this.showLoginPage(tl);\n            // Request token\n            this.requestToken();\n\n            // Scroll animation permission section\n            this.scrollAnimate.permisions();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar(false);\n\n            scroll.refresh();\n\n            // Automatic login\n            interval = setInterval(async () => {\n                var data = await api.call(\"?\");\n\n                if (data.success) {\n                    clearInterval(interval);\n                    this.login();\n                }\n            }, 3000);\n        }\n\n        // Snap\n        next.querySelectorAll(\"section.snap\").forEach(el => scroll.snap(el));\n        next.querySelectorAll(\"section.snap-bottom\").forEach(el => scroll.snap(el, \"bottom\"));\n    }\n\n    // Run the API call\n    run(el) {\n        return new Promise(resolve => {\n            var length = reduceMotionFilter(1);\n            this.next = el;\n            this.browserColor(\"yellow\");\n\n            // Run the login\n            gsap.fromTo(this.next.querySelectorAll('#credits'), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length,\n                ease: \"power3.in\",\n                onComplete: async () => {\n                    // Change color\n                    this.browserColor(\"yellow\", 0);\n\n                    // Display login\n                    await this.login(true);\n\n                    resolve();\n                }\n            });\n        });\n    }\n}\n\nexport default replurk;"],"names":["constructor","classname","text","this","el","document","createElement","setAttribute","innerHTML","update","textContent","updateHTML","oldcolor","randomcolors","allColorArrays","arrayIndex","Math","floor","Date","now","length","colors","getRandomColor","color","gsap","utils","shuffle","slice","pop","id","data","avatarurl","customcreate","user","user_id","value","nick_name","attached","hidden","count","position","created","counts","create","avatar","name","display_name","appendChild","insertTo","element","insertAdjacentElement","destroy","remove","next","plurks","me","statistics","whispers_count","coins_count","porn_count","noresponse_count","private_count","replurker_count","replurker_list","favourite_count","favorite_list","response_count","responded_count","responded_other_count","responded_other_list","plurks_count","poll_count","poll_responder_count","poll_popular_plurk","redditor_count","tiktoker_count","instagrammer_count","imgurer_count","facebooker_count","twitterer_count","youtuber_count","parent","init","querySelector","MutationObserver","mutationsList","forEach","mutation","addedNodes","afterDraw","observe","attributes","childList","subtree","clear","listCount","list","collection","index","findIndex","push","title","style","loading","insertAdjacentHTML","anim","set","background","to","opacity","duration","ease","screen","matchMedia","add","tl","fromTo","children","y","window","innerHeight","ScrollTrigger","trigger","start","end","animation","scrub","number","Number","load","progress","snap","onUpdate","toggleActions","querySelectorAll","x","height","getAttribute","capture","refresh","onclick","async","generating","imgs","body","cursor","img","includes","localUrl","api","url","_","round","canvas","html2canvas","backgroundColor","logging","link","display","download","year","href","toDataURL","click","removeChild","setTimeout","wrapper","draw","drawDiv","drawGraph","drawImage","image","badge","drawHTML","html","drawLink","drawPost","toString","drawUserList","max","friends","friend","find","plurker","getAvatar","outerHTML","scale","stagger","amount","from","attach","charttitle","node","chart","that","zIndex","maxTop","top","currentTop","killTweensOf","onComplete","drawAll","response_percentage","most","responses","replurk","favorite","sort","a","b","findregex","regex","replace","content","storage","result","match","idx","responders","mentions","dataAll","myemoticons","hashtags","links","pics","types","words","chars","countAll","content_raw","plurk_id","replurkers_count","favorite_count","response","i","findByUsername","undefined","getAvatarByUsername","loved","pic","split","drawLinks","drawPics","owner_id","plurk_type","posted","interaction","multiplier","console","info","mvp","type","error","inactive","empty","prev_count","clean","isComplete","item","Promise","resolve","done","loop","month","fakeupdate","forcedone","width","padding","margin","overflow","scrollAnimate","credits","permisions","rotation","menu","el1","el2","direction","browserBar","login","onLeave","browserColor","onEnterBack","onEnter","startDate","endDate","days","fulldays","getSetStateColor","state","darkmode","browserColorDark","browserColorLight","setDarkMode","showLoginPage","hideLoginPage","showStatisticPages","timeline","onStart","hideStatisticPages","animate","message","quick","loginmessage","requestLogout","abort","call","requestToken","tokenlink","then","displayPlurkerData","extra","anniversary","years","avatar_big","oneday","join","join_date","getMonth","getFullYear","getDate","badges","displayStatistics","getTimeline","offset","success","plurk_users","concat","lastposted","largest_poll_result","plurk","responded","replurkers","favorers","anonymous","coins","porn","with_poll","poll","displayExtendedStatistics","date","gender","tiktok","facebook","logSessionStrorageSize","sessionStorageSize","totalBytes","key","sessionStorage","hasOwnProperty","getItem","getSessionStorageSize","scrollTo","interval","setInterval","clearInterval","run"],"sourceRoot":""}