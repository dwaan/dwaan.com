{"version":3,"file":"488.bundle.js","mappings":"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","sources":["webpack://dwaan/./src/js/helpers/replurk.js"],"sourcesContent":["\"use strict\";\n\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js';\nimport api from \"../helpers/api.js\";\nimport scroll from \"../helpers/scroll.js\";\nimport darkmode from \"../helpers/darkmode.js\";\nimport animate from \"../helpers/animate.js\";\nimport html2canvas from \"html2canvas\";\nimport { _q, _qAll, hasClass, plural, monthNames, animateNumber, datediff, pluralinwords, reduceMotionFilter, waitForImg } from '../helpers/helper.js';\n\n/*\n    Simple span element object:\n\n    1. update(text): update the content with text value, and animate it if it's number\n    2. updateHTML(text): update the content with html value\n*/\n\nvar iconLink = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\"><path id=\"right\" d=\"M19.188,12.001c0,1.1-0.891,2.015-1.988,2.015l-4.195-0.015C13.543,15.089,13.968,16,15.002,16h3C19.658,16,21,13.657,21,12s-1.342-4-2.998-4h-3c-1.034,0-1.459,0.911-1.998,1.999l4.195-0.015C18.297,9.984,19.188,10.901,19.188,12.001z\"/><path id=\"center\" d=\"M8,12c0,0.535,0.42,1,0.938,1h6.109c0.518,0,0.938-0.465,0.938-1c0-0.534-0.42-1-0.938-1H8.938C8.42,11,8,11.466,8,12z\"/><path id=\"left\" d=\"M4.816,11.999c0-1.1,0.891-2.015,1.988-2.015L11,9.999C10.461,8.911,10.036,8,9.002,8h-3c-1.656,0-2.998,2.343-2.998,4s1.342,4,2.998,4h3c1.034,0,1.459-0.911,1.998-1.999l-4.195,0.015C5.707,14.016,4.816,13.099,4.816,11.999z\"/></svg>';\nclass span {\n    constructor(classname, text) {\n        this.el = document.createElement('span');\n        this.el.setAttribute(\"class\", classname);\n        this.el.innerHTML = text;\n    }\n\n    update(text) {\n        animateNumber(this.el.textContent, text, (text) => {\n            this.el.textContent = text;\n        });\n    }\n\n    updateHTML(text) {\n        this.el.innerHTML = text;\n    }\n}\n\n/*\n    Color randomizer\n\n    1. colors: array of colors value\n    2. getRandomColor(): get the randomized color from colors list\n*/\nclass colors {\n    constructor() {\n        this.oldcolor = \"\";\n        this.randomcolors = [];\n\n        const allColorArrays = [\n            [\n                'rgb(63,94,251)',     // Dodger Blue\n                'rgb(252,70,107)',    // Radical Red\n                'rgb(34,193,195)',    // Light Sea Green\n                'rgb(253,187,45)',    // Goldenrod\n                'rgb(195,34,190)',    // Deep Pink\n                'rgb(219,158,0)',     // Golden Yellow\n                'rgb(75,231,152)',    // Medium Spring Green\n                'rgb(195,34,103)',    // Cerise\n                'rgb(45,182,253)'     // Dodger Blue (Lighter)\n            ],\n            [\n                \"rgb(0, 0, 139)\",     // Dark Blue\n                \"rgb(0, 128, 128)\",   // Teal\n                \"rgb(0, 100, 0)\",     // Dark Green\n                \"rgb(139, 0, 0)\",     // Dark Red\n                \"rgb(128, 0, 128)\",   // Purple\n                \"rgb(255, 140, 0)\",   // Dark Orange\n                \"rgb(75, 0, 130)\",    // Indigo\n                \"rgb(128, 128, 0)\",   // Olive\n                \"rgb(106, 90, 205)\"   // Slate Blue\n            ],\n            [\n                \"rgb(60, 60, 160)\",    // Dark Pastel Blue\n                \"rgb(0, 120, 120)\",    // Dark Pastel Teal\n                \"rgb(60, 80, 60)\",     // Dark Pastel Green\n                \"rgb(120, 60, 60)\",    // Dark Pastel Red\n                \"rgb(100, 60, 100)\",   // Dark Pastel Purple\n                \"rgb(180, 100, 0)\",    // Dark Pastel Orange\n                \"rgb(50, 30, 80)\",     // Dark Pastel Indigo\n                \"rgb(90, 90, 0)\",      // Dark Pastel Olive\n                \"rgb(80, 70, 140)\"     // Dark Pastel Slate Blue\n            ],\n            [\n                \"rgb(70, 70, 170)\",    // Darker Pastel Blue\n                \"rgb(170, 70, 90)\",    // Darker Pastel Red\n                \"rgb(40, 170, 170)\",   // Darker Pastel Cyan\n                \"rgb(170, 130, 40)\",   // Darker Pastel Yellow\n                \"rgb(140, 40, 140)\",   // Darker Pastel Magenta\n                \"rgb(200, 120, 0)\",    // Darker Pastel Orange\n                \"rgb(50, 200, 120)\",   // Darker Pastel Green\n                \"rgb(140, 40, 90)\",    // Darker Pastel Purple\n                \"rgb(70, 160, 210)\"    // Darker Pastel Blue-Green\n            ],\n            [\n                \"rgb(0, 200, 0)\",     // Darker Contrast Neon Green\n                \"rgb(255, 255, 70)\",  // Darker Contrast Yellow\n                \"rgb(0, 150, 200)\",    // Darker Contrast Neon Blue\n                \"rgb(0, 200, 150)\",    // Darker Contrast Cyan\n                \"rgb(200, 0, 200)\",    // Darker Contrast Neon Purple\n                \"rgb(120, 200, 0)\",    // Darker Contrast Neon Yellow-Green\n                \"rgb(200, 120, 0)\",    // Darker Contrast Neon Orange\n                \"rgb(0, 80, 200)\",     // Darker Contrast Light Neon Blue\n                \"rgb(200, 0, 80)\"      // Darker Contrast Neon Pink\n            ],\n            [\n                \"rgb(51, 51, 51)\",     // Dark Gray\n                \"rgb(153, 153, 0)\",    // Olive\n                \"rgb(0, 51, 102)\",     // Dark Blue\n                \"rgb(102, 0, 0)\",      // Dark Red\n                \"rgb(0, 0, 0)\",        // Black\n                \"rgb(128, 64, 0)\",     // Brown\n                \"rgb(51, 0, 51)\",      // Dark Purple\n                \"rgb(0, 102, 102)\",    // Dark Cyan\n                \"rgb(77, 77, 77)\"      // Charcoal Gray\n            ]\n        ];\n\n        const seconds = Math.floor(Date.now() / 1000); // Get current time in seconds\n        const arrayIndex = seconds % allColorArrays.length; // Use seconds to determine the index\n        this.colors = allColorArrays[arrayIndex];\n    }\n\n    getRandomColor() {\n        var color;\n        do {\n            this.randomcolors = gsap.utils.shuffle(this.colors).slice();\n        } while (this.oldcolor == (color = this.randomcolors.pop()));\n        this.oldcolor = color;\n        return color;\n    }\n}\n\n/*\n    Plurk element object spesification:\n\n    1. id: contain the id name\n    2. user: contain user object\n    3. attached: status of element is attached in DOM or not\n    4. create(): create the DOM element\n    4. destroy(): remove the DOM element\n    4. update(): update the DOM element based on it's current value\n    5. insertTo(element): insert DOM element to spesific element, also will check if it's already created or not\n\n*/\nclass plurkerElement {\n    constructor(id, data, avatarurl, customcreate) {\n        this.id = id;\n        this.user = data;\n        this.user_id = data.id;\n        this.value = data.nick_name;\n        this.nick_name = data.nick_name;\n        this.attached = false;\n        this.hidden = true;\n        this.count = 1;\n        this.position = 0;\n        this.customcreate = customcreate;\n        this.el = document.createElement('a');\n        this.created = false;\n        this.avatarurl = avatarurl;\n        this.counts = new span('count', this.count);\n    }\n\n    create() {\n        this.created = true;\n\n        this.el.setAttribute(\"id\", this.id + this.user_id);\n        this.el.setAttribute(\"class\", 'plurkers');\n        this.el.setAttribute(\"href\", 'https://plurk.com/' + this.user.nick_name);\n        this.el.setAttribute(\"target\", '_BLANK');\n\n        if (!this.customcreate) {\n            this.avatar = new span('avatar', '<img src=\"' + this.avatarurl + '\" />');\n            this.name = new span('name', this.user.display_name);\n            this.counts = new span('count', this.count);\n            this.el.appendChild(this.avatar.el);\n            this.el.appendChild(this.name.el);\n            this.el.appendChild(this.counts.el);\n        } else {\n            this.customcreate(this);\n        }\n    }\n\n    insertTo(element) {\n        if (!this.created) this.create();\n\n        this.attached = true;\n        element.insertAdjacentElement(\"beforeend\", this.el);\n    }\n\n    destroy() {\n        this.attached = false;\n\n        if (this.el) {\n            this.el.remove();\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    update() {\n        // Only update when it's attached\n        if (this.attached) {\n            this.counts.update(this.count);\n        }\n    }\n}\n\n\n/*\n    Replurk class\n*/\nclass replurk {\n    // Draw in which element?\n    next = document.createElement('div');\n    // Plurks array\n    plurks = [];\n    // Plurker profile object\n    me = { \"id\": 3203568, \"has_profile_image\": 1, \"timeline_privacy\": 0, \"nick_name\": \"dwan\", \"display_name\": \"Dwan\", \"date_of_birth\": \"Sat, 29 Oct 1983 00:01:00 GMT\", \"avatar\": 41917598, \"gender\": 1, \"karma\": 199.24, \"premium\": true, \"verified_account\": false, \"dateformat\": 3, \"default_lang\": \"en\", \"friend_list_privacy\": \"public\", \"name_color\": \"FFA59A\", \"full_name\": \"Dwan B.\", \"location\": \"Tel Aviv-Yafo, Dan, Israel\", \"timezone\": \"Asia/Jerusalem\", \"phone_verified\": 0, \"bday_privacy\": 1, \"plurks_count\": 14598, \"response_count\": 79484, \"pinned_plurk_id\": 0, \"background_id\": 0, \"show_ads\": false, \"show_location\": 0, \"profile_views\": 36112, \"avatar_small\": \"https://avatars.plurk.com/3203568-small41917598.gif\", \"avatar_medium\": \"https://avatars.plurk.com/3203568-medium41917598.gif\", \"avatar_big\": \"https://avatars.plurk.com/3203568-big41917598.jpg\", \"about\": \"Mr. Goat\\u2019s dad and full-time husband\", \"about_renderred\": \"Mr. Goat\\u2019s dad and full-time husband\", \"page_title\": \"The world revolve around me\", \"recruited\": 14, \"relationship\": \"married\", \"friends_count\": 571, \"fans_count\": 498, \"join_date\": \"Wed, 15 Oct 2008 07:48:05 GMT\", \"privacy\": \"world\", \"accept_private_plurk_from\": \"all\", \"post_anonymous_plurk\": false, \"badges\": [\"10_invites\", \"14\", \"9\", \"10000_views\", \"10000_plurks\", \"50000_comments\", \"upload_profile_image\", \"50_fans\", \"coin\"], \"link_facebook\": false, \"setup_facebook_sync\": false, \"setup_twitter_sync\": false, \"setup_weibo_sync\": false, \"filter\": { \"porn\": 2, \"anonymous\": 0, \"keywords\": null }, \"anniversary\": { \"years\": 13, \"days\": 27 }, \"phone_number\": null, \"creature\": 0, \"creature_url\": null, \"creature_special\": 1, \"creature_special_url\": null };\n\n    /*\n        Friends object spesification:\n\n        1. data: contains all the friends collection data\n        2. add(data): add friend to friends collection data\n        3. find(user_id): return friend data based on their id\n        4. findByUsername(nick_name): return friend data based on their nick name\n        5. getAvatar(user_id): return avatar url based on their id for from friends collection data\n        6. getAvatarByUsername(user_id): return avatar url based on their nick name for from friends collection data\n    */\n    friends = {\n        data: {},\n        unavailable: [],\n        parent: this,\n        init: function () {\n            this.data = {};\n        },\n        add: function (new_friends) {\n            Object.assign(this.data, new_friends);\n        },\n        find: async function (user_id) {\n            if (this.unavailable.findIndex(el => el == user_id) >= 0) return false;\n\n            if (this.data && this.data[user_id]) {\n                return this.data[user_id];\n            } else {\n                var result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&user_id=\" + user_id);\n\n                if (result.success) {\n                    var temp = {};\n                    temp[result.message.user_info.id] = result.message.user_info;\n                    this.add(temp);\n                    return result.message.user_info;\n                } else {\n                    this.unavailable.push(user_id);\n                    return false;\n                }\n            }\n        },\n        findByUsername: async function (nick_name) {\n            var user_id = false;\n\n            if (this.unavailable.findIndex(el => el == nick_name) >= 0) return false;\n\n            for (var index in this.data) {\n                if (this.data[index].nick_name.toLowerCase() == nick_name.toLowerCase()) {\n                    user_id = index;\n                    break;\n                }\n            }\n\n            if (user_id) {\n                return this.data[user_id];\n            } else {\n                var result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&nick_name=\" + nick_name);\n\n                if (result.success) {\n                    var temp = {};\n                    temp[result.message.user_info.id] = result.message.user_info;\n                    this.add(temp);\n                    return result.message.user_info;\n                } else {\n                    this.unavailable.push(nick_name);\n                    return false;\n                }\n            }\n        },\n        getAvatar: function (user_id) {\n            if (user_id && this.data && this.data[user_id]) {\n                if (this.data[user_id].has_profile_image) {\n                    var avatar = \"\";\n                    if (this.data[user_id].avatar) avatar = this.data[user_id].avatar;\n                    return 'https://avatars.plurk.com/' + user_id + '-big' + avatar + '.jpg';\n                }\n            }\n            return 'https://plurk.com/static/default_big.jpg';\n        },\n        getAvatarByUsername: function (user_name) {\n            var user_id = false;\n\n            if (user_name) {\n                for (var index in this.data) {\n                    if (this.data[index].nick_name.toLowerCase() == user_name.toLowerCase()) {\n                        user_id = index;\n                        break;\n                    }\n                }\n            }\n\n            return this.getAvatar(user_id);\n        }\n    }\n\n    // Statistics plurker object renderer\n    statistics = {\n        // Storage\n        whispers_count: 0,\n        coins_count: 0,\n        porn_count: 0,\n        noresponse_count: 0,\n        private_count: 0,\n        replurker_count: 0,\n        replurker_list: [],\n        favourite_count: 0,\n        favorite_list: [],\n        response_count: 0,\n        responded_count: 0,\n        responded_other_count: 0,\n        responded_other_list: [],\n        plurks_count: 0,\n        poll_count: 0,\n        poll_responder_count: 0,\n        poll_popular_plurk: {},\n        redditor_count: 0,\n        tiktoker_count: 0,\n        instagrammer_count: 0,\n        imgurer_count: 0,\n        facebooker_count: 0,\n        twitterer_count: 0,\n        youtuber_count: 0,\n        id: 0,\n        // Other\n        next: document.createElement('div'),\n        el: document.createElement('div'),\n        randomcolors: [],\n        parent: this,\n        init: function (next) {\n            this.whispers_count = 0;\n            this.coins_count = 0;\n            this.porn_count = 0;\n            this.noresponse_count = 0;\n            this.private_count = 0;\n            this.replurker_count = 0;\n            this.replurker_list = [];\n            this.favourite_count = 0;\n            this.favorite_list = [];\n            this.response_count = 0;\n            this.responded_count = 0;\n            this.responded_other_count = 0;\n            this.responded_other_list = [];\n            this.plurks_count = 0;\n            this.id = 0;\n            this.next = next;\n            this.randomcolors = [];\n\n            this.el = this.next.querySelector(\"#statistics\");\n\n            // Obverse when element is added to DOM\n            var observer = new MutationObserver((mutationsList) => {\n                mutationsList.forEach(mutation => {\n                    mutation.addedNodes.forEach(el => {\n                        this.afterDraw(el);\n                    });\n                });\n            });\n            observer.observe(this.el, {\n                attributes: true,\n                childList: true,\n                subtree: false\n            });\n        },\n        clear: function () {\n            this.el.innerHTML = \"\";\n        },\n        listCount: function (list, collection) {\n            if (collection.length > 0) {\n                collection.forEach(value => {\n                    var index = list.findIndex(el => el.id == value)\n\n                    if (index < 0) list.push({ id: value, count: 1 });\n                    else list[index].count++;\n                });\n            }\n\n            return list;\n        },\n        title: function (text, style = \"\", loading = false) {\n            if (loading) this.el.insertAdjacentHTML('beforeend', '<div class=\"statistics middle statistics-title ' + style + '\"><h3><span>' + text + '</span><span class=\"loading\"><i/></span></h3></div>');\n            else this.el.insertAdjacentHTML('beforeend', '<div class=\"statistics middle statistics-title ' + style + '\"><h3><span>' + text + '</span><span class=\"line\"><i/></span></h3></div>');\n        },\n        afterDraw: function (el) {\n            var length = reduceMotionFilter(1);\n\n            if (hasClass(el, 'statistics-wrap')) {\n                var color = new colors();\n                var randomcolors = [color.getRandomColor(), color.getRandomColor()]\n                var anim = el.querySelector(\".anim\");\n\n                gsap.set(anim, {\n                    background: 'radial-gradient(at 10% 10%, ' + randomcolors[0] + ' 0%, ' + randomcolors[1] + ' 100%)'\n                });\n\n                gsap.to(anim, {\n                    opacity: 1,\n                    duration: length / 2,\n                    ease: \"power3.out\"\n                }, 0);\n\n                // Scroll animation wrap section\n                var screen = gsap.matchMedia();\n                screen.add(\"(min-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: window.innerHeight * 1 / 5\n                        }, {\n                            y: 0,\n                            ease: \"ease.out\"\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"0 100%-=100px\",\n                            animation: tl,\n                            scrub: 2\n                        });\n                    });\n                });\n                screen.add(\"(max-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: 0\n                        }, {\n                            y: 0\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"100px 100%-=100px\",\n                            animation: tl,\n                            scrub: 1\n                        });\n                    });\n                });\n\n                scroll.push(function (tl) {\n                    if (el.querySelector(\".big\")) {\n                        var number = Number(el.querySelector(\".big\").textContent);\n                        if (number > 0) {\n                            var load = { progress: 0 };\n                            var duration = 1;\n                            if (number >= 500 && number < 1000) duration = 2;\n                            else if (number >= 1000 && number < 99999) duration = 3;\n                            else if (number >= 99999) duration = 4;\n                            tl.to(load, {\n                                progress: number,\n                                snap: \"progress\",\n                                ease: \"power3.out\",\n                                duration: duration,\n                                onUpdate: () => {\n                                    el.querySelector(\".big\").textContent = plural(load.progress);\n                                }\n                            }, 0);\n                        }\n                    }\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"0 100%-=100px\",\n                        end: \"100px 100%-=100px\",\n                        animation: tl,\n                        toggleActions: \"play none none none\"\n                    });\n                });\n            } else {\n                // Scroll animation line section\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelectorAll(\"i\"), {\n                        x: \"-100%\"\n                    }, {\n                        x: \"0%\",\n                        ease: \"ease.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"100% 100%\",\n                        end: \"100% 0\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'drawgraph')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".graph\"), {\n                        y: 100\n                    }, {\n                        y: 0\n                    }, 0);\n\n                    tl.fromTo(el.querySelector(\".graph i\"), {\n                        height: \"0%\"\n                    }, {\n                        height: el.querySelector(\".graph i\").getAttribute(\"data-number\") + \"%\"\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'coins')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".big\"), {\n                        y: \"50%\"\n                    }, {\n                        y: 0,\n                        ease: \"power3.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 2\n                    });\n                });\n            }\n\n            // Capture function\n            this.capture(el);\n\n            scroll.refresh();\n        },\n        capture: (el) => {\n            var capture = el.querySelector(\".capture small\");\n            if (!capture) return;\n\n            capture.onclick = async () => {\n                if (capture.generating) return;\n\n                var imgs = el.querySelectorAll(\"img\");\n\n                // Informing user the process is starting\n                capture.generating = true;\n                document.body.style.cursor = \"wait\";\n\n                // Proxying images\n                imgs.forEach(img => {\n                    if (!img.getAttribute(\"src\").includes(\"http\") || img.localUrl) return;\n\n                    img.localUrl = true;\n                    img.setAttribute(\"src\", api.url + \"?img=\" + img.getAttribute(\"src\"));\n                });\n                // Load and cache image\n                await waitForImg(imgs, (_, progress) => {\n                    capture.innerHTML = \"Downloading images... (\" + Math.round(progress) + \"%)\";\n                });\n\n                // HTML to Canvas magic\n                capture.innerHTML = \"Processing...\";\n                var canvas = await html2canvas(el.querySelector(\".anim\"), {\n                    backgroundColor: null,\n                    logging: false,\n                });\n\n                // Download the output\n                var link = document.createElement(\"a\");\n                link.style.display = \"none\";\n                link.download = \"replurk\" + this.year + \"-\" + Date.now() + \".png\";\n                link.href = canvas.toDataURL();\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n                link.remove();\n\n                // Reset button after 3s\n                capture.innerHTML = \"Done\";\n                document.body.style.cursor = \"default\";\n                setTimeout(() => {\n                    capture.innerHTML = \"Recapture\";\n                    capture.generating = false;\n                }, 3000);\n            }\n        },\n        wrapper: function (style, text, background) {\n            if (!background) return '<div class=\"statistics middle statistics-wrap ' + style + '\"><div class=\"anim\">' + text + '</div><div class=\"capture\"><small>Capture</small></div></div>';\n            else return '<div class=\"statistics middle statistics-wrap ' + style + '\"><div class=\"anim\" style=\"background-images:url(' + background + ')\">' + text + '</div><div class=\"capture\"><small>Capture</small></div></div>';\n        },\n        draw: function (style, number, text, background) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"big\">' + number + '</span>\\\n\t\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'), background);\n            }\n        },\n        drawDiv: function (style, text) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '<div class=\"box\">' + text + '</div>'));\n        },\n        drawGraph: function (style, number, text) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawgraph movetitle\", '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"graph\"><i data-number=\"' + number + '\"></i></span>\\\n\t\t\t\t\t\t<span class=\"info\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'));\n            }\n        },\n        drawImage: function (style, image, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawimage\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span class=\"avatar\"><img src=\"' + image + '\" /></span>\\\n\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawHTML: function (style, title, html) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawhtml\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<div class=\"htmlcontent\">' + html + '</div>\\\n\t\t\t\t\t<div class=\"title\">' + title + '</div>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawLink: function (style, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawlink\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span>' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawPost: function (style, id, title, text, badge) {\n            var url = \"\";\n            if (id) url = 'https://plurk.com/p/' + id.toString(36);\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawpost\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<a href=\"' + url + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<p class=\"post\">' + text + '</p>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawUserList: async function (style, id, title, list) {\n            var html = \"\";\n            var max = list.length >= 5 ? 5 : list.length;\n            var length = reduceMotionFilter(1);\n\n            this.drawHTML(style + \" drawuserlist movetitle \" + id, title, \"<span class='info'>Downloading user data</span>\");\n            for (var index = 0; index < max; index++) {\n                var value = list[index];\n                if (value) {\n                    var friends = this.parent.friends;\n                    var friend = await friends.find(value.id);\n                    if (friend) {\n                        var plurker = new plurkerElement(value.id, friend, \"\", plurker => {\n                            plurker.avatar = new span('avatar', '<img src=\"' + friends.getAvatar(plurker.user.id) + '\" />');\n                            plurker.name = new span('name', plurker.user.display_name);\n                            plurker.counts = new span('count', value.count);\n                            plurker.el.appendChild(plurker.avatar.el);\n                            plurker.el.appendChild(plurker.name.el);\n                            plurker.el.appendChild(plurker.counts.el);\n                            plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.user.nick_name);\n                        });\n                        plurker.create();\n                        html += plurker.el.outerHTML;\n                    } else {\n                        max++;\n                    }\n                }\n            }\n            this.el.querySelector(\".\" + id + \" .htmlcontent\").innerHTML = html;\n\n            // Stagger animation\n            if (id == 'mostinteraction' || id == 'mvp') {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        scale: .3,\n                        opacity: 0\n                    }, {\n                        scale: 1,\n                        opacity: 1,\n                        ease: \"elastic.out(1.2, 0.5)\",\n                        duration: length * 3 / 4,\n                        stagger: {\n                            amount: length / 3,\n                            from: \"end\"\n                        }\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"50% 100%\",\n                        end: \"50% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            } else {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        y: 50,\n                        opacity: 0\n                    }, {\n                        y: 0,\n                        opacity: 1,\n                        duration: length,\n                        ease: \"power3.out\",\n                        stagger: length / 3\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"0% 100%\",\n                        end: \"0% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            }\n        },\n        attach: function (charttitle, node, max) {\n            var that = this;\n            var id = node.id;\n            var chart;\n            var title;\n            var text;\n            var anim;\n            var wrapper;\n            var capture;\n\n            var opacity = 0;\n            var position = max;\n            var zIndex = 0;\n            var hidden = true;\n\n            if (node.position <= max) {\n                hidden = false;\n                zIndex = position = (node.position - 1);\n                opacity = 1;\n            }\n\n            // Create the box\n            if (!that.next.querySelector(\".\" + id)) {\n                chart = document.createElement('div');\n                chart.setAttribute('class', 'chart');\n\n                title = document.createElement('div');\n                title.setAttribute('class', 'title');\n                title.innerHTML = charttitle;\n\n                text = document.createElement('div');\n                text.setAttribute('class', 'text');\n                text.appendChild(chart);\n                text.appendChild(title);\n\n                anim = document.createElement('div');\n                anim.setAttribute('class', 'anim');\n                anim.appendChild(text);\n\n                text = document.createElement('small');\n                text.innerHTML = \"Capture\";\n                capture = document.createElement('div');\n                capture.setAttribute('class', 'capture');\n                capture.appendChild(text);\n\n                wrapper = document.createElement('div');\n                wrapper.setAttribute('class', 'statistics middle statistics-wrap attach ' + id);\n                wrapper.appendChild(anim);\n                wrapper.appendChild(capture);\n\n                that.el.insertAdjacentElement(\"beforeend\", wrapper);\n            }\n\n            // Add  element\n            if (!hidden && !node.attached) {\n                var maxTop = max / (max - 1) * 100;\n\n                node.insertTo(that.el.querySelector(\".\" + id + ' .chart'));\n\n                gsap.set(node.el, {\n                    top: maxTop + \"%\",\n                    opacity: 0,\n                    zIndex: 0,\n                });\n            }\n            // Update position\n            if (!hidden || !node.hidden) {\n                var currentTop = position / (max - 1) * 100;\n                var length = reduceMotionFilter(1);\n\n                gsap.killTweensOf(node.el);\n                gsap.to(node.el, {\n                    top: currentTop + \"%\",\n                    opacity: opacity,\n                    zIndex: zIndex,\n                    duration: length / 2,\n                    ease: \"power3.out\",\n                    onComplete: function () {\n                        if (hidden) {\n                            node.destroy();\n                        }\n                    }\n                });\n                node.hidden = hidden;\n            }\n\n            node.update();\n        },\n        drawAll: async function (plurks) {\n            var response_percentage = Math.round((this.plurks_count - this.noresponse_count) / this.plurks_count * 100);\n\n            this.parent.most.responses.draw(plurks);\n            this.drawGraph('center graph percentage', response_percentage, 'Around <i>' + response_percentage + '%</i> of my plurks got <img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> responses ' + ((response_percentage <= 50) ? '<img src=\"https://api.iconify.design/noto:crying-face.svg\" />' : '<img src=\"https://api.iconify.design/noto:star-struck.svg\" />'));\n\n            this.draw('spansmall recievereplurk', this.replurker_count, 'I received <i><img src=\"https://api.iconify.design/noto:megaphone.svg\" /> ' + plural(this.replurker_count, 'replurk') + '</i>');\n            this.parent.most.replurk.draw(plurks);\n\n            this.parent.most.favorite.draw(plurks);\n            this.draw('spansmall recievelove', this.favourite_count, 'I recieved <i><img src=\"https://api.iconify.design/noto:red-heart.svg\" /> ' + plural(this.favourite_count, 'love') + '</i>');\n\n            this.draw('spansmall privateplurk', this.private_count, 'I posted <i><img src=\"https://api.iconify.design/noto:lip.svg\" /> ' + plural(this.private_count, 'private plurk') + '</i>');\n            this.draw('spansmall whisper', this.whispers_count, 'I posted <i><img src=\"https://api.iconify.design/noto:face-in-clouds.svg\" /> ' + plural(this.whispers_count, 'whisper') + '</i>');\n            this.draw('spansmall porn', this.porn_count, 'I posted <i><img src=\"https://api.iconify.design/noto:face-with-peeking-eye.svg\" /> ' + plural(this.porn_count, 'adult plurk') + '</i>');\n\n            this.draw('span2 responsecount', this.plurks_count + \" &rarr; \" + this.response_count, 'I received <i><img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> ' + plural(this.response_count, 'response') + '</i> from <i>' + plural(this.plurks_count, 'plurk') + '</i>');\n            this.draw('spansmall center coins', this.coins_count, 'I recieved <i><img src=\"https://api.iconify.design/noto:coin.svg\" /> ' + plural(this.coins_count, 'coin') + '</i>');\n\n            if (this.favorite_list.length > 0) this.drawUserList(\"avatar\", \"loved\", 'These Plurkers <i><img src=\"https://api.iconify.design/noto:red-heart.svg\" /> Loved</i> My Posts', this.favorite_list.sort(this.parent.most.sort));\n            if (this.replurker_list.length > 0) this.drawUserList(\"avatar\", \"replurked\", 'These Plurkers likes to <i><img src=\"https://api.iconify.design/noto:megaphone.svg\" /> Replurked</i> My Posts', this.replurker_list.sort(this.parent.most.sort));\n        }\n    };\n\n    // Most statistics object renderer\n    most = {\n        parent: this,\n        sort: function (a, b) {\n            return b.count - a.count;\n        },\n        // Find and count all based on regex\n        findregex: function (regex, replace, content, storage) {\n            var result = content.match(regex);\n\n            for (var index in result) {\n                var value = replace(result[index]);\n                var idx = storage.findIndex(el => el.value == value);\n\n                if (idx < 0) {\n                    storage.push({\n                        id: value,\n                        value: value,\n                        count: 1\n                    });\n                } else {\n                    storage[idx].count++;\n                }\n            }\n\n            return result;\n        },\n        init: function () {\n            this.responders.data = [];\n            this.mentions.data = [];\n            this.mentions.dataAll = [];\n            this.myemoticons.data = [];\n            this.hashtags.data = [];\n            this.links.links = [];\n            this.links.pics = [];\n            this.types.words = 0;\n            this.types.chars = 0;\n        },\n        countAll: async function (data) {\n            // Find and count all my emoticons from my post\n            if (data.user_id == this.parent.me.id) this.myemoticons.count(data.content);\n            // Find and count all mentions from my post\n            await this.mentions.count(data.content_raw);\n            // Find and count all hashtags from my post\n            if (data.user_id == this.parent.me.id) this.hashtags.count(data.content);\n            // Find and count all links and pictures post from my post\n            if (data.user_id == this.parent.me.id) this.links.count(data.content, data.plurk_id, data.response_count, data.replurkers_count, data.favorite_count);\n            // Find and count characther and words from my post\n            if (data.user_id == this.parent.me.id) this.types.count(data.content_raw);\n        },\n        responders: {\n            data: [],\n            parent: this,\n            count: async function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.user_id == response.user_id;\n                });\n\n                if (index < 0) {\n                    var friends = this.parent.friends;\n                    var user = await friends.find(response.user_id);\n                    this.data.push(new plurkerElement('mostresponders', user, friends.getAvatar(user.id)));\n                } else {\n                    this.data[index].count++;\n                }\n                this.data.sort(this.parent.most.sort);\n\n                // Update top 5\n                var index = 1;\n                for (var i = 0; i < this.data.length; i++) {\n                    this.data[i].position = this.data.length;\n                    if (this.data[i].user_id != this.parent.me.id && this.data[i].user_id != 99999) {\n                        this.data[i].position = index++;\n                        this.parent.statistics.attach('<i>Top <img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> Responders</i> <strong>of My Timeline</strong>', this.data[i], 5);\n                    }\n                }\n            },\n            draw: function () {\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatar(this.data[index].user_id), 'https://plurk.com/' + this.data[index].user.nick_name, '<i>Most Responder</i>', this.data[index].user.display_name, this.data[index].count);\n                }\n            }\n        },\n        mentions: {\n            data: [],\n            dataAll: [],\n            parent: this,\n            count: async function (content) {\n                var result = this.parent.most.findregex(/\\@(\\w{1,30})[\\ |\\:]/g, value => value.replace(/\\@|\\ |\\:/g, ''), content, this.data);\n                var max = 5;\n                var index = 1;\n\n                if (result) {\n                    // Update top 5\n                    this.data.sort(this.parent.most.sort);\n                    for (var idx = 0; idx < this.data.length; idx++) {\n                        this.data[idx].position = this.data.length;\n\n                        if (index <= max) {\n                            var user = await this.parent.friends.findByUsername(this.data[idx].value);\n\n                            if (this.data[idx].el == undefined) {\n                                this.data[idx] = new plurkerElement('mostmentionedbyme', user, \"\", plurker => {\n                                    plurker.avatar = new span('avatar', '<img src=\"' + this.parent.friends.getAvatar(plurker.user_id) + '\" />');\n                                    plurker.name = new span('name', \"@\" + plurker.nick_name);\n                                    plurker.counts = new span('count', plurker.count);\n                                    plurker.el.appendChild(plurker.avatar.el);\n                                    plurker.el.appendChild(plurker.name.el);\n                                    plurker.el.appendChild(plurker.counts.el);\n                                    plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.nick_name);\n                                });\n                            }\n\n                            if (user.id != this.parent.me.id && user.id != 99999) {\n                                this.data[idx].position = index++;\n                                this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/noto:person-raising-hand-medium-dark-skin-tone.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                            }\n                        }\n\n                        if (this.data[idx].el) this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/noto:person-raising-hand-medium-dark-skin-tone.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                    }\n                }\n            },\n            draw: function () {\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatarByUsername(this.data[index].value), 'https://plurk.com/' + this.data[index].value, '<i>Most Mentioned</i> by me', \"@\" + this.data[index].value, this.data[index].count);\n                }\n            }\n        },\n        myemoticons: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/emoticon_my\\\" src=\\\"(.*?)\\\"/g, function (value) {\n                    return value.replace(/emoticon_my\\\" src=\\\"|\\\"/gi, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 7;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><img src=\"' + this.data[i].value + '\" /> <span class=\"count\">' + this.data[i].count + '</span></div>';\n                if (html != \"\") this.parent.statistics.drawHTML(\"smallspan grid emoticons\", 'Most Used <i>My Emoticons</i>', html);\n            }\n        },\n        hashtags: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/hashtag\\\"\\>(.*?)\\</g, function (value) {\n                    return value.replace(/hashtag\\\"\\>\\#|\\.\\<|\\</g, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 5;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><a href=\"https://plurk.com/search?q=' + this.data[i].value + '\" target=\"_BLANK\" /><span class=\"count\">' + this.data[i].count + '</span> #' + this.data[i].value + '</a></div>';\n                if (html != \"\") {\n                    html = \"<strong>#</strong>\" + html;\n                    this.parent.statistics.drawHTML(\"hashtags\", 'Most Used <i>Hashtags</i>', html);\n                }\n            }\n        },\n        links: {\n            data: [],\n            links: [],\n            pics: [],\n            parent: this,\n            count: function (content, id, response, replurk, loved) {\n                var result = content.match(/href\\=\\\"(.*?)\\\"\\ class=\\\"(.*?)\\\"\\ rel/g);\n                var count = 0;\n                var pics = [];\n                var links = [];\n\n                if (result) for (var data of result) {\n                    if (!this.data[id]) {\n                        count = response + (replurk * 250) + (loved * 50);\n                    }\n\n                    if (data.includes(\"pictureservices\")) {\n                        this.pics.push(data);\n                        if (count > 0) {\n                            var pic = data.split('\\\"')\n                            pics.push({\n                                url: pic[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n                    }\n                    else {\n                        this.links.push(data);\n                        if (count > 0) {\n                            var link = data.split('\\\"')\n                            links.push({\n                                url: link[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n\n                    }\n                }\n\n                if (count) this.data.push({\n                    id: id,\n                    pics: pics,\n                    links: links,\n                    count: count,\n                    content: content\n                });\n            },\n            drawLinks: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].links.length > 0) {\n                        var link = this.data[index].links[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].id.toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"post\"><div class=\"info\">' + this.data[index].content + '</div><div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> ' + link.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/noto:megaphone.svg\" /> ' + link.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/noto:red-heart.svg\" /> ' + link.loved + '</span>' + url + '</div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n                if (this.links.length > 0) this.parent.statistics.drawDiv('spansmall sharedlinks', \"<div class='title'>I shared <i>🔗 \" + plural(this.links.length, 'link') + '</i> and this is the most popular one</div>' + result);\n            },\n            drawPics: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].pics.length > 0) {\n                        var pics = this.data[index].pics[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"box\"><div class=\"image\" style=\"background-image: url(' + api.url + \"?img=\" + pics.url + ')\"></div><div class=\"post\">' + this.data[index].content + '<div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> ' + pics.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/noto:megaphone.svg\" /> ' + pics.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/noto:red-heart.svg\" /> ' + pics.loved + '</span>' + url + '</div></div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n\n                if (this.pics.length > 0) this.parent.statistics.draw('spansmall sharedpictures', this.pics.length, 'I shared <i>🖼 ' + plural(this.pics.length, 'image') + '</i>');\n                if (result != \"\") this.parent.statistics.drawHTML('span2 previewpics', '<i>🖼 Most Popular Image</i>', result);\n            }\n        },\n        types: {\n            words: 0,\n            chars: 0,\n            parent: this,\n            count: function (content) {\n                var words = content.split(\" \");\n\n                this.chars += content.length;\n                this.words += words.length;\n            },\n            draw: function () {\n                if (this.chars > 0) this.parent.statistics.draw('span2 mediumnumber', this.chars, 'I typed more than  <i>' + pluralinwords(this.chars, 'character') + '</i>, around <i>' + pluralinwords(this.words, 'word') + '</i> this year');\n            }\n        },\n        responses: {\n            parent: this,\n            sort: function (a, b) {\n                return b.response_count - a.response_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.response_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostresponded', value.plurk_id, '<i><img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> Most Responded</i> ' + datediff(value.posted), value.content, value.response_count);\n                        return;\n                    }\n                }\n            }\n        },\n        replurk: {\n            parent: this,\n            sort: function (a, b) {\n                return b.replurkers_count - a.replurkers_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.replurkers_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostreplurked', value.plurk_id, '<i><img src=\"https://api.iconify.design/noto:megaphone.svg\" /> Most Replurked</i> ' + datediff(value.posted), value.content, value.replurkers_count);\n                        return;\n                    }\n                }\n            }\n        },\n        favorite: {\n            parent: this,\n            sort: function (a, b) {\n                return b.favorite_count - a.favorite_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.favorite_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostfavorited', value.plurk_id, '<i><img src=\"https://api.iconify.design/noto:red-heart.svg\" /> Most Loved</i> ' + datediff(value.posted), value.content, value.favorite_count);\n                        return;\n                    }\n                }\n            }\n        },\n        interaction: {\n            data: [],\n            parent: this,\n            count: function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier++;\n                    else this.data[index].multiplier = 1;\n                    this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span2\", \"mostinteraction\", \"Plurkers who really like to <i><img src='https://api.iconify.design/noto:speaking-head.svg' /> interact</i> with me\", result);\n                } catch {\n                    console.info(\"Error while counting most interacted plurker\");\n                }\n            }\n        },\n        mvp: {\n            data: [],\n            parent: this,\n            count: function (response, type) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (type == \"replurk\") {\n                        this.data[index].count += (response.count * 250);\n                    } else if (type == \"favorite\") {\n                        this.data[index].count += (response.count * 50);\n                    } else if (response.content_raw.length > 16) {\n                        if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier += .5;\n                        else this.data[index].multiplier = .5;\n                        this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                    }\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span3\", \"mvp\", \"My \" + this.parent.year + \" <i><img src='https://api.iconify.design/noto:biting-lip.svg' /> MVP</i>\", result);\n                } catch (error) {\n                    console.info(\"Error while counting my mvp\", error);\n                }\n            }\n        }\n    };\n\n    // Inactive plurker object\n    inactive = {\n        draw: (data, year) => {\n            this.statistics.draw('inactive', year + \" &#8617;\", 'I\\'ve been inactive since ' + year + ' <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n            this.statistics.drawPost('postcontent span2 inactivemore', data.plurk_id, '<i>My last Plurk</i> ' + datediff(data.posted), data.content, data.response_count);\n        },\n        empty: () => {\n            this.statistics.draw('inactive', '-', 'I didn\\'t post anything at this year <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n        }\n    }\n\n    // Loading object\n    loading = {\n        count: 0,\n        prev_count: 0,\n        counts: -1,\n        clean: false,\n        next: document.createElement('div'),\n        parent: this,\n        isComplete: function () { return this.count == this.counts },\n        init: function (next) {\n            this.count = 0;\n            this.prev_count = 0;\n            this.counts = -1;\n            this.clean = false;\n            this.next = next;\n        },\n        draw: function (item) {\n            return new Promise(resolve => {\n                var length = reduceMotionFilter(1);\n                this.prev_count = item;\n\n                if (!this.next.querySelector(\".statistics.statistics-loading\")) {\n                    this.parent.statistics.draw(\"statistics-loading\", item + \"%\", \"<i class='month'>Data from \" + this.year + \"</i>. Loading. <small>As long as you didn't close this browser tab, You can resume later by refreshing this page.</small>\");\n                }\n\n                // Animate loading\n                var load = { progress: this.prev_count };\n                gsap.to(load, {\n                    progress: Math.round(item),\n                    snap: \"progress\",\n                    ease: \"linear\",\n                    duration: length / 4,\n                    onUpdate: () => {\n                        var el = this.next.querySelector(\".statistics-loading .big\");\n                        if (el) el.innerHTML = load.progress + \"%\";\n                    },\n                    onComplete: async () => {\n                        if (this.clean) await this.done();\n                        resolve();\n                    }\n                });\n            });\n        },\n        loop: async function (length) {\n            this.clean = true;\n            this.counts = length;\n            await this.draw(0);\n        },\n        update: async function (month, value) {\n            var el = this.next.querySelector(\".statistics-loading .month\");\n            if (month && el) el.innerHTML = month;\n\n            if (this.counts >= 0) {\n                this.count = value ? value : this.count + 1;\n                await this.draw(Math.round(100 * (this.count / this.counts)));\n            }\n        },\n        fakeupdate: async function () {\n            if (this.counts >= 0) {\n                this.count++;\n                if (this.count >= (this.counts - 10)) this.count = (this.counts - 10);\n                await this.draw(100 * (this.count / this.counts));\n            }\n        },\n        forcedone: async function () {\n            this.count = this.counts;\n            await this.draw(100);\n        },\n        done: function () {\n            return new Promise(resolve => {\n                var length = reduceMotionFilter(1);\n\n                if (this.isComplete()) {\n                    var el = this.next.querySelector(\".statistics.statistics-loading\");\n                    this.clean = false;\n                    if (el) {\n                        gsap.to(el, {\n                            opacity: 0,\n                            width: 0,\n                            height: 0,\n                            padding: 0,\n                            margin: 0,\n                            overflow: \"hidden\",\n                            duration: length / 2,\n                            ease: \"power3.out\",\n                            onComplete: () => {\n                                el.remove();\n                                scroll.refresh();\n                                resolve();\n                            }\n                        });\n                    }\n                } else resolve();\n            });\n        }\n    }\n\n    // Scroll Animation\n    scrollAnimate = {\n        credits: (tl) => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation, #credits .made\"), {\n                y: window.innerHeight * 1 / 8\n            }, {\n                y: 0,\n                ease: \"linear\",\n                duration: length * 2,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                stagger: {\n                    from: 'end',\n                    amount: length / 10\n                },\n                duration: length,\n                ease: \"power3.in\"\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .made\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length,\n                ease: \"power3.in\"\n            }, length * 3 / 10);\n\n            return tl;\n        },\n        statistics: () => {\n            var next = this.next;\n\n            // Scroll animate statistics\n            scroll.push(tl => this.scrollAnimate.credits(tl), tl => ScrollTrigger.create({\n                trigger: next.querySelectorAll(\"#statistics\"),\n                start: \"100%-=\" + window.innerHeight + \" 0\",\n                end: \"100% 0\",\n                animation: tl,\n                scrub: .5\n            }));\n        },\n        permisions: () => {\n            var next = this.next;\n\n            // Scroll animation permission section\n            scroll.push((tl) => {\n                tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n                    y: 0\n                }, {\n                    y: window.innerHeight * -3 / 4,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sup\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * -1 / 10,\n                    rotation: -10,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sub\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * 1 / 10,\n                    rotation: 10,\n                    ease: \"linear\"\n                }, 0);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n            scroll.push((tl) => {\n                tl = this.scrollAnimate.credits(tl);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n        },\n        menu: () => {\n            // Scroll animation menu and logout\n            scroll.push(tl => tl, tl => {\n                return ScrollTrigger.create({\n                    trigger: 'main',\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    onUpdate: update => {\n                        var el1 = '.logo, .size, .lamp, .switch';\n                        var el2 = el1 + \", .footer > *\";\n\n                        if (update.direction > 0) {\n                            gsap.killTweensOf(_qAll(el2));\n                            gsap.to(_qAll(el1), { y: -100, opacity: 0 });\n                            gsap.to(_qAll('.footer > *'), { y: 100, opacity: 0 });\n                        } else {\n                            gsap.to(_qAll(el2), { y: 0, opacity: 1 });\n                        }\n                    }\n                });\n            });\n        },\n        browserBar: (login = true) => {\n            if (login) {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#hello',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#statistics',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnter: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"white\");\n                        }\n                    });\n                });\n            } else {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#permission',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n            }\n        }\n    }\n\n    constructor(year) {\n        // Which year?\n        this.year = year;\n        this.startDate = this.year + '-10-29T09:00:00';\n        this.endDate = new Date((this.year - 1) + '-10-29T09:00:00');\n        this.days = 60 * 60 * 24 * 1000;\n        this.fulldays = 365;\n    }\n\n    // Browser color\n    getSetStateColor(state) {\n        if (typeof (state) == \"object\" && state.length >= 1) {\n            if (state.length == 1) {\n                darkmode.browserColorDark = state[0];\n                darkmode.browserColorLight = state[0];\n            } else {\n                darkmode.browserColorDark = state[1];\n                darkmode.browserColorLight = state[0];\n            }\n        } else if (state == \"green\") {\n            darkmode.browserColorDark = \"#0d4f03\";\n            darkmode.browserColorLight = \"#60e670\";\n        } else if (state == \"yellow\") {\n            darkmode.browserColorDark = \"#705f02\";\n            darkmode.browserColorLight = \"#FFD700\";\n        } else {\n            darkmode.browserColorDark = \"#000000\";\n            darkmode.browserColorLight = \"#FFFFFF\";\n        }\n\n        return [darkmode.browserColorLight, darkmode.browserColorDark];\n    }\n    browserColor(state, duration, ease) {\n        this.getSetStateColor(state);\n        darkmode.setDarkMode(duration, ease);\n    }\n\n    // Show/hide Animations\n    // Login Pages\n    showLoginPage(tl) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n\n        this.browserColor(\"green\", 1);\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            display: \"\",\n            opacity: 0,\n            top: 0\n        }, {\n            opacity: 1,\n            duration: length,\n            ease: \"power3.in\"\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: length / 5,\n            duration: length,\n            ease: \"power3.out\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    top: \"\"\n                });\n            }\n        }, \">-\" + (length / 2));\n\n        return tl;\n    }\n    hideLoginPage(tl) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n\n        tl.set(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            top: 0,\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *, #permission form\"), {\n            y: 0,\n            opacity: 1,\n        }, {\n            y: 200,\n            opacity: 0,\n            stagger: {\n                from: \"end\",\n                amount: length / 5\n            },\n            duration: length,\n            ease: \"power3.in\",\n            onComplete: () => {\n                this.browserColor(\"yellow\");\n            }\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            opacity: 1\n        }, {\n            opacity: 0,\n            duration: length,\n            ease: \"power3.in\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    display: \"none\",\n                    top: \"\"\n                }, \">\");\n            }\n        }, \">-\" + (length / 4));\n\n        return tl;\n    }\n    // Statistic Pages\n    showStatisticPages() {\n        return new Promise(resolve => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n            var tl = gsap.timeline();\n\n            tl.fromTo(next.querySelectorAll(\"#hello\"), {\n                display: \"\",\n                opacity: 0\n            }, {\n                opacity: 1,\n                ease: \"power3.in\",\n                duration: length,\n                onStart: () => this.browserColor(\"green\", .5)\n            }, length / 4);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext > *\"), {\n                display: \"\",\n                opacity: 0,\n                y: 200\n            }, {\n                opacity: 1,\n                y: 0,\n                duration: length,\n                stagger: length / 5,\n                ease: \"power3.out\"\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\" #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n                display: \"\",\n                opacity: 0,\n                y: 200\n            }, {\n                opacity: 1,\n                y: 0,\n                duration: length,\n                stagger: length / 5,\n                ease: \"power3.out\"\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n                display: \"\",\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length / 2,\n                onComplete: () => resolve()\n            }, length / 2);\n        });\n    }\n    hideStatisticPages() {\n        return new Promise(async resolve => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n            var tl = gsap.timeline();\n\n            await animate.top(next);\n\n            tl.fromTo(next.querySelectorAll(\".footer > *, #hello .bgtext > *, #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n                opacity: 1,\n                y: 0\n            }, {\n                opacity: 0,\n                y: 200,\n                duration: length,\n                stagger: {\n                    from: \"end\",\n                    amount: length / 5\n                },\n                ease: \"power3.in\"\n            }, length / 5);\n            tl.set(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n                opacity: 0\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\"#hello\"), {\n                opacity: 1\n            }, {\n                opacity: 0,\n                duration: length,\n                ease: \"power3.in\",\n                onComplete: () => {\n                    gsap.set(next.querySelectorAll(\".grant\"), { display: \"none\" });\n                    resolve();\n                }\n            }, length / 2);\n        });\n    }\n\n    // Login messages\n    message(message, quick) {\n        var next = this.next;\n\n        var loginmessage = next.querySelector(\"#login-message\");\n\n        if (quick) {\n            loginmessage.innerHTML = message;\n        } else {\n            gsap.to(loginmessage, {\n                opacity: 0,\n                onComplete: function () {\n                    loginmessage.innerHTML = message;\n                    gsap.to(loginmessage, {\n                        opacity: 1\n                    });\n                }\n            });\n        }\n    }\n\n    // Logout\n    async requestLogout() {\n        var tl = gsap.timeline();\n\n        api.abort();\n\n        // Hide statistic pages\n        await this.hideStatisticPages(tl);\n\n        // Logout\n        await api.call(\"?fetch=logout\");\n        this.statistics.clear();\n        api.clear();\n        this.login();\n\n        scroll.refresh();\n    }\n\n    // Request token\n    async requestToken(text) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n        var tokenlink = next.querySelector(\"#tokenurl\");\n        tokenlink.textContent = \"Connecting Plurk...\";\n\n        var tl = gsap.timeline();\n        tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            duration: length,\n            ease: \"power3.out\"\n        }, length);\n        tl.fromTo(next.querySelectorAll(\"#permission h1, #permission li\"), {\n            display: \"\",\n            y: 50,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: length / 10,\n            duration: length,\n            ease: \"power3.out\"\n        }, length);\n\n        api.call(\"?request=token\").then(data => {\n            if (text) {\n                message(text);\n            } else {\n                tokenlink.textContent = \"Grant Access\";\n                tokenlink.setAttribute(\"href\", api.url + \"?redirect=\" + data.message.url);\n            }\n        }, () => {\n            message(\"Error when requesting verification from Plurk, please reload your browser again.\");\n        });\n\n        if (!text) next.querySelector(\"#permission form\").style.display = \"none\";\n    }\n\n    // Display current Plurker data\n    async displayPlurkerData() {\n        var plurker = this.me;\n        var next = this.next;\n        var extra = \"\";\n        var length = reduceMotionFilter(1);\n\n        // plurks_count\n        var days = (plurker.anniversary.years * 365) + plurker.anniversary.days;\n        var responses = Math.round(plurker.response_count / days);\n\n        next.querySelector(\"#hello .thumbs\").innerHTML = \"<img src='\" + plurker.avatar_big + \"' />\";\n        if (this.year == 2021) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>If \" + this.year + \" have been a rough year you, hopefully RePlurk will cheer you by bringing some good memories</p>\";\n        else if (this.year == 2022) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>It's 2020 v2, and this is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n        else next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>This is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\n        // Draw statistic\n        this.statistics.title('All Time', 'alltime');\n        if (plurker.anniversary.years && plurker.anniversary.days) {\n            this.statistics.draw('spansmall center posted', Math.round(plurker.plurks_count / days), 'I posted around <i><img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> ' + plural(Math.round(plurker.plurks_count / days), \"plurk\") + \" per day</i>\");\n\n            // Responses\n            var oneday = 16;\n            if (responses <= oneday) extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday / responses), \"hour\") + '</i>';\n            else extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday * 60 / responses), \"minute\") + '</i>';\n            this.statistics.draw('span2 center responded', responses, 'I responded around <i><img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> ' + plural(responses, \"time\") + \"</i> per day. \" + extra + \" when I'm not asleep\");\n\n            var join = new Date(plurker.join_date)\n            this.statistics.draw('spansmall center anniversary', \"<strong><i>\" + monthNames[join.getMonth()] + \"</i> <i>\" + join.getFullYear() + \"</i></strong> <em>\" + join.getDate() + \"</em>\", \"I joined Plurk <i>\" + plural(plurker.anniversary.years, \"year\") + \"</i> and <i>\" + plural(plurker.anniversary.days, \"day\") + \"</i> ago\");\n            this.statistics.draw('spansmall center badges', plurker.badges.length, \"I have <i><img src='https://api.iconify.design/noto:shield.svg' /> \" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        } else {\n            this.statistics.draw('', '-', \"There is no data in my timeline\");\n            this.statistics.draw('', plurker.badges.length, \"But at least I have <i>\" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        }\n\n        // Scroll animation hello section\n        scroll.push(tl => {\n            tl.fromTo(next.querySelectorAll(\"#hello .text, #hello .thumbs\"), {\n                y: 0\n            }, {\n                y: window.innerHeight * -3 / 4,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sup\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * -1 / 10,\n                rotation: -10,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sub\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * 1 / 10,\n                rotation: 10,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .arrow-big\"), {\n                y: 0,\n                opacity: 1\n            }, {\n                y: window.innerHeight * 1 / 4,\n                opacity: 0,\n                ease: \"linear\",\n                duration: length / 4,\n            }, 0);\n            return tl;\n        }, tl => ScrollTrigger.create({\n            trigger: next.querySelectorAll(\"#hello\"),\n            start: \"0 0\",\n            end: \"100% 0\",\n            animation: tl,\n            scrub: true\n        }));\n        scroll.refresh();\n    }\n    // Display statistics\n    async displayStatistics() {\n        this.statistics.title('This Year', 'thisyear');\n        this.statistics.draw(\"statistics-loading thisyearloading\", \"\", \"<i class='month'>Data from December</i>1 of 2. Loading \" + this.year + \" timeline. It can take up to 1 minute.\");\n\n        this.loading.init(this.next);\n        this.loading.loop(this.fulldays);\n\n        // Load loop timeline\n        var getTimeline = async (offset) => {\n            offset = (!offset) ? \"\" : \"&offset=\" + offset;\n\n            var data = await api.call(\"?fetch=plurk&filter=my\" + offset, 1);\n            if (data.success) {\n                this.friends.add(data.message.plurk_users);\n                this.plurks = this.plurks.concat(data.message.plurks);\n\n                if (data.message.plurks.length > 0) {\n                    var lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\n                    if (lastposted >= this.endDate) {\n                        this.loading.update(\"Data from \" + monthNames[lastposted.getMonth()] + \" \" + lastposted.getFullYear(), this.fulldays - Math.floor((lastposted - this.endDate) / this.days));\n\n                        // Load next plurks\n                        await getTimeline(data.message.offset);\n                    } else {\n                        while (lastposted < this.endDate && this.plurks.length > 1) {\n                            this.plurks.pop();\n                            lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n                        }\n                        await this.loading.forcedone();\n                    }\n                } else {\n                    await this.loading.forcedone();\n                }\n            } else {\n                this.requestLogout();\n            }\n        }\n        await getTimeline(this.startDate);\n\n        // When loading done\n        var largest_poll_result = 0;\n        if (this.plurks.length > 1) {\n            // Count user statistics\n            this.statistics.plurks_count = 0;\n            this.plurks.forEach(plurk => {\n                // Calculate the statistics\n                if (plurk.responded) this.statistics.responded_count++;\n                if (plurk.owner_id == this.me.id) {\n                    this.statistics.plurks_count++;\n                    this.statistics.replurker_count += plurk.replurkers.length;\n                    this.statistics.replurker_list = this.statistics.listCount(this.statistics.replurker_list, plurk.replurkers);\n                    this.statistics.favourite_count += plurk.favorers.length;\n                    this.statistics.favorite_list = this.statistics.listCount(this.statistics.favorite_list, plurk.favorers);\n                    if (plurk.anonymous) this.statistics.whispers_count++;\n                    if (plurk.coins) this.statistics.coins_count += plurk.coins;\n                    if (plurk.porn) this.statistics.porn_count++;\n                    if (!plurk.response_count) this.statistics.noresponse_count++;\n                    if (plurk.plurk_type == 3) this.statistics.private_count++;\n                    this.statistics.response_count += plurk.response_count;\n\n                    if (plurk.content_raw.includes(\"instagram.com\")) this.statistics.instagrammer_count++;\n                    if (plurk.content_raw.includes(\"facebook.com\")) this.statistics.facebooker_count++;\n                    else if (plurk.content_raw.includes(\"fb.watch\")) this.statistics.facebooker_count++;\n                    if (plurk.content_raw.includes(\"twitter.com\")) this.statistics.twitterer_count++;\n                    if (plurk.content_raw.includes(\"reddit.com\")) this.statistics.redditor_count++;\n                    if (plurk.content_raw.includes(\"tiktok.com\")) this.statistics.tiktoker_count++;\n                    if (plurk.content_raw.includes(\"imgur.com\")) this.statistics.imgurer_count++;\n                    if (plurk.content_raw.includes(\"youtube.com\")) this.statistics.youtuber_count++;\n\n                    // Calculate polls\n                    if (plurk.with_poll) {\n                        var response_count = plurk.poll.response.response_count;\n                        this.statistics.poll_count++;\n                        this.statistics.poll_responder_count += response_count;\n\n                        if (largest_poll_result < response_count) {\n                            largest_poll_result = response_count;\n                            this.statistics.poll_popular_plurk = plurk;\n                        }\n                    }\n                } else if (plurk.responded) this.statistics.responded_other_count++;\n            });\n\n            // Sort based on date\n            this.plurks.sort((a, b) => new Date(b.posted) - new Date(a.posted));\n\n            // Draw statistics\n            try {\n                await this.statistics.drawAll(this.plurks);\n            } catch (error) {\n                console.info(\"Error while counting statistics\", error);\n            }\n\n            // Display extended statistics\n            this.displayExtendedStatistics();\n        } else {\n            if (this.plurks[0]) {\n                var date = new Date(plurk[0].posted);\n                inactive.draw(plurk[0], date.getFullYear());\n            }\n            else inactive.empty();\n        }\n    }\n    // Display extended statistics\n    async displayExtendedStatistics() {\n        // Deeper user statistics\n        this.statistics.title('Dig Deeper', 'digdeeper');\n        this.statistics.draw(\"statistics-loading digdeeperloading\", \"\", \"<i class='month'>Data from \" + this.year + \"</i> 2 of 2. Loading all responses. <small>If the loading seems to stop, refresh your browser tab to resume your download. Closing your browser tab will clear all downloaded data.</small>\");\n\n        // Load each post responses and calculate statistics\n        this.loading.init(this.next);\n        this.loading.loop(this.plurks.length);\n\n        // Get the responses for each plurks in parallel\n        this.plurks.sort((a, b) => new Date(a.posted) < new Date(b.posted));\n        for (var plurk of this.plurks) {\n            var date = new Date(plurk.posted);\n            this.loading.update(\"Data from \" + monthNames[date.getMonth()] + \" \" + date.getFullYear());\n\n            // Count all\n            await this.most.countAll(plurk);\n\n            // Count responses\n            if (plurk.response_count > 0 && (plurk.responded || plurk.owner_id == this.me.id)) {\n                var result = await api.call(\"?fetch=response&plurk_ids=\" + plurk.plurk_id);\n                if (result.success) for (var message of result.message) {\n                    // Add friends from response lists\n                    this.friends.add(message.friends);\n\n                    // Count the rest of statistics\n                    for (var response of message.responses) {\n                        // Find and count all responders\n                        await this.most.responders.count(response);\n                        this.most.interaction.count(response);\n                        this.most.mvp.count(response, \"response\");\n                        // Count all\n                        await this.most.countAll(response);\n                    }\n                } else {\n                    this.requestLogout();\n                    break;\n                }\n            }\n        }\n\n        // Display How Many Links\n        this.most.links.drawLinks();\n        // Display How Many Pictures\n        this.most.links.drawPics();\n\n        // Draw Results\n        // Display Most Responder\n        // this.most.responders.draw();\n\n        // Display Most Interaction\n        this.most.interaction.draw();\n\n        // Display Most Mentioned by me\n        // this.most.mentions.draw();\n\n        // Display How Many Words-Characters\n        this.most.types.draw();\n\n        // Display Most hashtags by me\n        this.most.hashtags.draw();\n\n        // Display Most My Emoticons\n        this.most.myemoticons.draw();\n\n        // Display MVP\n        this.statistics.replurker_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"replurk\");\n        });\n        this.statistics.favorite_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"favorite\");\n        });\n        this.most.mvp.draw();\n\n        // Replurk Badges\n        var gender = \"<img src='https://api.iconify.design/noto:crown.svg' /> Leader\";\n        if (this.me.gender == 1) gender = \"<img src='https://api.iconify.design/noto:crown.svg' /> King\";\n        if (this.me.gender == 0) gender = \"<img src='https://api.iconify.design/noto:crown.svg' /> Queen\";\n\n        var tiktok = \"<img src='https://api.iconify.design/noto:mirror-ball.svg' />\";\n        if (this.me.gender == 1) tiktok = \"<img src='https://api.iconify.design/noto:man-dancing-medium-dark-skin-tone.svg' />\";\n        if (this.me.gender == 0) tiktok = \"<img src='https://api.iconify.design/noto:woman-dancing-medium-dark-skin-tone.svg' />\";\n\n        var facebook = \"<img src='https://api.iconify.design/noto:older-person.svg' />\";\n        if (this.me.gender == 1) facebook = \"<img src='https://api.iconify.design/noto:old-man.svg' />\";\n        if (this.me.gender == 0) facebook = \"<img src='https://api.iconify.design/noto:old-woman.svg' />\";\n\n        var plurker = \"<img src='https://api.iconify.design/noto:person-bowing.svg' />\";\n        if (this.me.gender == 1) plurker = \"<img src='https://api.iconify.design/noto:man-bowing.svg' />\";\n        if (this.me.gender == 0) plurker = \"<img src='https://api.iconify.design/noto:woman-bowing.svg' />\";\n\n        this.statistics.title('RePlurk Badges', 'replurkbadges');\n        this.statistics.title('What are RePlurk Badges consist of? They are badges based on your activities in Plurk. Currently there are 16 badges in total, for activities such as: creating lots of polls (Polling ' + gender + '), receiving lots of coins (Plurk Coins Billionaire), writing lots of posts (Novelist and Keyboard Warrior), sharing lots of pictures and links (Meme Lord & Missing Link), sharing social medias urls (there are 7 badges), posting lots of adult posts (Adult-er), getting lots of replurks (Trendsetter), and constantly posting in Plurk almost everyday (Active Plurker).', 'replurkbadges description');\n        if (this.statistics.poll_count >= 5) this.statistics.draw('spansmall center badges pollbadges', \"<img src='https://api.iconify.design/noto:ballot-box-with-ballot.svg' />\", \"<strong>Polling \" + gender + \"</strong>\");\n        if (this.statistics.coins_count >= 5) this.statistics.draw('spansmall center badges coinbadges', \"<img src='https://api.iconify.design/noto:coin.svg' />\", \"<strong>Plurk Coins Billionaire</strong>\");\n        if (this.most.types.words >= 50000) this.statistics.draw('spansmall center badges novelistbadges', \"<img src='https://api.iconify.design/noto:book.svg' />\", \"<strong>Novelist</strong>\");\n        if (this.most.types.chars >= 1000000) this.statistics.draw('spansmall center badges keyboardbadges', \"<img src='https://api.iconify.design/noto:keyboard.svg' />\", \"<strong>Keyboard Warrior</strong>\");\n        if (this.most.links.pics.length >= 356) this.statistics.draw('spansmall center badges memebadges', \"<img src='https://api.iconify.design/noto:cat.svg' />\", \"<strong>Meme Lord</strong>\");\n        if (this.most.links.links.length >= 356 / 2) this.statistics.draw('spansmall center badges missingbadges', \"<img src='https://api.iconify.design/noto:orangutan.svg' />\", \"<strong>The Missing Link</strong>\");\n        if (this.statistics.instagrammer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/noto:camera.svg' />\", \"<strong>Instagrammer</strong>\");\n        if (this.statistics.facebooker_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', facebook, \"<strong>Facebooker</strong>\");\n        if (this.statistics.twitterer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/noto:hatching-chick.svg' />\", \"<strong>The Real Chief Twit</strong>\");\n        if (this.statistics.redditor_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/noto:robot.svg' />\", \"<strong>/r</strong>\");\n        if (this.statistics.tiktoker_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', tiktok, \"<strong>Tiktoker</strong>\");\n        if (this.statistics.imgurer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/noto:framed-picture.svg' />\", \"<strong>Imgur-er</strong>\");\n        if (this.statistics.youtuber_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/noto:movie-camera.svg' />\", \"<strong>Youtuber <img src='https://api.iconify.design/noto:sleepy-face.svg' /></strong>\");\n        if (this.statistics.porn_count >= 10) this.statistics.draw('spansmall center badges adultbadges', \"<img src='https://api.iconify.design/noto:face-with-peeking-eye.svg' />\", \"<strong>Adult-er</strong>\");\n        if (this.statistics.replurker_count >= 50) this.statistics.draw('spansmall center badges plurkerbadges', \"<img src='https://api.iconify.design/noto:trophy.svg' />\", \"<strong>Trendsetter</strong>\");\n        if (this.statistics.plurks_count >= 356 * 1.5) this.statistics.draw('spansmall center badges plurkerbadges', \"<img src='https://api.iconify.design/noto:military-medal.svg' />\", \"<strong>Active Plurker \" + plurker + \"</strong>\");\n\n        this.logSessionStrorageSize();\n    }\n\n    // Display LocalStorage stats\n    logSessionStrorageSize() {\n        function getSessionStorageSize() {\n            var totalBytes = 0;\n\n            for (var key in sessionStorage) {\n                if (sessionStorage.hasOwnProperty(key)) {\n                    var itemValue = sessionStorage.getItem(key);\n                    totalBytes += itemValue.length;\n                }\n            }\n\n            // Convert bytes to Megabytes\n            var totalMegabytes = Math.round((totalBytes / 1024 / 1024) * 100) / 100;\n\n            return totalMegabytes;\n        }\n\n        // Usage\n        var sessionStorageSize = getSessionStorageSize();\n        console.info('SessionStorage Size: ' + sessionStorageSize + ' MB');\n    }\n\n    // Check login status\n    async login(clear) {\n        var next = this.next;\n\n        this.me = { id: 0 };\n        this.friends.init();\n        this.statistics.init(next);\n        this.most.init();\n        this.plurks = [];\n\n        scroll.destroy();\n\n        window.scrollTo(0, 0);\n        this.browserColor(\"yellow\");\n\n        // Scroll animation menu and logout\n        this.scrollAnimate.menu();\n\n        // Check is server have open session\n        var tl = gsap.timeline();\n        tl.set(next.querySelector(\"#hello .arrow-big\"), {\n            opacity: 0\n        });\n\n        var data = await api.call(\"?\");\n        var interval = null;\n        if (data.success) {\n            this.me = data.message;\n\n            // Initial Plurk statistics\n            await this.displayPlurkerData();\n\n            // Display the rest of the statistics\n            this.displayStatistics();\n\n            // Scroll top top\n            await animate.top(next);\n\n            // Hide login page\n            if (clear) next.querySelector(\"#permission\").style.display = \"none\";\n            else tl = this.hideLoginPage(tl);\n\n            // Show statistic pages\n            await this.showStatisticPages(tl);\n\n            // Add logout event\n            next.querySelector(\"#logout\").onclick = () => this.requestLogout();\n\n            // Scroll animate statistics\n            this.scrollAnimate.statistics();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar();\n\n            scroll.refresh();\n        } else {\n            // Hide statistic pages\n            if (clear) next.querySelectorAll(\".grant\").forEach(function (el) { el.style.display = \"none\"; });\n            // Show login page\n            this.showLoginPage(tl);\n            // Request token\n            this.requestToken();\n\n            // Scroll animation permission section\n            this.scrollAnimate.permisions();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar(false);\n\n            scroll.refresh();\n\n            // Automatic login\n            interval = setInterval(async () => {\n                var data = await api.call(\"?\");\n\n                if (data.success) {\n                    clearInterval(interval);\n                    this.login();\n                }\n            }, 3000);\n        }\n\n        // Snap\n        next.querySelectorAll(\"section.snap\").forEach(el => scroll.snap(el));\n        next.querySelectorAll(\"section.snap-bottom\").forEach(el => scroll.snap(el, \"bottom\"));\n    }\n\n    // Run the API call\n    run(el) {\n        return new Promise(resolve => {\n            var length = reduceMotionFilter(1);\n            this.next = el;\n            this.browserColor(\"yellow\");\n\n            // Run the login\n            gsap.fromTo(this.next.querySelectorAll('#credits'), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length,\n                ease: \"power3.in\",\n                onComplete: async () => {\n                    // Change color\n                    this.browserColor(\"yellow\", 0);\n\n                    // Display login\n                    await this.login(true);\n\n                    resolve();\n                }\n            });\n        });\n    }\n}\n\nexport default replurk;"],"names":["iconLink","span","constructor","classname","text","this","el","document","createElement","setAttribute","innerHTML","update","textContent","updateHTML","colors","oldcolor","randomcolors","allColorArrays","arrayIndex","Math","floor","Date","now","length","getRandomColor","color","utils","shuffle","slice","pop","plurkerElement","id","data","avatarurl","customcreate","user","user_id","value","nick_name","attached","hidden","count","position","created","counts","create","avatar","name","display_name","appendChild","insertTo","element","insertAdjacentElement","destroy","remove","next","plurks","me","friends","unavailable","parent","init","add","new_friends","Object","assign","find","async","findIndex","result","call","success","temp","message","user_info","push","findByUsername","index","toLowerCase","getAvatar","has_profile_image","getAvatarByUsername","user_name","statistics","whispers_count","coins_count","porn_count","noresponse_count","private_count","replurker_count","replurker_list","favourite_count","favorite_list","response_count","responded_count","responded_other_count","responded_other_list","plurks_count","poll_count","poll_responder_count","poll_popular_plurk","redditor_count","tiktoker_count","instagrammer_count","imgurer_count","facebooker_count","twitterer_count","youtuber_count","querySelector","MutationObserver","mutationsList","forEach","mutation","addedNodes","afterDraw","observe","attributes","childList","subtree","clear","listCount","list","collection","title","style","loading","insertAdjacentHTML","anim","set","background","to","opacity","duration","ease","screen","matchMedia","tl","fromTo","children","y","window","innerHeight","trigger","start","end","animation","scrub","number","Number","load","progress","snap","onUpdate","toggleActions","querySelectorAll","x","height","getAttribute","capture","refresh","onclick","generating","imgs","body","cursor","img","includes","localUrl","url","_","round","canvas","backgroundColor","logging","link","display","download","year","href","toDataURL","click","removeChild","setTimeout","wrapper","draw","drawDiv","drawGraph","drawImage","image","badge","drawHTML","html","drawLink","drawPost","toString","drawUserList","max","friend","plurker","outerHTML","scale","stagger","amount","from","attach","charttitle","node","chart","that","zIndex","maxTop","top","currentTop","killTweensOf","onComplete","drawAll","response_percentage","most","responses","replurk","favorite","sort","a","b","findregex","regex","replace","content","storage","match","idx","responders","mentions","dataAll","myemoticons","hashtags","links","pics","types","words","chars","countAll","content_raw","plurk_id","replurkers_count","favorite_count","response","i","undefined","loved","pic","split","drawLinks","drawPics","owner_id","plurk_type","posted","interaction","multiplier","console","info","mvp","type","error","inactive","empty","prev_count","clean","isComplete","item","Promise","resolve","done","loop","month","fakeupdate","forcedone","width","padding","margin","overflow","scrollAnimate","credits","permisions","rotation","menu","el1","el2","direction","browserBar","login","onLeave","browserColor","onEnterBack","onEnter","startDate","endDate","days","fulldays","getSetStateColor","state","browserColorDark","browserColorLight","setDarkMode","showLoginPage","hideLoginPage","showStatisticPages","timeline","onStart","hideStatisticPages","quick","loginmessage","requestLogout","abort","requestToken","tokenlink","then","displayPlurkerData","extra","anniversary","years","avatar_big","oneday","join","join_date","getMonth","getFullYear","getDate","badges","displayStatistics","getTimeline","offset","plurk_users","concat","lastposted","largest_poll_result","plurk","responded","replurkers","favorers","anonymous","coins","porn","with_poll","poll","displayExtendedStatistics","date","gender","tiktok","facebook","logSessionStrorageSize","sessionStorageSize","totalBytes","key","sessionStorage","hasOwnProperty","getItem","getSessionStorageSize","scrollTo","interval","setInterval","clearInterval","run"],"sourceRoot":""}