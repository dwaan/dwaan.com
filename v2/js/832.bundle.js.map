{"version":3,"file":"832.bundle.js","mappings":"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","sources":["webpack://dwaan/./src/js/replurk/icons.js","webpack://dwaan/./src/js/replurk/main.js"],"sourcesContent":["\"use strict\";\n\nvar iconLink = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\"><path id=\"right\" d=\"M19.188,12.001c0,1.1-0.891,2.015-1.988,2.015l-4.195-0.015C13.543,15.089,13.968,16,15.002,16h3C19.658,16,21,13.657,21,12s-1.342-4-2.998-4h-3c-1.034,0-1.459,0.911-1.998,1.999l4.195-0.015C18.297,9.984,19.188,10.901,19.188,12.001z\"/><path id=\"center\" d=\"M8,12c0,0.535,0.42,1,0.938,1h6.109c0.518,0,0.938-0.465,0.938-1c0-0.534-0.42-1-0.938-1H8.938C8.42,11,8,11.466,8,12z\"/><path id=\"left\" d=\"M4.816,11.999c0-1.1,0.891-2.015,1.988-2.015L11,9.999C10.461,8.911,10.036,8,9.002,8h-3c-1.656,0-2.998,2.343-2.998,4s1.342,4,2.998,4h3c1.034,0,1.459-0.911,1.998-1.999l-4.195,0.015C5.707,14.016,4.816,13.099,4.816,11.999z\"/></svg>';\n\nexport default iconLink;","\"use strict\";\n\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js';\nimport api from \"../helpers/api.js\";\nimport scroll from \"../helpers/scroll.js\";\nimport darkmode from \"../helpers/darkmode.js\";\nimport animate from \"../helpers/animate.js\";\nimport html2canvas from \"html2canvas\";\nimport { _q, _qAll, hasClass, plural, monthNames, animateNumber, datediff, pluralinwords, reduceMotionFilter, waitForImg } from '../helpers/helper.js';\nimport iconLink from \"./icons.js\";\n\n/*\n    Color randomizer\n\n    1. colors: array of colors value\n    2. getRandomColor(): get the randomized color from colors list\n*/\nclass colors {\n    constructor() {\n        this.oldcolor = \"\";\n        this.randomcolors = [];\n\n        const allColorArrays = [\n            [\n                'rgb(63,94,251)',     // Dodger Blue\n                'rgb(252,70,107)',    // Radical Red\n                'rgb(34,193,195)',    // Light Sea Green\n                'rgb(253,187,45)',    // Goldenrod\n                'rgb(195,34,190)',    // Deep Pink\n                'rgb(219,158,0)',     // Golden Yellow\n                'rgb(75,231,152)',    // Medium Spring Green\n                'rgb(195,34,103)',    // Cerise\n                'rgb(45,182,253)'     // Dodger Blue (Lighter)\n            ]\n        ];\n\n        const seconds = Math.floor(Date.now() / 1000); // Get current time in seconds\n        const arrayIndex = seconds % allColorArrays.length; // Use seconds to determine the index\n        this.colors = allColorArrays[arrayIndex];\n    }\n\n    getRandomColor() {\n        var color;\n        do {\n            this.randomcolors = gsap.utils.shuffle(this.colors).slice();\n        } while (this.oldcolor == (color = this.randomcolors.pop()));\n        this.oldcolor = color;\n        return color;\n    }\n}\n\n/*\n    Plurk element object spesification:\n\n    1. id: contain the id name\n    2. user: contain user object\n    3. attached: status of element is attached in DOM or not\n    4. create(): create the DOM element\n    4. destroy(): remove the DOM element\n    4. update(): update the DOM element based on it's current value\n    5. insertTo(element): insert DOM element to spesific element, also will check if it's already created or not\n\n*/\nclass plurkerElement {\n    constructor(id, data, avatarurl, customcreate) {\n        this.id = id;\n        this.user = data;\n        this.user_id = data.id;\n        this.value = data.nick_name;\n        this.nick_name = data.nick_name;\n        this.attached = false;\n        this.hidden = true;\n        this.count = 1;\n        this.position = 0;\n        this.customcreate = customcreate;\n        this.el = document.createElement('a');\n        this.created = false;\n        this.avatarurl = avatarurl;\n        this.counts = new span('count', this.count);\n    }\n\n    create() {\n        this.created = true;\n\n        this.el.setAttribute(\"id\", this.id + this.user_id);\n        this.el.setAttribute(\"class\", 'plurkers');\n        this.el.setAttribute(\"href\", 'https://plurk.com/' + this.user.nick_name);\n        this.el.setAttribute(\"target\", '_BLANK');\n\n        if (!this.customcreate) {\n            this.avatar = new span('avatar', '<img src=\"' + this.avatarurl + '\" />');\n            this.name = new span('name', this.user.display_name);\n            this.counts = new span('count', this.count);\n            this.el.appendChild(this.avatar.el);\n            this.el.appendChild(this.name.el);\n            this.el.appendChild(this.counts.el);\n        } else {\n            this.customcreate(this);\n        }\n    }\n\n    insertTo(element) {\n        if (!this.created) this.create();\n\n        this.attached = true;\n        element.insertAdjacentElement(\"beforeend\", this.el);\n    }\n\n    destroy() {\n        this.attached = false;\n\n        if (this.el) {\n            this.el.remove();\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    update() {\n        // Only update when it's attached\n        if (this.attached) {\n            this.counts.update(this.count);\n        }\n    }\n}\n\n\n/*\n    Replurk class\n*/\nclass replurk {\n    // Draw in which element?\n    next = document.createElement('div');\n    // Plurks array\n    plurks = [];\n    // Plurker profile object\n    me = { \"id\": 3203568, \"has_profile_image\": 1, \"timeline_privacy\": 0, \"nick_name\": \"dwan\", \"display_name\": \"Dwan\", \"date_of_birth\": \"Sat, 29 Oct 1983 00:01:00 GMT\", \"avatar\": 41917598, \"gender\": 1, \"karma\": 199.24, \"premium\": true, \"verified_account\": false, \"dateformat\": 3, \"default_lang\": \"en\", \"friend_list_privacy\": \"public\", \"name_color\": \"FFA59A\", \"full_name\": \"Dwan B.\", \"location\": \"Tel Aviv-Yafo, Dan, Israel\", \"timezone\": \"Asia/Jerusalem\", \"phone_verified\": 0, \"bday_privacy\": 1, \"plurks_count\": 14598, \"response_count\": 79484, \"pinned_plurk_id\": 0, \"background_id\": 0, \"show_ads\": false, \"show_location\": 0, \"profile_views\": 36112, \"avatar_small\": \"https://avatars.plurk.com/3203568-small41917598.gif\", \"avatar_medium\": \"https://avatars.plurk.com/3203568-medium41917598.gif\", \"avatar_big\": \"https://avatars.plurk.com/3203568-big41917598.jpg\", \"about\": \"Mr. Goat\\u2019s dad and full-time husband\", \"about_renderred\": \"Mr. Goat\\u2019s dad and full-time husband\", \"page_title\": \"The world revolve around me\", \"recruited\": 14, \"relationship\": \"married\", \"friends_count\": 571, \"fans_count\": 498, \"join_date\": \"Wed, 15 Oct 2008 07:48:05 GMT\", \"privacy\": \"world\", \"accept_private_plurk_from\": \"all\", \"post_anonymous_plurk\": false, \"badges\": [\"10_invites\", \"14\", \"9\", \"10000_views\", \"10000_plurks\", \"50000_comments\", \"upload_profile_image\", \"50_fans\", \"coin\"], \"link_facebook\": false, \"setup_facebook_sync\": false, \"setup_twitter_sync\": false, \"setup_weibo_sync\": false, \"filter\": { \"porn\": 2, \"anonymous\": 0, \"keywords\": null }, \"anniversary\": { \"years\": 13, \"days\": 27 }, \"phone_number\": null, \"creature\": 0, \"creature_url\": null, \"creature_special\": 1, \"creature_special_url\": null };\n\n    /*\n        Friends object spesification:\n\n        1. data: contains all the friends collection data\n        2. add(data): add friend to friends collection data\n        3. find(user_id): return friend data based on their id\n        4. findByUsername(nick_name): return friend data based on their nick name\n        5. getAvatar(user_id): return avatar url based on their id for from friends collection data\n        6. getAvatarByUsername(user_id): return avatar url based on their nick name for from friends collection data\n    */\n    friends = {\n        data: {},\n        unavailable: [],\n        parent: this,\n        init: function () {\n            this.data = {};\n        },\n        add: function (new_friends) {\n            Object.assign(this.data, new_friends);\n        },\n        find: async function (user_id) {\n            if (this.unavailable.findIndex(el => el == user_id) >= 0) return false;\n\n            if (this.data && this.data[user_id]) {\n                return this.data[user_id];\n            } else {\n                var result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&user_id=\" + user_id);\n\n                if (result.success) {\n                    var temp = {};\n                    temp[result.message.user_info.id] = result.message.user_info;\n                    this.add(temp);\n                    return result.message.user_info;\n                } else {\n                    this.unavailable.push(user_id);\n                    return false;\n                }\n            }\n        },\n        findByUsername: async function (nick_name) {\n            var user_id = false;\n\n            if (this.unavailable.findIndex(el => el == nick_name) >= 0) return false;\n\n            for (var index in this.data) {\n                if (this.data[index].nick_name.toLowerCase() == nick_name.toLowerCase()) {\n                    user_id = index;\n                    break;\n                }\n            }\n\n            if (user_id) {\n                return this.data[user_id];\n            } else {\n                var result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&nick_name=\" + nick_name);\n\n                if (result.success) {\n                    var temp = {};\n                    temp[result.message.user_info.id] = result.message.user_info;\n                    this.add(temp);\n                    return result.message.user_info;\n                } else {\n                    this.unavailable.push(nick_name);\n                    return false;\n                }\n            }\n        },\n        getAvatar: function (user_id) {\n            if (user_id && this.data && this.data[user_id]) {\n                if (this.data[user_id].has_profile_image) {\n                    var avatar = \"\";\n                    if (this.data[user_id].avatar) avatar = this.data[user_id].avatar;\n                    return 'https://avatars.plurk.com/' + user_id + '-big' + avatar + '.jpg';\n                }\n            }\n            return 'https://plurk.com/static/default_big.jpg';\n        },\n        getAvatarByUsername: function (user_name) {\n            var user_id = false;\n\n            if (user_name) {\n                for (var index in this.data) {\n                    if (this.data[index].nick_name.toLowerCase() == user_name.toLowerCase()) {\n                        user_id = index;\n                        break;\n                    }\n                }\n            }\n\n            return this.getAvatar(user_id);\n        }\n    }\n\n    // Statistics plurker object renderer\n    statistics = {\n        // Storage\n        whispers_count: 0,\n        coins_count: 0,\n        porn_count: 0,\n        noresponse_count: 0,\n        private_count: 0,\n        replurker_count: 0,\n        replurker_list: [],\n        favourite_count: 0,\n        favorite_list: [],\n        response_count: 0,\n        responded_count: 0,\n        responded_other_count: 0,\n        responded_other_list: [],\n        plurks_count: 0,\n        poll_count: 0,\n        poll_responder_count: 0,\n        poll_popular_plurk: {},\n        redditor_count: 0,\n        tiktoker_count: 0,\n        instagrammer_count: 0,\n        imgurer_count: 0,\n        facebooker_count: 0,\n        twitterer_count: 0,\n        youtuber_count: 0,\n        id: 0,\n        // Other\n        next: document.createElement('div'),\n        el: document.createElement('div'),\n        randomcolors: [],\n        parent: this,\n        init: function (next) {\n            this.whispers_count = 0;\n            this.coins_count = 0;\n            this.porn_count = 0;\n            this.noresponse_count = 0;\n            this.private_count = 0;\n            this.replurker_count = 0;\n            this.replurker_list = [];\n            this.favourite_count = 0;\n            this.favorite_list = [];\n            this.response_count = 0;\n            this.responded_count = 0;\n            this.responded_other_count = 0;\n            this.responded_other_list = [];\n            this.plurks_count = 0;\n            this.id = 0;\n            this.next = next;\n            this.randomcolors = [];\n\n            this.el = this.next.querySelector(\"#statistics\");\n\n            // Obverse when element is added to DOM\n            var observer = new MutationObserver((mutationsList) => {\n                mutationsList.forEach(mutation => {\n                    mutation.addedNodes.forEach(el => {\n                        this.afterDraw(el);\n                    });\n                });\n            });\n            observer.observe(this.el, {\n                attributes: true,\n                childList: true,\n                subtree: false\n            });\n        },\n        clear: function () {\n            this.el.innerHTML = \"\";\n        },\n        listCount: function (list, collection) {\n            if (collection.length > 0) {\n                collection.forEach(value => {\n                    var index = list.findIndex(el => el.id == value)\n\n                    if (index < 0) list.push({ id: value, count: 1 });\n                    else list[index].count++;\n                });\n            }\n\n            return list;\n        },\n        title: function (text, style = \"\", loading = false) {\n            if (loading) this.el.insertAdjacentHTML('beforeend', '<div class=\"statistics middle statistics-title ' + style + '\"><h3><span>' + text + '</span><span class=\"loading\"><i/></span></h3></div>');\n            else this.el.insertAdjacentHTML('beforeend', '<div class=\"statistics middle statistics-title ' + style + '\"><h3><span>' + text + '</span><span class=\"line\"><i/></span></h3></div>');\n        },\n        afterDraw: function (el) {\n            var length = reduceMotionFilter(1);\n\n            if (hasClass(el, 'statistics-wrap')) {\n                var color = new colors();\n                var randomcolors = [color.getRandomColor(), color.getRandomColor()]\n                var anim = el.querySelector(\".anim\");\n\n                gsap.set(anim, {\n                    background: 'radial-gradient(at 10% 10%, ' + randomcolors[0] + ' 0%, ' + randomcolors[1] + ' 100%)'\n                });\n\n                gsap.to(anim, {\n                    opacity: 1,\n                    duration: length / 2,\n                    ease: \"power3.out\"\n                }, 0);\n\n                // Scroll animation wrap section\n                var screen = gsap.matchMedia();\n                screen.add(\"(min-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: window.innerHeight * 1 / 5\n                        }, {\n                            y: 0,\n                            ease: \"ease.out\"\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"0 100%-=100px\",\n                            animation: tl,\n                            scrub: 2\n                        });\n                    });\n                });\n                screen.add(\"(max-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: 0\n                        }, {\n                            y: 0\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"100px 100%-=100px\",\n                            animation: tl,\n                            scrub: 1\n                        });\n                    });\n                });\n\n                scroll.push(function (tl) {\n                    if (el.querySelector(\".big\")) {\n                        var number = Number(el.querySelector(\".big\").textContent);\n                        if (number > 0) {\n                            var load = { progress: 0 };\n                            var duration = 1;\n                            if (number >= 500 && number < 1000) duration = 2;\n                            else if (number >= 1000 && number < 99999) duration = 3;\n                            else if (number >= 99999) duration = 4;\n                            tl.to(load, {\n                                progress: number,\n                                snap: \"progress\",\n                                ease: \"power3.out\",\n                                duration: duration,\n                                onUpdate: () => {\n                                    el.querySelector(\".big\").textContent = plural(load.progress);\n                                }\n                            }, 0);\n                        }\n                    }\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"0 100%-=100px\",\n                        end: \"100px 100%-=100px\",\n                        animation: tl,\n                        toggleActions: \"play none none none\"\n                    });\n                });\n            } else {\n                // Scroll animation line section\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelectorAll(\"i\"), {\n                        x: \"-100%\"\n                    }, {\n                        x: \"0%\",\n                        ease: \"ease.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"100% 100%\",\n                        end: \"100% 0\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'drawgraph')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".graph\"), {\n                        y: 100\n                    }, {\n                        y: 0\n                    }, 0);\n\n                    tl.fromTo(el.querySelector(\".graph i\"), {\n                        height: \"0%\"\n                    }, {\n                        height: el.querySelector(\".graph i\").getAttribute(\"data-number\") + \"%\"\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'coins')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".big\"), {\n                        y: \"50%\"\n                    }, {\n                        y: 0,\n                        ease: \"power3.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 2\n                    });\n                });\n            }\n\n            // Capture function\n            this.capture(el);\n\n            scroll.refresh();\n        },\n        capture: (el) => {\n            var capture = el.querySelector(\".capture small\");\n            if (!capture) return;\n\n            capture.onclick = async () => {\n                if (capture.generating) return;\n\n                var imgs = el.querySelectorAll(\"img\");\n\n                // Informing user the process is starting\n                capture.generating = true;\n                document.body.style.cursor = \"wait\";\n\n                // Proxying images\n                imgs.forEach(img => {\n                    if (!img.getAttribute(\"src\").includes(\"http\") || img.localUrl) return;\n\n                    img.localUrl = true;\n                    img.setAttribute(\"src\", api.url + \"?img=\" + img.getAttribute(\"src\"));\n                });\n                // Load and cache image\n                await waitForImg(imgs, (_, progress) => {\n                    capture.innerHTML = \"Downloading images... (\" + Math.round(progress) + \"%)\";\n                });\n\n                // HTML to Canvas magic\n                capture.innerHTML = \"Processing...\";\n                var canvas = await html2canvas(el.querySelector(\".anim\"), {\n                    backgroundColor: null,\n                    logging: false,\n                });\n\n                // Download the output\n                var link = document.createElement(\"a\");\n                link.style.display = \"none\";\n                link.download = \"replurk\" + this.year + \"-\" + Date.now() + \".png\";\n                link.href = canvas.toDataURL();\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n                link.remove();\n\n                // Reset button after 3s\n                capture.innerHTML = \"Done\";\n                document.body.style.cursor = \"default\";\n                setTimeout(() => {\n                    capture.innerHTML = \"Recapture\";\n                    capture.generating = false;\n                }, 3000);\n            }\n        },\n        wrapper: function (style, text, background) {\n            if (!background) return '<div class=\"statistics middle statistics-wrap ' + style + '\"><div class=\"anim\">' + text + '</div><div class=\"capture\"><small>Capture</small></div></div>';\n            else return '<div class=\"statistics middle statistics-wrap ' + style + '\"><div class=\"anim\" style=\"background-images:url(' + background + ')\">' + text + '</div><div class=\"capture\"><small>Capture</small></div></div>';\n        },\n        draw: function (style, number, text, background) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"big\">' + number + '</span>\\\n\t\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'), background);\n            }\n        },\n        drawDiv: function (style, text) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '<div class=\"box\">' + text + '</div>'));\n        },\n        drawGraph: function (style, number, text) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawgraph movetitle\", '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"graph\"><i data-number=\"' + number + '\"></i></span>\\\n\t\t\t\t\t\t<span class=\"info\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'));\n            }\n        },\n        drawImage: function (style, image, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawimage\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span class=\"avatar\"><img src=\"' + image + '\" /></span>\\\n\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawHTML: function (style, title, html) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawhtml\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<div class=\"htmlcontent\">' + html + '</div>\\\n\t\t\t\t\t<div class=\"title\">' + title + '</div>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawLink: function (style, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawlink\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span>' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawPost: function (style, id, title, text, badge) {\n            var url = \"\";\n            if (id) url = 'https://plurk.com/p/' + id.toString(36);\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawpost\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<a href=\"' + url + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<p class=\"post\">' + text + '</p>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawUserList: async function (style, id, title, list) {\n            var html = \"\";\n            var max = list.length >= 5 ? 5 : list.length;\n            var length = reduceMotionFilter(1);\n\n            this.drawHTML(style + \" drawuserlist movetitle \" + id, title, \"<span class='info'>Downloading user data</span>\");\n            for (var index = 0; index < max; index++) {\n                var value = list[index];\n                if (value) {\n                    var friends = this.parent.friends;\n                    var friend = await friends.find(value.id);\n                    if (friend) {\n                        var plurker = new plurkerElement(value.id, friend, \"\", plurker => {\n                            plurker.avatar = new span('avatar', '<img src=\"' + friends.getAvatar(plurker.user.id) + '\" />');\n                            plurker.name = new span('name', plurker.user.display_name);\n                            plurker.counts = new span('count', value.count);\n                            plurker.el.appendChild(plurker.avatar.el);\n                            plurker.el.appendChild(plurker.name.el);\n                            plurker.el.appendChild(plurker.counts.el);\n                            plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.user.nick_name);\n                        });\n                        plurker.create();\n                        html += plurker.el.outerHTML;\n                    } else {\n                        max++;\n                    }\n                }\n            }\n            this.el.querySelector(\".\" + id + \" .htmlcontent\").innerHTML = html;\n\n            // Stagger animation\n            if (id == 'mostinteraction' || id == 'mvp') {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        scale: .3,\n                        opacity: 0\n                    }, {\n                        scale: 1,\n                        opacity: 1,\n                        ease: \"elastic.out(1.2, 0.5)\",\n                        duration: length * 3 / 4,\n                        stagger: {\n                            amount: length / 3,\n                            from: \"end\"\n                        }\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"50% 100%\",\n                        end: \"50% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            } else {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        y: 50,\n                        opacity: 0\n                    }, {\n                        y: 0,\n                        opacity: 1,\n                        duration: length,\n                        ease: \"power3.out\",\n                        stagger: length / 3\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"0% 100%\",\n                        end: \"0% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            }\n        },\n        attach: function (charttitle, node, max) {\n            var that = this;\n            var id = node.id;\n            var chart;\n            var title;\n            var text;\n            var anim;\n            var wrapper;\n            var capture;\n\n            var opacity = 0;\n            var position = max;\n            var zIndex = 0;\n            var hidden = true;\n\n            if (node.position <= max) {\n                hidden = false;\n                zIndex = position = (node.position - 1);\n                opacity = 1;\n            }\n\n            // Create the box\n            if (!that.next.querySelector(\".\" + id)) {\n                chart = document.createElement('div');\n                chart.setAttribute('class', 'chart');\n\n                title = document.createElement('div');\n                title.setAttribute('class', 'title');\n                title.innerHTML = charttitle;\n\n                text = document.createElement('div');\n                text.setAttribute('class', 'text');\n                text.appendChild(chart);\n                text.appendChild(title);\n\n                anim = document.createElement('div');\n                anim.setAttribute('class', 'anim');\n                anim.appendChild(text);\n\n                text = document.createElement('small');\n                text.innerHTML = \"Capture\";\n                capture = document.createElement('div');\n                capture.setAttribute('class', 'capture');\n                capture.appendChild(text);\n\n                wrapper = document.createElement('div');\n                wrapper.setAttribute('class', 'statistics middle statistics-wrap attach ' + id);\n                wrapper.appendChild(anim);\n                wrapper.appendChild(capture);\n\n                that.el.insertAdjacentElement(\"beforeend\", wrapper);\n            }\n\n            // Add  element\n            if (!hidden && !node.attached) {\n                var maxTop = max / (max - 1) * 100;\n\n                node.insertTo(that.el.querySelector(\".\" + id + ' .chart'));\n\n                gsap.set(node.el, {\n                    top: maxTop + \"%\",\n                    opacity: 0,\n                    zIndex: 0,\n                });\n            }\n            // Update position\n            if (!hidden || !node.hidden) {\n                var currentTop = position / (max - 1) * 100;\n                var length = reduceMotionFilter(1);\n\n                gsap.killTweensOf(node.el);\n                gsap.to(node.el, {\n                    top: currentTop + \"%\",\n                    opacity: opacity,\n                    zIndex: zIndex,\n                    duration: length / 2,\n                    ease: \"power3.out\",\n                    onComplete: function () {\n                        if (hidden) {\n                            node.destroy();\n                        }\n                    }\n                });\n                node.hidden = hidden;\n            }\n\n            node.update();\n        },\n        drawAll: async function (plurks) {\n            var response_percentage = Math.round((this.plurks_count - this.noresponse_count) / this.plurks_count * 100);\n\n            this.parent.most.responses.draw(plurks);\n            this.drawGraph('center graph percentage', response_percentage, 'Around <i>' + response_percentage + '%</i> of my plurks got <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> responses ' + ((response_percentage <= 50) ? '<img src=\"https://api.iconify.design/fluent-emoji:crying-face.svg\" />' : '<img src=\"https://api.iconify.design/fluent-emoji:star-struck.svg\" />'));\n\n            this.draw('spansmall recievereplurk', this.replurker_count, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + plural(this.replurker_count, 'replurk') + '</i>');\n            this.parent.most.replurk.draw(plurks);\n\n            this.parent.most.favorite.draw(plurks);\n            this.draw('spansmall recievelove', this.favourite_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + plural(this.favourite_count, 'love') + '</i>');\n\n            this.draw('spansmall privateplurk', this.private_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:lip.svg\" /> ' + plural(this.private_count, 'private plurk') + '</i>');\n            this.draw('spansmall whisper', this.whispers_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-in-clouds.svg\" /> ' + plural(this.whispers_count, 'whisper') + '</i>');\n            this.draw('spansmall porn', this.porn_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg\" /> ' + plural(this.porn_count, 'adult plurk') + '</i>');\n\n            this.draw('span2 responsecount', this.plurks_count + \" &rarr; \" + this.response_count, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(this.response_count, 'response') + '</i> from <i>' + plural(this.plurks_count, 'plurk') + '</i>');\n            this.draw('spansmall center coins', this.coins_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:coin.svg\" /> ' + plural(this.coins_count, 'coin') + '</i>');\n\n            if (this.favorite_list.length > 0) this.drawUserList(\"avatar\", \"loved\", 'These Plurkers <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Loved</i> My Posts', this.favorite_list.sort(this.parent.most.sort));\n            if (this.replurker_list.length > 0) this.drawUserList(\"avatar\", \"replurked\", 'These Plurkers likes to <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Replurked</i> My Posts', this.replurker_list.sort(this.parent.most.sort));\n        }\n    };\n\n    // Most statistics object renderer\n    most = {\n        parent: this,\n        sort: function (a, b) {\n            return b.count - a.count;\n        },\n        // Find and count all based on regex\n        findregex: function (regex, replace, content, storage) {\n            var result = content.match(regex);\n\n            for (var index in result) {\n                var value = replace(result[index]);\n                var idx = storage.findIndex(el => el.value == value);\n\n                if (idx < 0) {\n                    storage.push({\n                        id: value,\n                        value: value,\n                        count: 1\n                    });\n                } else {\n                    storage[idx].count++;\n                }\n            }\n\n            return result;\n        },\n        init: function () {\n            this.responders.data = [];\n            this.mentions.data = [];\n            this.mentions.dataAll = [];\n            this.myemoticons.data = [];\n            this.hashtags.data = [];\n            this.links.links = [];\n            this.links.pics = [];\n            this.types.words = 0;\n            this.types.chars = 0;\n        },\n        countAll: async function (data) {\n            // Find and count all my emoticons from my post\n            if (data.user_id == this.parent.me.id) this.myemoticons.count(data.content);\n            // Find and count all mentions from my post\n            await this.mentions.count(data.content_raw);\n            // Find and count all hashtags from my post\n            if (data.user_id == this.parent.me.id) this.hashtags.count(data.content);\n            // Find and count all links and pictures post from my post\n            if (data.user_id == this.parent.me.id) this.links.count(data.content, data.plurk_id, data.response_count, data.replurkers_count, data.favorite_count);\n            // Find and count characther and words from my post\n            if (data.user_id == this.parent.me.id) this.types.count(data.content_raw);\n        },\n        responders: {\n            data: [],\n            parent: this,\n            count: async function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.user_id == response.user_id;\n                });\n\n                if (index < 0) {\n                    var friends = this.parent.friends;\n                    var user = await friends.find(response.user_id);\n                    this.data.push(new plurkerElement('mostresponders', user, friends.getAvatar(user.id)));\n                } else {\n                    this.data[index].count++;\n                }\n                this.data.sort(this.parent.most.sort);\n\n                // Update top 5\n                var index = 1;\n                for (var i = 0; i < this.data.length; i++) {\n                    this.data[i].position = this.data.length;\n                    if (this.data[i].user_id != this.parent.me.id && this.data[i].user_id != 99999) {\n                        this.data[i].position = index++;\n                        this.parent.statistics.attach('<i>Top <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> Responders</i> <strong>of My Timeline</strong>', this.data[i], 5);\n                    }\n                }\n            },\n            draw: function () {\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatar(this.data[index].user_id), 'https://plurk.com/' + this.data[index].user.nick_name, '<i>Most Responder</i>', this.data[index].user.display_name, this.data[index].count);\n                }\n            }\n        },\n        mentions: {\n            data: [],\n            dataAll: [],\n            parent: this,\n            count: async function (content) {\n                var result = this.parent.most.findregex(/\\@(\\w{1,30})[\\ |\\:]/g, value => value.replace(/\\@|\\ |\\:/g, ''), content, this.data);\n                var max = 5;\n                var index = 1;\n\n                if (result) {\n                    // Update top 5\n                    this.data.sort(this.parent.most.sort);\n                    for (var idx = 0; idx < this.data.length; idx++) {\n                        this.data[idx].position = this.data.length;\n\n                        if (index <= max) {\n                            var user = await this.parent.friends.findByUsername(this.data[idx].value);\n\n                            if (this.data[idx].el == undefined) {\n                                this.data[idx] = new plurkerElement('mostmentionedbyme', user, \"\", plurker => {\n                                    plurker.avatar = new span('avatar', '<img src=\"' + this.parent.friends.getAvatar(plurker.user_id) + '\" />');\n                                    plurker.name = new span('name', \"@\" + plurker.nick_name);\n                                    plurker.counts = new span('count', plurker.count);\n                                    plurker.el.appendChild(plurker.avatar.el);\n                                    plurker.el.appendChild(plurker.name.el);\n                                    plurker.el.appendChild(plurker.counts.el);\n                                    plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.nick_name);\n                                });\n                            }\n\n                            if (user.id != this.parent.me.id && user.id != 99999) {\n                                this.data[idx].position = index++;\n                                this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/fluent-emoji:person-raising-hand-light.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                            }\n                        }\n\n                        if (this.data[idx].el) this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/fluent-emoji:person-raising-hand-light.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                    }\n                }\n            },\n            draw: function () {\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatarByUsername(this.data[index].value), 'https://plurk.com/' + this.data[index].value, '<i>Most Mentioned</i> by me', \"@\" + this.data[index].value, this.data[index].count);\n                }\n            }\n        },\n        myemoticons: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/emoticon_my\\\" src=\\\"(.*?)\\\"/g, function (value) {\n                    return value.replace(/emoticon_my\\\" src=\\\"|\\\"/gi, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 7;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><img src=\"' + this.data[i].value + '\" /> <span class=\"count\">' + this.data[i].count + '</span></div>';\n                if (html != \"\") this.parent.statistics.drawHTML(\"smallspan grid emoticons\", 'Most Used <i>My Emoticons</i>', html);\n            }\n        },\n        hashtags: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/hashtag\\\"\\>(.*?)\\</g, function (value) {\n                    return value.replace(/hashtag\\\"\\>\\#|\\.\\<|\\</g, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 5;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><a href=\"https://plurk.com/search?q=' + this.data[i].value + '\" target=\"_BLANK\" /><span class=\"count\">' + this.data[i].count + '</span> #' + this.data[i].value + '</a></div>';\n                if (html != \"\") {\n                    html = \"<strong>#</strong>\" + html;\n                    this.parent.statistics.drawHTML(\"hashtags\", 'Most Used <i>Hashtags</i>', html);\n                }\n            }\n        },\n        links: {\n            data: [],\n            links: [],\n            pics: [],\n            parent: this,\n            count: function (content, id, response, replurk, loved) {\n                var result = content.match(/href\\=\\\"(.*?)\\\"\\ class=\\\"(.*?)\\\"\\ rel/g);\n                var count = 0;\n                var pics = [];\n                var links = [];\n\n                if (result) for (var data of result) {\n                    if (!this.data[id]) {\n                        count = response + (replurk * 250) + (loved * 50);\n                    }\n\n                    if (data.includes(\"pictureservices\")) {\n                        this.pics.push(data);\n                        if (count > 0) {\n                            var pic = data.split('\\\"')\n                            pics.push({\n                                url: pic[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n                    }\n                    else {\n                        this.links.push(data);\n                        if (count > 0) {\n                            var link = data.split('\\\"')\n                            links.push({\n                                url: link[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n\n                    }\n                }\n\n                if (count) this.data.push({\n                    id: id,\n                    pics: pics,\n                    links: links,\n                    count: count,\n                    content: content\n                });\n            },\n            drawLinks: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].links.length > 0) {\n                        var link = this.data[index].links[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].id.toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"post\"><div class=\"info\">' + this.data[index].content + '</div><div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + link.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + link.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + link.loved + '</span>' + url + '</div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n                if (this.links.length > 0) this.parent.statistics.drawDiv('spansmall sharedlinks', \"<div class='title'>I shared <i>🔗 \" + plural(this.links.length, 'link') + '</i> and this is the most popular one</div>' + result);\n            },\n            drawPics: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].pics.length > 0) {\n                        var pics = this.data[index].pics[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"box\"><div class=\"image\" style=\"background-image: url(' + api.url + \"?img=\" + pics.url + ')\"></div><div class=\"post\">' + this.data[index].content + '<div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + pics.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + pics.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + pics.loved + '</span>' + url + '</div></div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n\n                if (this.pics.length > 0) this.parent.statistics.draw('spansmall sharedpictures', this.pics.length, 'I shared <i>🖼 ' + plural(this.pics.length, 'image') + '</i>');\n                if (result != \"\") this.parent.statistics.drawHTML('span2 previewpics', '<i>🖼 Most Popular Image</i>', result);\n            }\n        },\n        types: {\n            words: 0,\n            chars: 0,\n            parent: this,\n            count: function (content) {\n                var words = content.split(\" \");\n\n                this.chars += content.length;\n                this.words += words.length;\n            },\n            draw: function () {\n                if (this.chars > 0) this.parent.statistics.draw('span2 mediumnumber', this.chars, 'I typed more than  <i>' + pluralinwords(this.chars, 'character') + '</i>, around <i>' + pluralinwords(this.words, 'word') + '</i> this year');\n            }\n        },\n        responses: {\n            parent: this,\n            sort: function (a, b) {\n                return b.response_count - a.response_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.response_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostresponded', value.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> Most Responded</i> ' + datediff(value.posted), value.content, value.response_count);\n                        return;\n                    }\n                }\n            }\n        },\n        replurk: {\n            parent: this,\n            sort: function (a, b) {\n                return b.replurkers_count - a.replurkers_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.replurkers_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostreplurked', value.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Most Replurked</i> ' + datediff(value.posted), value.content, value.replurkers_count);\n                        return;\n                    }\n                }\n            }\n        },\n        favorite: {\n            parent: this,\n            sort: function (a, b) {\n                return b.favorite_count - a.favorite_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.favorite_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostfavorited', value.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Most Loved</i> ' + datediff(value.posted), value.content, value.favorite_count);\n                        return;\n                    }\n                }\n            }\n        },\n        interaction: {\n            data: [],\n            parent: this,\n            count: function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier++;\n                    else this.data[index].multiplier = 1;\n                    this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span2\", \"mostinteraction\", \"Plurkers who really like to <i><img src='https://api.iconify.design/fluent-emoji:speaking-head.svg' /> interact</i> with me\", result);\n                } catch {\n                    console.info(\"Error while counting most interacted plurker\");\n                }\n            }\n        },\n        mvp: {\n            data: [],\n            parent: this,\n            count: function (response, type) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (type == \"replurk\") {\n                        this.data[index].count += (response.count * 250);\n                    } else if (type == \"favorite\") {\n                        this.data[index].count += (response.count * 50);\n                    } else if (response.content_raw.length > 16) {\n                        if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier += .5;\n                        else this.data[index].multiplier = .5;\n                        this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                    }\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span3\", \"mvp\", \"My \" + this.parent.year + \" <i><img src='https://api.iconify.design/fluent-emoji:biting-lip.svg' /> MVP</i>\", result);\n                } catch (error) {\n                    console.info(\"Error while counting my mvp\", error);\n                }\n            }\n        }\n    };\n\n    // Inactive plurker object\n    inactive = {\n        draw: (data, year) => {\n            this.statistics.draw('inactive', year + \" &#8617;\", 'I\\'ve been inactive since ' + year + ' <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n            this.statistics.drawPost('postcontent span2 inactivemore', data.plurk_id, '<i>My last Plurk</i> ' + datediff(data.posted), data.content, data.response_count);\n        },\n        empty: () => {\n            this.statistics.draw('inactive', '-', 'I didn\\'t post anything at this year <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n        }\n    }\n\n    // Loading object\n    loading = {\n        count: 0,\n        prev_count: 0,\n        counts: -1,\n        clean: false,\n        next: document.createElement('div'),\n        parent: this,\n        isComplete: function () { return this.count == this.counts },\n        init: function (next) {\n            this.count = 0;\n            this.prev_count = 0;\n            this.counts = -1;\n            this.clean = false;\n            this.next = next;\n        },\n        draw: function (item) {\n            return new Promise(resolve => {\n                var length = reduceMotionFilter(1);\n                this.prev_count = item;\n\n                if (!this.next.querySelector(\".statistics.statistics-loading\")) {\n                    this.parent.statistics.draw(\"statistics-loading\", item + \"%\", \"<i class='month'>Data from \" + this.year + \"</i>. Loading. <small>As long as you didn't close this browser tab, You can resume later by refreshing this page.</small>\");\n                }\n\n                // Animate loading\n                var load = { progress: this.prev_count };\n                gsap.to(load, {\n                    progress: Math.round(item),\n                    snap: \"progress\",\n                    ease: \"linear\",\n                    duration: length / 4,\n                    onUpdate: () => {\n                        var el = this.next.querySelector(\".statistics-loading .big\");\n                        if (el) el.innerHTML = load.progress + \"%\";\n                    },\n                    onComplete: async () => {\n                        if (this.clean) await this.done();\n                        resolve();\n                    }\n                });\n            });\n        },\n        loop: async function (length) {\n            this.clean = true;\n            this.counts = length;\n            await this.draw(0);\n        },\n        update: async function (month, value) {\n            var el = this.next.querySelector(\".statistics-loading .month\");\n            if (month && el) el.innerHTML = month;\n\n            if (this.counts >= 0) {\n                this.count = value ? value : this.count + 1;\n                await this.draw(Math.round(100 * (this.count / this.counts)));\n            }\n        },\n        fakeupdate: async function () {\n            if (this.counts >= 0) {\n                this.count++;\n                if (this.count >= (this.counts - 10)) this.count = (this.counts - 10);\n                await this.draw(100 * (this.count / this.counts));\n            }\n        },\n        forcedone: async function () {\n            this.count = this.counts;\n            await this.draw(100);\n        },\n        done: function () {\n            return new Promise(resolve => {\n                var length = reduceMotionFilter(1);\n\n                if (this.isComplete()) {\n                    var el = this.next.querySelector(\".statistics.statistics-loading\");\n                    this.clean = false;\n                    if (el) {\n                        gsap.to(el, {\n                            opacity: 0,\n                            width: 0,\n                            height: 0,\n                            padding: 0,\n                            margin: 0,\n                            overflow: \"hidden\",\n                            duration: length / 2,\n                            ease: \"power3.out\",\n                            onComplete: () => {\n                                el.remove();\n                                scroll.refresh();\n                                resolve();\n                            }\n                        });\n                    }\n                } else resolve();\n            });\n        }\n    }\n\n    // Scroll Animation\n    scrollAnimate = {\n        credits: (tl) => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation, #credits .made\"), {\n                y: window.innerHeight * 1 / 8\n            }, {\n                y: 0,\n                ease: \"linear\",\n                duration: length * 2,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                stagger: {\n                    from: 'end',\n                    amount: length / 10\n                },\n                duration: length,\n                ease: \"power3.in\"\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .made\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length,\n                ease: \"power3.in\"\n            }, length * 3 / 10);\n\n            return tl;\n        },\n        statistics: () => {\n            var next = this.next;\n\n            // Scroll animate statistics\n            scroll.push(tl => this.scrollAnimate.credits(tl), tl => ScrollTrigger.create({\n                trigger: next.querySelectorAll(\"#statistics\"),\n                start: \"100%-=\" + window.innerHeight + \" 0\",\n                end: \"100% 0\",\n                animation: tl,\n                scrub: .5\n            }));\n        },\n        permisions: () => {\n            var next = this.next;\n\n            // Scroll animation permission section\n            scroll.push((tl) => {\n                tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n                    y: 0\n                }, {\n                    y: window.innerHeight * -3 / 4,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sup\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * -1 / 10,\n                    rotation: -10,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sub\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * 1 / 10,\n                    rotation: 10,\n                    ease: \"linear\"\n                }, 0);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n            scroll.push((tl) => {\n                tl = this.scrollAnimate.credits(tl);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n        },\n        menu: () => {\n            // Scroll animation menu and logout\n            scroll.push(tl => tl, tl => {\n                return ScrollTrigger.create({\n                    trigger: 'main',\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    onUpdate: update => {\n                        var el1 = '.logo, .size, .lamp, .switch';\n                        var el2 = el1 + \", .footer > *\";\n\n                        if (update.direction > 0) {\n                            gsap.killTweensOf(_qAll(el2));\n                            gsap.to(_qAll(el1), { y: -100, opacity: 0 });\n                            gsap.to(_qAll('.footer > *'), { y: 100, opacity: 0 });\n                        } else {\n                            gsap.to(_qAll(el2), { y: 0, opacity: 1 });\n                        }\n                    }\n                });\n            });\n        },\n        browserBar: (login = true) => {\n            if (login) {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#hello',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#statistics',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnter: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"white\");\n                        }\n                    });\n                });\n            } else {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#permission',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n            }\n        }\n    }\n\n    constructor(year) {\n        // Which year?\n        this.year = year;\n        this.startDate = this.year + '-10-29T09:00:00';\n        this.endDate = new Date((this.year - 1) + '-10-29T09:00:00');\n        this.days = 60 * 60 * 24 * 1000;\n        this.fulldays = 365;\n    }\n\n    // Browser color\n    getSetStateColor(state) {\n        if (typeof (state) == \"object\" && state.length >= 1) {\n            if (state.length == 1) {\n                darkmode.browserColorDark = state[0];\n                darkmode.browserColorLight = state[0];\n            } else {\n                darkmode.browserColorDark = state[1];\n                darkmode.browserColorLight = state[0];\n            }\n        } else if (state == \"green\") {\n            darkmode.browserColorDark = \"#0d4f03\";\n            darkmode.browserColorLight = \"#60e670\";\n        } else if (state == \"yellow\") {\n            darkmode.browserColorDark = \"#705f02\";\n            darkmode.browserColorLight = \"#FFD700\";\n        } else {\n            darkmode.browserColorDark = \"#000000\";\n            darkmode.browserColorLight = \"#FFFFFF\";\n        }\n\n        return [darkmode.browserColorLight, darkmode.browserColorDark];\n    }\n    browserColor(state, duration, ease) {\n        this.getSetStateColor(state);\n        darkmode.setDarkMode(duration, ease);\n    }\n\n    // Show/hide Animations\n    // Login Pages\n    showLoginPage(tl) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n\n        this.browserColor(\"green\", 1);\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            display: \"\",\n            opacity: 0,\n            top: 0\n        }, {\n            opacity: 1,\n            duration: length,\n            ease: \"power3.in\"\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: length / 5,\n            duration: length,\n            ease: \"power3.out\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    top: \"\"\n                });\n            }\n        }, \">-\" + (length / 2));\n\n        return tl;\n    }\n    hideLoginPage(tl) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n\n        tl.set(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            top: 0,\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *, #permission form\"), {\n            y: 0,\n            opacity: 1,\n        }, {\n            y: 200,\n            opacity: 0,\n            stagger: {\n                from: \"end\",\n                amount: length / 5\n            },\n            duration: length,\n            ease: \"power3.in\",\n            onComplete: () => {\n                this.browserColor(\"yellow\");\n            }\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            opacity: 1\n        }, {\n            opacity: 0,\n            duration: length,\n            ease: \"power3.in\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    display: \"none\",\n                    top: \"\"\n                }, \">\");\n            }\n        }, \">-\" + (length / 4));\n\n        return tl;\n    }\n    // Statistic Pages\n    showStatisticPages() {\n        return new Promise(resolve => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n            var tl = gsap.timeline();\n\n            tl.fromTo(next.querySelectorAll(\"#hello\"), {\n                display: \"\",\n                opacity: 0\n            }, {\n                opacity: 1,\n                ease: \"power3.in\",\n                duration: length,\n                onStart: () => this.browserColor(\"green\", .5)\n            }, length / 4);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext > *\"), {\n                display: \"\",\n                opacity: 0,\n                y: 200\n            }, {\n                opacity: 1,\n                y: 0,\n                duration: length,\n                stagger: length / 5,\n                ease: \"power3.out\"\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\" #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n                display: \"\",\n                opacity: 0,\n                y: 200\n            }, {\n                opacity: 1,\n                y: 0,\n                duration: length,\n                stagger: length / 5,\n                ease: \"power3.out\"\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n                display: \"\",\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length / 2,\n                onComplete: () => resolve()\n            }, length / 2);\n        });\n    }\n    hideStatisticPages() {\n        return new Promise(async resolve => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n            var tl = gsap.timeline();\n\n            await animate.top(next);\n\n            tl.fromTo(next.querySelectorAll(\".footer > *, #hello .bgtext > *, #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n                opacity: 1,\n                y: 0\n            }, {\n                opacity: 0,\n                y: 200,\n                duration: length,\n                stagger: {\n                    from: \"end\",\n                    amount: length / 5\n                },\n                ease: \"power3.in\"\n            }, length / 5);\n            tl.set(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n                opacity: 0\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\"#hello\"), {\n                opacity: 1\n            }, {\n                opacity: 0,\n                duration: length,\n                ease: \"power3.in\",\n                onComplete: () => {\n                    gsap.set(next.querySelectorAll(\".grant\"), { display: \"none\" });\n                    resolve();\n                }\n            }, length / 2);\n        });\n    }\n\n    // Login messages\n    message(message, quick) {\n        var next = this.next;\n\n        var loginmessage = next.querySelector(\"#login-message\");\n\n        if (quick) {\n            loginmessage.innerHTML = message;\n        } else {\n            gsap.to(loginmessage, {\n                opacity: 0,\n                onComplete: function () {\n                    loginmessage.innerHTML = message;\n                    gsap.to(loginmessage, {\n                        opacity: 1\n                    });\n                }\n            });\n        }\n    }\n\n    // Logout\n    async requestLogout() {\n        var tl = gsap.timeline();\n\n        api.abort();\n\n        // Hide statistic pages\n        await this.hideStatisticPages(tl);\n\n        // Logout\n        await api.call(\"?fetch=logout\");\n        this.statistics.clear();\n        api.clear();\n        this.login();\n\n        scroll.refresh();\n    }\n\n    // Request token\n    async requestToken(text) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n        var tokenlink = next.querySelector(\"#tokenurl\");\n        tokenlink.textContent = \"Connecting Plurk...\";\n\n        var tl = gsap.timeline();\n        tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            duration: length,\n            ease: \"power3.out\"\n        }, length);\n        tl.fromTo(next.querySelectorAll(\"#permission h1, #permission li\"), {\n            display: \"\",\n            y: 50,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: length / 10,\n            duration: length,\n            ease: \"power3.out\"\n        }, length);\n\n        api.call(\"?request=token\").then(data => {\n            if (text) {\n                message(text);\n            } else {\n                tokenlink.textContent = \"Grant Access\";\n                tokenlink.setAttribute(\"href\", api.url + \"?redirect=\" + data.message.url);\n            }\n        }, () => {\n            message(\"Error when requesting verification from Plurk, please reload your browser again.\");\n        });\n\n        if (!text) next.querySelector(\"#permission form\").style.display = \"none\";\n    }\n\n    // Display current Plurker data\n    async displayPlurkerData() {\n        var plurker = this.me;\n        var next = this.next;\n        var extra = \"\";\n        var length = reduceMotionFilter(1);\n\n        // plurks_count\n        var days = (plurker.anniversary.years * 365) + plurker.anniversary.days;\n        var responses = Math.round(plurker.response_count / days);\n\n        next.querySelector(\"#hello .thumbs\").innerHTML = \"<img src='\" + plurker.avatar_big + \"' />\";\n        if (this.year == 2021) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>If \" + this.year + \" have been a rough year you, hopefully RePlurk will cheer you by bringing some good memories</p>\";\n        else if (this.year == 2022) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>It's 2020 v2, and this is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n        else next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>This is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\n        // Draw statistic\n        this.statistics.title('All Time', 'alltime');\n        if (plurker.anniversary.years && plurker.anniversary.days) {\n            this.statistics.draw('spansmall center posted', Math.round(plurker.plurks_count / days), 'I posted around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(Math.round(plurker.plurks_count / days), \"plurk\") + \" per day</i>\");\n\n            // Responses\n            var oneday = 16;\n            if (responses <= oneday) extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday / responses), \"hour\") + '</i>';\n            else extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday * 60 / responses), \"minute\") + '</i>';\n            this.statistics.draw('span2 center responded', responses, 'I responded around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(responses, \"time\") + \"</i> per day. \" + extra + \" when I'm not asleep\");\n\n            var join = new Date(plurker.join_date)\n            this.statistics.draw('spansmall center anniversary', \"<strong><i>\" + monthNames[join.getMonth()] + \"</i> <i>\" + join.getFullYear() + \"</i></strong> <em>\" + join.getDate() + \"</em>\", \"I joined Plurk <i>\" + plural(plurker.anniversary.years, \"year\") + \"</i> and <i>\" + plural(plurker.anniversary.days, \"day\") + \"</i> ago\");\n            this.statistics.draw('spansmall center badges', plurker.badges.length, \"I have <i><img src='https://api.iconify.design/fluent-emoji:shield.svg' /> \" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        } else {\n            this.statistics.draw('', '-', \"There is no data in my timeline\");\n            this.statistics.draw('', plurker.badges.length, \"But at least I have <i>\" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        }\n\n        // Scroll animation hello section\n        scroll.push(tl => {\n            tl.fromTo(next.querySelectorAll(\"#hello .text, #hello .thumbs\"), {\n                y: 0\n            }, {\n                y: window.innerHeight * -3 / 4,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sup\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * -1 / 10,\n                rotation: -10,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sub\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * 1 / 10,\n                rotation: 10,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .arrow-big\"), {\n                y: 0,\n                opacity: 1\n            }, {\n                y: window.innerHeight * 1 / 4,\n                opacity: 0,\n                ease: \"linear\",\n                duration: length / 4,\n            }, 0);\n            return tl;\n        }, tl => ScrollTrigger.create({\n            trigger: next.querySelectorAll(\"#hello\"),\n            start: \"0 0\",\n            end: \"100% 0\",\n            animation: tl,\n            scrub: true\n        }));\n        scroll.refresh();\n    }\n    // Display statistics\n    async displayStatistics() {\n        this.statistics.title('This Year', 'thisyear');\n        this.statistics.draw(\"statistics-loading thisyearloading\", \"\", \"<i class='month'>Data from December</i>1 of 2. Loading \" + this.year + \" timeline. It can take up to 1 minute.\");\n\n        this.loading.init(this.next);\n        this.loading.loop(this.fulldays);\n\n        // Load loop timeline\n        var getTimeline = async (offset) => {\n            offset = (!offset) ? \"\" : \"&offset=\" + offset;\n\n            var data = await api.call(\"?fetch=plurk&filter=my\" + offset, 1);\n            if (data.success) {\n                this.friends.add(data.message.plurk_users);\n                this.plurks = this.plurks.concat(data.message.plurks);\n\n                if (data.message.plurks.length > 0) {\n                    var lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\n                    if (lastposted >= this.endDate) {\n                        this.loading.update(\"Data from \" + monthNames[lastposted.getMonth()] + \" \" + lastposted.getFullYear(), this.fulldays - Math.floor((lastposted - this.endDate) / this.days));\n\n                        // Load next plurks\n                        await getTimeline(data.message.offset);\n                    } else {\n                        while (lastposted < this.endDate && this.plurks.length > 1) {\n                            this.plurks.pop();\n                            lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n                        }\n                        await this.loading.forcedone();\n                    }\n                } else {\n                    await this.loading.forcedone();\n                }\n            } else {\n                this.requestLogout();\n            }\n        }\n        await getTimeline(this.startDate);\n\n        // When loading done\n        var largest_poll_result = 0;\n        if (this.plurks.length > 1) {\n            // Count user statistics\n            this.statistics.plurks_count = 0;\n            this.plurks.forEach(plurk => {\n                // Calculate the statistics\n                if (plurk.responded) this.statistics.responded_count++;\n                if (plurk.owner_id == this.me.id) {\n                    this.statistics.plurks_count++;\n                    this.statistics.replurker_count += plurk.replurkers.length;\n                    this.statistics.replurker_list = this.statistics.listCount(this.statistics.replurker_list, plurk.replurkers);\n                    this.statistics.favourite_count += plurk.favorers.length;\n                    this.statistics.favorite_list = this.statistics.listCount(this.statistics.favorite_list, plurk.favorers);\n                    if (plurk.anonymous) this.statistics.whispers_count++;\n                    if (plurk.coins) this.statistics.coins_count += plurk.coins;\n                    if (plurk.porn) this.statistics.porn_count++;\n                    if (!plurk.response_count) this.statistics.noresponse_count++;\n                    if (plurk.plurk_type == 3) this.statistics.private_count++;\n                    this.statistics.response_count += plurk.response_count;\n\n                    if (plurk.content_raw.includes(\"instagram.com\")) this.statistics.instagrammer_count++;\n                    if (plurk.content_raw.includes(\"facebook.com\")) this.statistics.facebooker_count++;\n                    else if (plurk.content_raw.includes(\"fb.watch\")) this.statistics.facebooker_count++;\n                    if (plurk.content_raw.includes(\"twitter.com\")) this.statistics.twitterer_count++;\n                    if (plurk.content_raw.includes(\"reddit.com\")) this.statistics.redditor_count++;\n                    if (plurk.content_raw.includes(\"tiktok.com\")) this.statistics.tiktoker_count++;\n                    if (plurk.content_raw.includes(\"imgur.com\")) this.statistics.imgurer_count++;\n                    if (plurk.content_raw.includes(\"youtube.com\")) this.statistics.youtuber_count++;\n\n                    // Calculate polls\n                    if (plurk.with_poll) {\n                        var response_count = plurk.poll.response.response_count;\n                        this.statistics.poll_count++;\n                        this.statistics.poll_responder_count += response_count;\n\n                        if (largest_poll_result < response_count) {\n                            largest_poll_result = response_count;\n                            this.statistics.poll_popular_plurk = plurk;\n                        }\n                    }\n                } else if (plurk.responded) this.statistics.responded_other_count++;\n            });\n\n            // Sort based on date\n            this.plurks.sort((a, b) => new Date(b.posted) - new Date(a.posted));\n\n            // Draw statistics\n            try {\n                await this.statistics.drawAll(this.plurks);\n            } catch (error) {\n                console.info(\"Error while counting statistics\", error);\n            }\n\n            // Display extended statistics\n            this.displayExtendedStatistics();\n        } else {\n            if (this.plurks[0]) {\n                var date = new Date(plurk[0].posted);\n                inactive.draw(plurk[0], date.getFullYear());\n            }\n            else inactive.empty();\n        }\n    }\n    // Display extended statistics\n    async displayExtendedStatistics() {\n        // Deeper user statistics\n        this.statistics.title('Dig Deeper', 'digdeeper');\n        this.statistics.draw(\"statistics-loading digdeeperloading\", \"\", \"<i class='month'>Data from \" + this.year + \"</i> 2 of 2. Loading all responses. <small>If the loading seems to stop, refresh your browser tab to resume your download. Closing your browser tab will clear all downloaded data.</small>\");\n\n        // Load each post responses and calculate statistics\n        this.loading.init(this.next);\n        this.loading.loop(this.plurks.length);\n\n        // Get the responses for each plurks in parallel\n        this.plurks.sort((a, b) => new Date(a.posted) < new Date(b.posted));\n        for (var plurk of this.plurks) {\n            var date = new Date(plurk.posted);\n            this.loading.update(\"Data from \" + monthNames[date.getMonth()] + \" \" + date.getFullYear());\n\n            // Count all\n            await this.most.countAll(plurk);\n\n            // Count responses\n            if (plurk.response_count > 0 && (plurk.responded || plurk.owner_id == this.me.id)) {\n                var result = await api.call(\"?fetch=response&plurk_ids=\" + plurk.plurk_id);\n                if (result.success) for (var message of result.message) {\n                    // Add friends from response lists\n                    this.friends.add(message.friends);\n\n                    // Count the rest of statistics\n                    for (var response of message.responses) {\n                        // Find and count all responders\n                        await this.most.responders.count(response);\n                        this.most.interaction.count(response);\n                        this.most.mvp.count(response, \"response\");\n                        // Count all\n                        await this.most.countAll(response);\n                    }\n                } else {\n                    this.requestLogout();\n                    break;\n                }\n            }\n        }\n\n        // Display How Many Links\n        this.most.links.drawLinks();\n        // Display How Many Pictures\n        this.most.links.drawPics();\n\n        // Draw Results\n        // Display Most Responder\n        // this.most.responders.draw();\n\n        // Display Most Interaction\n        this.most.interaction.draw();\n\n        // Display Most Mentioned by me\n        // this.most.mentions.draw();\n\n        // Display How Many Words-Characters\n        this.most.types.draw();\n\n        // Display Most hashtags by me\n        this.most.hashtags.draw();\n\n        // Display Most My Emoticons\n        this.most.myemoticons.draw();\n\n        // Display MVP\n        this.statistics.replurker_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"replurk\");\n        });\n        this.statistics.favorite_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"favorite\");\n        });\n        this.most.mvp.draw();\n\n        // Replurk Badges\n        var gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Leader\";\n        if (this.me.gender == 1) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> King\";\n        if (this.me.gender == 0) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Queen\";\n\n        var tiktok = \"<img src='https://api.iconify.design/fluent-emoji:mirror-ball.svg' />\";\n        if (this.me.gender == 1) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:man-dancing-medium-dark-skin-tone.svg' />\";\n        if (this.me.gender == 0) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:woman-dancing-medium-dark-skin-tone.svg' />\";\n\n        var facebook = \"<img src='https://api.iconify.design/fluent-emoji:older-person.svg' />\";\n        if (this.me.gender == 1) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-man.svg' />\";\n        if (this.me.gender == 0) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-woman.svg' />\";\n\n        var plurker = \"<img src='https://api.iconify.design/fluent-emoji:person-bowing.svg' />\";\n        if (this.me.gender == 1) plurker = \"<img src='https://api.iconify.design/fluent-emoji:man-bowing.svg' />\";\n        if (this.me.gender == 0) plurker = \"<img src='https://api.iconify.design/fluent-emoji:woman-bowing.svg' />\";\n\n        this.statistics.title('RePlurk Badges', 'replurkbadges');\n        this.statistics.title('What are RePlurk Badges consist of? They are badges based on your activities in Plurk. Currently there are 16 badges in total, for activities such as: creating lots of polls (Polling ' + gender + '), receiving lots of coins (Plurk Coins Billionaire), writing lots of posts (Novelist and Keyboard Warrior), sharing lots of pictures and links (Meme Lord & Missing Link), sharing social medias urls (there are 7 badges), posting lots of adult posts (Adult-er), getting lots of replurks (Trendsetter), and constantly posting in Plurk almost everyday (Active Plurker).', 'replurkbadges description');\n        if (this.statistics.poll_count >= 5) this.statistics.draw('spansmall center badges pollbadges', \"<img src='https://api.iconify.design/fluent-emoji:ballot-box-with-ballot.svg' />\", \"<strong>Polling \" + gender + \"</strong>\");\n        if (this.statistics.coins_count >= 5) this.statistics.draw('spansmall center badges coinbadges', \"<img src='https://api.iconify.design/fluent-emoji:coin.svg' />\", \"<strong>Plurk Coins Billionaire</strong>\");\n        if (this.most.types.words >= 50000) this.statistics.draw('spansmall center badges novelistbadges', \"<img src='https://api.iconify.design/fluent-emoji:orange-book.svg' />\", \"<strong>Novelist</strong>\");\n        if (this.most.types.chars >= 1000000) this.statistics.draw('spansmall center badges keyboardbadges', \"<img src='https://api.iconify.design/fluent-emoji:keyboard.svg' />\", \"<strong>Keyboard Warrior</strong>\");\n        if (this.most.links.pics.length >= 356) this.statistics.draw('spansmall center badges memebadges', \"<img src='https://api.iconify.design/fluent-emoji:cat.svg' />\", \"<strong>Meme Lord</strong>\");\n        if (this.most.links.links.length >= 356 / 2) this.statistics.draw('spansmall center badges missingbadges', \"<img src='https://api.iconify.design/fluent-emoji:orangutan.svg' />\", \"<strong>The Missing Link</strong>\");\n        if (this.statistics.instagrammer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:camera.svg' />\", \"<strong>Instagrammer</strong>\");\n        if (this.statistics.facebooker_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', facebook, \"<strong>Facebooker</strong>\");\n        if (this.statistics.twitterer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:hatching-chick.svg' />\", \"<strong>The Real Chief Twit</strong>\");\n        if (this.statistics.redditor_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:robot.svg' />\", \"<strong>/r</strong>\");\n        if (this.statistics.tiktoker_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', tiktok, \"<strong>Tiktoker</strong>\");\n        if (this.statistics.imgurer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:framed-picture.svg' />\", \"<strong>Imgur-er</strong>\");\n        if (this.statistics.youtuber_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:movie-camera.svg' />\", \"<strong>Youtuber <img src='https://api.iconify.design/fluent-emoji:sleepy-face.svg' /></strong>\");\n        if (this.statistics.porn_count >= 10) this.statistics.draw('spansmall center badges adultbadges', \"<img src='https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg' />\", \"<strong>Adult-er</strong>\");\n        if (this.statistics.replurker_count >= 50) this.statistics.draw('spansmall center badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:trophy.svg' />\", \"<strong>Trendsetter</strong>\");\n        if (this.statistics.plurks_count >= 356 * 1.5) this.statistics.draw('spansmall center badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:military-medal.svg' />\", \"<strong>Active Plurker \" + plurker + \"</strong>\");\n\n        this.logSessionStrorageSize();\n    }\n\n    // Display LocalStorage stats\n    logSessionStrorageSize() {\n        function getSessionStorageSize() {\n            var totalBytes = 0;\n\n            for (var key in sessionStorage) {\n                if (sessionStorage.hasOwnProperty(key)) {\n                    var itemValue = sessionStorage.getItem(key);\n                    totalBytes += itemValue.length;\n                }\n            }\n\n            // Convert bytes to Megabytes\n            var totalMegabytes = Math.round((totalBytes / 1024 / 1024) * 100) / 100;\n\n            return totalMegabytes;\n        }\n\n        // Usage\n        var sessionStorageSize = getSessionStorageSize();\n        console.info('SessionStorage Size: ' + sessionStorageSize + ' MB');\n    }\n\n    // Check login status\n    async login(clear) {\n        var next = this.next;\n\n        this.me = { id: 0 };\n        this.friends.init();\n        this.statistics.init(next);\n        this.most.init();\n        this.plurks = [];\n\n        scroll.destroy();\n\n        window.scrollTo(0, 0);\n        this.browserColor(\"yellow\");\n\n        // Scroll animation menu and logout\n        this.scrollAnimate.menu();\n\n        // Check is server have open session\n        var tl = gsap.timeline();\n        tl.set(next.querySelector(\"#hello .arrow-big\"), {\n            opacity: 0\n        });\n\n        var data = await api.call(\"?\");\n        var interval = null;\n        if (data.success) {\n            this.me = data.message;\n\n            // Initial Plurk statistics\n            await this.displayPlurkerData();\n\n            // Display the rest of the statistics\n            this.displayStatistics();\n\n            // Scroll top top\n            await animate.top(next);\n\n            // Hide login page\n            if (clear) next.querySelector(\"#permission\").style.display = \"none\";\n            else tl = this.hideLoginPage(tl);\n\n            // Show statistic pages\n            await this.showStatisticPages(tl);\n\n            // Add logout event\n            next.querySelector(\"#logout\").onclick = () => this.requestLogout();\n\n            // Scroll animate statistics\n            this.scrollAnimate.statistics();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar();\n\n            scroll.refresh();\n        } else {\n            // Hide statistic pages\n            if (clear) next.querySelectorAll(\".grant\").forEach(function (el) { el.style.display = \"none\"; });\n            // Show login page\n            this.showLoginPage(tl);\n            // Request token\n            this.requestToken();\n\n            // Scroll animation permission section\n            this.scrollAnimate.permisions();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar(false);\n\n            scroll.refresh();\n\n            // Automatic login\n            interval = setInterval(async () => {\n                var data = await api.call(\"?\");\n\n                if (data.success) {\n                    clearInterval(interval);\n                    this.login();\n                }\n            }, 3000);\n        }\n\n        // Snap\n        next.querySelectorAll(\"section.snap\").forEach(el => scroll.snap(el));\n        next.querySelectorAll(\"section.snap-bottom\").forEach(el => scroll.snap(el, \"bottom\"));\n    }\n\n    // Run the API call\n    run(el) {\n        return new Promise(resolve => {\n            var length = reduceMotionFilter(1);\n            this.next = el;\n            this.browserColor(\"yellow\");\n\n            // Run the login\n            gsap.fromTo(this.next.querySelectorAll('#credits'), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length,\n                ease: \"power3.in\",\n                onComplete: async () => {\n                    // Change color\n                    this.browserColor(\"yellow\", 0);\n\n                    // Display login\n                    await this.login(true);\n\n                    resolve();\n                }\n            });\n        });\n    }\n}\n\nexport default replurk;"],"names":["colors","constructor","this","oldcolor","randomcolors","allColorArrays","arrayIndex","Math","floor","Date","now","length","getRandomColor","color","gsap","utils","shuffle","slice","pop","plurkerElement","id","data","avatarurl","customcreate","user","user_id","value","nick_name","attached","hidden","count","position","el","document","createElement","created","counts","span","create","setAttribute","avatar","name","display_name","appendChild","insertTo","element","insertAdjacentElement","destroy","remove","update","next","plurks","me","friends","unavailable","parent","init","add","new_friends","Object","assign","find","async","findIndex","result","api","call","success","temp","message","user_info","push","findByUsername","index","toLowerCase","getAvatar","has_profile_image","getAvatarByUsername","user_name","statistics","whispers_count","coins_count","porn_count","noresponse_count","private_count","replurker_count","replurker_list","favourite_count","favorite_list","response_count","responded_count","responded_other_count","responded_other_list","plurks_count","poll_count","poll_responder_count","poll_popular_plurk","redditor_count","tiktoker_count","instagrammer_count","imgurer_count","facebooker_count","twitterer_count","youtuber_count","querySelector","MutationObserver","mutationsList","forEach","mutation","addedNodes","afterDraw","observe","attributes","childList","subtree","clear","innerHTML","listCount","list","collection","title","text","style","loading","insertAdjacentHTML","anim","set","background","to","opacity","duration","ease","screen","matchMedia","tl","fromTo","children","y","window","innerHeight","ScrollTrigger","trigger","start","end","animation","scrub","number","Number","textContent","load","progress","snap","onUpdate","toggleActions","querySelectorAll","x","height","getAttribute","capture","refresh","onclick","generating","imgs","body","cursor","img","includes","localUrl","url","_","round","canvas","html2canvas","backgroundColor","logging","link","display","download","year","href","toDataURL","click","removeChild","setTimeout","wrapper","draw","drawDiv","drawGraph","drawImage","image","badge","drawHTML","html","drawLink","drawPost","toString","drawUserList","max","friend","plurker","outerHTML","scale","stagger","amount","from","attach","charttitle","node","chart","that","zIndex","maxTop","top","currentTop","killTweensOf","onComplete","drawAll","response_percentage","most","responses","replurk","favorite","sort","a","b","findregex","regex","replace","content","storage","match","idx","responders","mentions","dataAll","myemoticons","hashtags","links","pics","types","words","chars","countAll","content_raw","plurk_id","replurkers_count","favorite_count","response","i","undefined","loved","pic","split","drawLinks","drawPics","owner_id","plurk_type","posted","interaction","multiplier","console","info","mvp","type","error","inactive","empty","prev_count","clean","isComplete","item","Promise","resolve","done","loop","month","fakeupdate","forcedone","width","padding","margin","overflow","scrollAnimate","credits","permisions","rotation","menu","el1","el2","direction","browserBar","login","onLeave","browserColor","onEnterBack","onEnter","startDate","endDate","days","fulldays","getSetStateColor","state","darkmode","browserColorDark","browserColorLight","setDarkMode","showLoginPage","hideLoginPage","showStatisticPages","timeline","onStart","hideStatisticPages","animate","quick","loginmessage","requestLogout","abort","requestToken","tokenlink","then","displayPlurkerData","extra","anniversary","years","avatar_big","oneday","join","join_date","getMonth","getFullYear","getDate","badges","displayStatistics","getTimeline","offset","plurk_users","concat","lastposted","largest_poll_result","plurk","responded","replurkers","favorers","anonymous","coins","porn","with_poll","poll","displayExtendedStatistics","date","gender","tiktok","facebook","logSessionStrorageSize","sessionStorageSize","totalBytes","key","sessionStorage","hasOwnProperty","getItem","getSessionStorageSize","scrollTo","interval","setInterval","clearInterval","run"],"sourceRoot":""}