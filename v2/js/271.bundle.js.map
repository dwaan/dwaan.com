{"version":3,"file":"271.bundle.js","mappings":"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","sources":["webpack://dwaan/./src/js/replurk/friends.js","webpack://dwaan/./src/js/replurk/loading.js","webpack://dwaan/./src/js/replurk/scrolls.js","webpack://dwaan/./src/js/replurk/span.js","webpack://dwaan/./src/js/replurk/colors.js","webpack://dwaan/./src/js/replurk/icons.js","webpack://dwaan/./src/js/replurk/element.js","webpack://dwaan/./src/js/replurk/most.js","webpack://dwaan/./src/js/replurk/inactive.js","webpack://dwaan/./src/js/replurk/statistics.js","webpack://dwaan/./src/js/replurk/main.js"],"sourcesContent":["\"use strict\"\n\nimport api from \"./api.js\"\n\n/*\n\tFriends object spesification:\n\n\t1. data: contains all the friends collection data\n\t2. add(data): add friend to friends collection data\n\t3. find(user_id): return friend data based on their id\n\t4. findByUsername(nick_name): return friend data based on their nick name\n\t5. getAvatar(user_id): return avatar url based on their id for from friends collection data\n\t6. getAvatarByUsername(user_id): return avatar url based on their nick name for from friends collection data\n*/\n\nclass friends {\n\tconstructor() {\n\t\tthis.data = {}\n\t\tthis.unavailable = []\n\t}\n\n\t/**\n\t * Add JSON object as a friends data\n\t *\n\t * ```js\n\t * friends.add({});\n\t * ```\n\t *\n\t * @param {new_friends}: New friends JSON from /APP/Profile/getPublicProfile\n\t * @memberof friends\n\t * @link https://www.plurk.com/API/2/\n\t */\n\tadd(new_friends) {\n\t\tObject.assign(this.data, new_friends)\n\t}\n\n\tasync find(user_id) {\n\t\tif (this.unavailable.findIndex(el => el == user_id) >= 0) return false\n\n\t\tif (this.data && this.data[user_id]) {\n\t\t\treturn this.data[user_id]\n\t\t} else {\n\t\t\tvar result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&user_id=\" + user_id)\n\n\t\t\tif (result.success) {\n\t\t\t\tvar temp = {}\n\t\t\t\ttemp[result.message.user_info.id] = result.message.user_info\n\t\t\t\tthis.add(temp)\n\t\t\t\treturn result.message.user_info\n\t\t\t} else {\n\t\t\t\tthis.unavailable.push(user_id)\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\n\tasync findByUsername(nick_name) {\n\t\tvar user_id = false\n\n\t\tif (this.unavailable.findIndex(el => el == nick_name) >= 0) return false\n\n\t\tfor (var index in this.data) {\n\t\t\tif (this.data[index].nick_name.toLowerCase() == nick_name.toLowerCase()) {\n\t\t\t\tuser_id = index\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif (user_id) {\n\t\t\treturn this.data[user_id]\n\t\t} else {\n\t\t\tvar result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&nick_name=\" + nick_name)\n\n\t\t\tif (result.success) {\n\t\t\t\tvar temp = {}\n\t\t\t\ttemp[result.message.user_info.id] = result.message.user_info\n\t\t\t\tthis.add(temp)\n\t\t\t\treturn result.message.user_info\n\t\t\t} else {\n\t\t\t\tthis.unavailable.push(nick_name)\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\n\tgetAvatar(user_id) {\n\t\tif (user_id && this.data && this.data[user_id]) {\n\t\t\tif (this.data[user_id].has_profile_image) {\n\t\t\t\tvar avatar = \"\"\n\t\t\t\tif (this.data[user_id].avatar) avatar = this.data[user_id].avatar\n\t\t\t\treturn 'https://avatars.plurk.com/' + user_id + '-big' + avatar + '.jpg'\n\t\t\t}\n\t\t}\n\t\treturn 'https://plurk.com/static/default_big.jpg'\n\t}\n\n\tgetAvatarByUsername(user_name) {\n\t\tvar user_id = false\n\n\t\tif (user_name) {\n\t\t\tfor (var index in this.data) {\n\t\t\t\tif (this.data[index].nick_name.toLowerCase() == user_name.toLowerCase()) {\n\t\t\t\t\tuser_id = index\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.getAvatar(user_id)\n\t}\n}\n\nexport default friends","\"use strict\"\n\nimport { gsap } from 'gsap'\n\nimport scroll from \"../helpers/scroll.js\"\nimport { reduceMotionFilter } from '../helpers/helper.js'\n\nclass loading {\n\tconstructor(next) {\n\t\tthis.count = 0\n\t\tthis.prev_count = 0\n\t\tthis.counts = -1\n\t\tthis.clean = false\n\t\tthis.next = next\n\t\tthis.parent = this\n\t\tthis.isComplete = function () { return this.count == this.counts }\n\t}\n\n\tdraw(item) {\n\t\treturn new Promise(resolve => {\n\t\t\tvar length = reduceMotionFilter(1)\n\t\t\tthis.prev_count = item\n\n\t\t\tif (!this.next.querySelector(\".statistics.statistics-loading\")) {\n\t\t\t\tthis.parent.statistics.draw(\"statistics-loading\", item + \"%\", \"<i class='month'>Data from \" + this.year + \"</i>. Loading. <small>As long as you didn't close this browser tab, You can resume later by refreshing this page.</small>\")\n\t\t\t}\n\n\t\t\t// Animate loading\n\t\t\tvar load = { progress: this.prev_count }\n\t\t\tgsap.to(load, {\n\t\t\t\tprogress: Math.round(item),\n\t\t\t\tsnap: \"progress\",\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length / 4,\n\t\t\t\tonUpdate: () => {\n\t\t\t\t\tvar el = this.next.querySelector(\".statistics-loading .big\")\n\t\t\t\t\tif (el) el.innerHTML = load.progress + \"%\"\n\t\t\t\t},\n\t\t\t\tonComplete: async () => {\n\t\t\t\t\tif (this.clean) await this.done()\n\t\t\t\t\tresolve()\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\n\tasync loop(length) {\n\t\tthis.clean = true\n\t\tthis.counts = length\n\t\tawait this.draw(0)\n\t}\n\n\tasync update(month, value) {\n\t\tvar el = this.next.querySelector(\".statistics-loading .month\")\n\t\tif (month && el) el.innerHTML = month\n\n\t\tif (this.counts >= 0) {\n\t\t\tthis.count = value ? value : this.count + 1\n\t\t\tawait this.draw(Math.round(100 * (this.count / this.counts)))\n\t\t}\n\t}\n\n\tasync fakeupdate() {\n\t\tif (this.counts >= 0) {\n\t\t\tthis.count++\n\t\t\tif (this.count >= (this.counts - 10)) this.count = (this.counts - 10)\n\t\t\tawait this.draw(100 * (this.count / this.counts))\n\t\t}\n\t}\n\n\tasync forcedone() {\n\t\tthis.count = this.counts\n\t\tawait this.draw(100)\n\t}\n\n\tdone() {\n\t\treturn new Promise(resolve => {\n\t\t\tvar length = reduceMotionFilter(1)\n\n\t\t\tif (this.isComplete()) {\n\t\t\t\tvar el = this.next.querySelector(\".statistics.statistics-loading\")\n\t\t\t\tthis.clean = false\n\t\t\t\tif (el) {\n\t\t\t\t\tgsap.to(el, {\n\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\theight: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t\tduration: length / 2,\n\t\t\t\t\t\tease: \"power3.out\",\n\t\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\t\tel.remove()\n\t\t\t\t\t\t\tscroll.refresh()\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} else resolve()\n\t\t})\n\t}\n}\n\nexport default loading","\"use strict\";\n\nimport { gsap } from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js'\n\nimport scroll from \"../helpers/scroll.js\"\nimport { _qAll, reduceMotionFilter } from '../helpers/helper.js'\n\nimport browser from './browser.js'\n\n// Scroll Animation\nclass scrolls {\n\tconstructor(next) {\n\t\tthis.next = next\n\t}\n\n\tcredits(tl) {\n\t\tvar length = reduceMotionFilter(1)\n\n\t\ttl.fromTo(this.next.querySelectorAll(\"#credits .like, #credits .noaffiliation, #credits .made\"), {\n\t\t\ty: window.innerHeight * 1 / 8\n\t\t}, {\n\t\t\ty: 0,\n\t\t\tease: \"linear\",\n\t\t\tduration: length * 2,\n\t\t}, 0)\n\t\ttl.fromTo(this.next.querySelectorAll(\"#credits .like, #credits .noaffiliation\"), {\n\t\t\topacity: 0\n\t\t}, {\n\t\t\topacity: 1,\n\t\t\tstagger: {\n\t\t\t\tfrom: 'end',\n\t\t\t\tamount: length / 10\n\t\t\t},\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\"\n\t\t}, 0)\n\t\ttl.fromTo(this.next.querySelectorAll(\"#credits .made\"), {\n\t\t\topacity: 0\n\t\t}, {\n\t\t\topacity: 1,\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\"\n\t\t}, length * 3 / 10)\n\n\t\treturn tl\n\t}\n\n\tstatistics() {\n\t\t// Scroll animate statistics\n\t\tscroll.push(tl => this.credits(tl), tl => ScrollTrigger.create({\n\t\t\ttrigger: this.next.querySelectorAll(\"#statistics\"),\n\t\t\tstart: \"100%-=\" + window.innerHeight + \" 0\",\n\t\t\tend: \"100% 0\",\n\t\t\tanimation: tl,\n\t\t\tscrub: .5\n\t\t}))\n\t}\n\n\tpermisions() {\n\t\t// Scroll animation permission section\n\t\tscroll.push((tl) => {\n\t\t\ttl.fromTo(this.next.querySelectorAll(\"#permission form\"), {\n\t\t\t\ty: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -3 / 4,\n\t\t\t\tease: \"linear\"\n\t\t\t}, 0)\n\t\t\ttl.fromTo(this.next.querySelectorAll(\"#permission .bgtext sup\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * -1 / 10,\n\t\t\t\trotation: -10,\n\t\t\t\tease: \"linear\"\n\t\t\t}, 0)\n\t\t\ttl.fromTo(this.next.querySelectorAll(\"#permission .bgtext sub\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * 1 / 10,\n\t\t\t\trotation: 10,\n\t\t\t\tease: \"linear\"\n\t\t\t}, 0)\n\t\t\treturn tl\n\t\t}, (tl) => {\n\t\t\treturn ScrollTrigger.create({\n\t\t\t\ttrigger: this.next.querySelectorAll(\"#permission\"),\n\t\t\t\tstart: \"0 0\",\n\t\t\t\tend: \"100% 0\",\n\t\t\t\tanimation: tl,\n\t\t\t\tscrub: .5\n\t\t\t})\n\t\t})\n\t\tscroll.push((tl) => {\n\t\t\ttl = this.credits(tl)\n\t\t\treturn tl\n\t\t}, (tl) => {\n\t\t\treturn ScrollTrigger.create({\n\t\t\t\ttrigger: this.next.querySelectorAll(\"#permission\"),\n\t\t\t\tstart: \"0 0\",\n\t\t\t\tend: \"100% 0\",\n\t\t\t\tanimation: tl,\n\t\t\t\tscrub: .5\n\t\t\t})\n\t\t})\n\t}\n\n\tmenu() {\n\t\t// Scroll animation menu and logout\n\t\tscroll.push(tl => tl, tl => {\n\t\t\treturn ScrollTrigger.create({\n\t\t\t\ttrigger: 'main',\n\t\t\t\tstart: \"0 0\",\n\t\t\t\tend: \"100% 0\",\n\t\t\t\tanimation: tl,\n\t\t\t\tonUpdate: update => {\n\t\t\t\t\tvar el1 = '.logo, .size, .lamp, .switch'\n\t\t\t\t\tvar el2 = el1 + \", .footer > *\"\n\n\t\t\t\t\tif (update.direction > 0) {\n\t\t\t\t\t\tgsap.killTweensOf(_qAll(el2))\n\t\t\t\t\t\tgsap.to(_qAll(el1), { y: -100, opacity: 0 })\n\t\t\t\t\t\tgsap.to(_qAll('.footer > *'), { y: 100, opacity: 0 })\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgsap.to(_qAll(el2), { y: 0, opacity: 1 })\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\n\tbrowserBar(login = true) {\n\t\tif (login) {\n\t\t\tscroll.push((tl) => {\n\t\t\t\treturn tl\n\t\t\t}, (tl) => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: '#hello',\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: true,\n\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\tbrowser.set(\"white\")\n\t\t\t\t\t},\n\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\tbrowser.set(\"green\")\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t\tscroll.push((tl) => {\n\t\t\t\treturn tl\n\t\t\t}, (tl) => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: '#statistics',\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: true,\n\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\tbrowser.set(\"yellow\")\n\t\t\t\t\t},\n\t\t\t\t\tonEnter: () => {\n\t\t\t\t\t\tbrowser.set(\"white\")\n\t\t\t\t\t},\n\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\tbrowser.set(\"white\")\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\tscroll.push((tl) => {\n\t\t\t\treturn tl\n\t\t\t}, (tl) => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: '#permission',\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: true,\n\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\tbrowser.set(\"yellow\")\n\t\t\t\t\t},\n\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\tbrowser.set(\"green\")\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n}\n\nexport default scrolls","\"use strict\"\n\nimport { _q, _qAll, animateNumber } from '../helpers/helper.js'\n\n/*\n    Simple span element object:\n\n    1. update(text): Update the content with text value, and animate it if it's number.\n    2. html(html): Update the content with html value.\n    3. class(classname): Add class name to span.\n*/\n\nclass span {\n    constructor() {\n        this.el = document.createElement('span')\n        return this\n    }\n\n    class(...classname) {\n        this.el.classList.add(...classname)\n        return this\n    }\n\n    html(html) {\n        this.el.innerHTML = html\n        return this\n    }\n\n    update(text) {\n        animateNumber(this.el.textContent, text, (text) => {\n            this.el.textContent = text\n        })\n        return this\n    }\n}\n\nexport default span","\"use strict\";\n\nimport { gsap } from 'gsap';\n\n/*\n    Color randomizer\n\n    1. colors: array of colors value\n    2. getRandomColor(): get the randomized color from colors list\n*/\n\nclass colors {\n    constructor() {\n        this.oldcolor = \"\";\n        this.randomcolors = [];\n\n        const allColorArrays = [\n            [\n                'rgb(63,94,251)',     // Dodger Blue\n                'rgb(252,70,107)',    // Radical Red\n                'rgb(34,193,195)',    // Light Sea Green\n                'rgb(253,187,45)',    // Goldenrod\n                'rgb(195,34,190)',    // Deep Pink\n                'rgb(219,158,0)',     // Golden Yellow\n                'rgb(75,231,152)',    // Medium Spring Green\n                'rgb(195,34,103)',    // Cerise\n                'rgb(45,182,253)'     // Dodger Blue (Lighter)\n            ]\n        ];\n\n        const seconds = Math.floor(Date.now() / 1000); // Get current time in seconds\n        const arrayIndex = seconds % allColorArrays.length; // Use seconds to determine the index\n        this.colors = allColorArrays[arrayIndex];\n    }\n\n    getRandomColor() {\n        var color;\n        do {\n            this.randomcolors = gsap.utils.shuffle(this.colors).slice();\n        } while (this.oldcolor == (color = this.randomcolors.pop()));\n        this.oldcolor = color;\n        return color;\n    }\n}\n\nexport default colors;","\"use strict\";\n\nvar iconLink = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\"><path id=\"right\" d=\"M19.188,12.001c0,1.1-0.891,2.015-1.988,2.015l-4.195-0.015C13.543,15.089,13.968,16,15.002,16h3C19.658,16,21,13.657,21,12s-1.342-4-2.998-4h-3c-1.034,0-1.459,0.911-1.998,1.999l4.195-0.015C18.297,9.984,19.188,10.901,19.188,12.001z\"/><path id=\"center\" d=\"M8,12c0,0.535,0.42,1,0.938,1h6.109c0.518,0,0.938-0.465,0.938-1c0-0.534-0.42-1-0.938-1H8.938C8.42,11,8,11.466,8,12z\"/><path id=\"left\" d=\"M4.816,11.999c0-1.1,0.891-2.015,1.988-2.015L11,9.999C10.461,8.911,10.036,8,9.002,8h-3c-1.656,0-2.998,2.343-2.998,4s1.342,4,2.998,4h3c1.034,0,1.459-0.911,1.998-1.999l-4.195,0.015C5.707,14.016,4.816,13.099,4.816,11.999z\"/></svg>';\n\nexport default iconLink;","\"use strict\"\n\nimport span from \"./span.js\"\n\n/*\n    Plurk element object spesification:\n\n    1. id: contain the id name\n    2. user: contain user object\n    3. attached: status of element is attached in DOM or not\n    4. create(): create the DOM element\n    4. destroy(): remove the DOM element\n    4. update(): update the DOM element based on it's current value\n    5. insertTo(element): insert DOM element to spesific element, also will check if it's already created or not\n*/\n\nclass element {\n    constructor(id, data, avatarurl, customcreate) {\n        this.id = id\n        this.user = data\n        this.user_id = data.id\n        this.value = data.nick_name\n        this.nick_name = data.nick_name\n        this.attached = false\n        this.hidden = true\n        this.count = 1\n        this.position = 0\n        this.customcreate = customcreate\n        this.el = document.createElement('a')\n        this.created = false\n        this.avatarurl = avatarurl\n        this.counts = new span().class(\"count\").html(this.count)\n    }\n\n    create() {\n        this.created = true\n\n        this.el.setAttribute(\"id\", this.id + this.user_id)\n        this.el.setAttribute(\"class\", 'plurkers')\n        this.el.setAttribute(\"href\", 'https://plurk.com/' + this.user.nick_name)\n        this.el.setAttribute(\"target\", '_BLANK')\n\n        if (!this.customcreate) {\n            this.avatar = new span()\n                .class(\"avatar\")\n                .html(`<img src=\"${this.avatarurl}\" />`)\n            this.name = new span()\n                .class(\"name\")\n                .html(`${this.user.display_name}`)\n            this.counts = new span()\n                .class('count')\n                .html(this.count)\n            this.el.appendChild(this.avatar.el)\n            this.el.appendChild(this.name.el)\n            this.el.appendChild(this.counts.el)\n        } else {\n            this.customcreate(this)\n        }\n    }\n\n    insertTo(element) {\n        if (!this.created) this.create()\n\n        this.attached = true\n        element.insertAdjacentElement(\"beforeend\", this.el)\n    }\n\n    destroy() {\n        this.attached = false\n\n        if (this.el) {\n            this.el.remove()\n            return true\n        } else {\n            return false\n        }\n    }\n\n    update() {\n        // Only update when it's attached\n        if (this.attached) {\n            this.counts.update(`${this.count}`)\n        }\n    }\n}\n\nexport default element","\"use strict\"\n\nimport api from \"./api.js\"\nimport { plural, datediff, pluralinwords } from '../helpers/helper.js'\n\nimport span from \"./span.js\"\nimport iconLink from \"./icons.js\"\nimport element from \"./element.js\"\n\nclass most {\n\tconstructor(statistics) {\n\t\tif (!statistics) return\n\n\t\tthis.me = statistics.me\n\t\tthis.friends = statistics.friends\n\t\tthis.year = statistics.year\n\t\tthis.statistics = statistics\n\n\t\tthis.responders = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: async function (response) {\n\t\t\t\tvar index = this.data.findIndex(function (el) {\n\t\t\t\t\treturn el.user_id == response.user_id\n\t\t\t\t})\n\n\t\t\t\tif (index < 0) {\n\t\t\t\t\tvar user = await this.parent.friends.find(response.user_id)\n\t\t\t\t\tthis.data.push(new element('mostresponders', user, this.parent.friends.getAvatar(user.id)))\n\t\t\t\t} else {\n\t\t\t\t\tthis.data[index].count++\n\t\t\t\t}\n\t\t\t\tthis.data.sort(this.parent.sort)\n\n\t\t\t\t// Update top 5\n\t\t\t\tvar index = 1\n\t\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\t\tthis.data[i].position = this.data.length\n\t\t\t\t\tif (this.data[i].user_id != this.parent.me.id && this.data[i].user_id != 99999) {\n\t\t\t\t\t\tthis.data[i].position = index++\n\t\t\t\t\t\tthis.parent.statistics.attach('<i>Top <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> Responders</i> <strong>of My Timeline</strong>', this.data[i], 5)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar index = 0\n\t\t\t\tif (this.data.length > 0) {\n\t\t\t\t\twhile ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++\n\t\t\t\t\tif (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatar(this.data[index].user_id), 'https://plurk.com/' + this.data[index].user.nick_name, '<i>Most Responder</i>', this.data[index].user.display_name, this.data[index].count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.mentions = {\n\t\t\tdata: [],\n\t\t\tdataAll: [],\n\t\t\tparent: this,\n\t\t\tcount: async function (content) {\n\t\t\t\tvar result = this.parent.findregex(/\\@(\\w{1,30})[\\ |\\:]/g, value => value.replace(/\\@|\\ |\\:/g, ''), content, this.data)\n\t\t\t\tvar max = 5\n\t\t\t\tvar index = 1\n\n\t\t\t\tif (result) {\n\t\t\t\t\t// Update top 5\n\t\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\t\tfor (var idx = 0; idx < this.data.length; idx++) {\n\t\t\t\t\t\tthis.data[idx].position = this.data.length\n\n\t\t\t\t\t\tif (index <= max) {\n\t\t\t\t\t\t\tvar user = await this.parent.friends.findByUsername(this.data[idx].value)\n\n\t\t\t\t\t\t\tif (this.data[idx].el == undefined) {\n\t\t\t\t\t\t\t\tthis.data[idx] = new element('mostmentionedbyme', user, \"\", plurker => {\n\t\t\t\t\t\t\t\t\tplurker.avatar = new span().class(\"avatar\").html(`<img src=\"${this.parent.friends.getAvatar(plurker.user_id)}\" />`)\n\t\t\t\t\t\t\t\t\tplurker.name = new span().class(\"name\").html(`@${plurker.nick_name}`)\n\t\t\t\t\t\t\t\t\tplurker.counts = new span().class(\"count\").html(plurker.count)\n\t\t\t\t\t\t\t\t\tplurker.el.appendChild(plurker.avatar.el)\n\t\t\t\t\t\t\t\t\tplurker.el.appendChild(plurker.name.el)\n\t\t\t\t\t\t\t\t\tplurker.el.appendChild(plurker.counts.el)\n\t\t\t\t\t\t\t\t\tplurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.nick_name)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (user.id != this.parent.me.id && user.id != 99999) {\n\t\t\t\t\t\t\t\tthis.data[idx].position = index++\n\t\t\t\t\t\t\t\tthis.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/fluent-emoji:person-raising-hand-light.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.data[idx].el) this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/fluent-emoji:person-raising-hand-light.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar index = 0\n\t\t\t\tif (this.data.length > 0) {\n\t\t\t\t\twhile ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++\n\t\t\t\t\tif (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatarByUsername(this.data[index].value), 'https://plurk.com/' + this.data[index].value, '<i>Most Mentioned</i> by me', \"@\" + this.data[index].value, this.data[index].count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.myemoticons = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (content) {\n\t\t\t\tthis.parent.findregex(/emoticon_my\\\" src=\\\"(.*?)\\\"/g, function (value) {\n\t\t\t\t\treturn value.replace(/emoticon_my\\\" src=\\\"|\\\"/gi, '')\n\t\t\t\t}, content, this.data)\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar html = \"\"\n\t\t\t\tvar max = 7\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\tfor (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n\t\t\t\t\tif (this.data[i].count > 1) html += '<div><img src=\"' + this.data[i].value + '\" /> <span class=\"count\">' + this.data[i].count + '</span></div>'\n\t\t\t\tif (html != \"\") this.parent.statistics.drawHTML(\"grid emoticons\", 'Most Used <i>My Emoticons</i>', html)\n\t\t\t}\n\t\t}\n\n\t\tthis.hashtags = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (content) {\n\t\t\t\tthis.parent.findregex(/hashtag\\\"\\>(.*?)\\</g, function (value) {\n\t\t\t\t\treturn value.replace(/hashtag\\\"\\>\\#|\\.\\<|\\</g, '')\n\t\t\t\t}, content, this.data)\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar html = \"\"\n\t\t\t\tvar max = 5\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\tfor (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n\t\t\t\t\tif (this.data[i].count > 1) html += '<div><a href=\"https://plurk.com/search?q=' + this.data[i].value + '\" target=\"_BLANK\" /><span class=\"count\">' + this.data[i].count + '</span> #' + this.data[i].value + '</a></div>'\n\t\t\t\tif (html != \"\") {\n\t\t\t\t\thtml = \"<strong>#</strong>\" + html\n\t\t\t\t\tthis.parent.statistics.drawHTML(\"hashtags\", 'Most Used <i>Hashtags</i>', html)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.links = {\n\t\t\tdata: [],\n\t\t\tlinks: [],\n\t\t\tpics: [],\n\t\t\tparent: this,\n\t\t\tcount: function (content, id, response, replurk, loved) {\n\t\t\t\tvar result = content.match(/href\\=\\\"(.*?)\\\"\\ class=\\\"(.*?)\\\"\\ rel/g)\n\t\t\t\tvar count = 0\n\t\t\t\tvar pics = []\n\t\t\t\tvar links = []\n\n\t\t\t\tif (result) for (var data of result) {\n\t\t\t\t\tif (!this.data[id]) {\n\t\t\t\t\t\tcount = response + (replurk * 250) + (loved * 50)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.includes(\"pictureservices\")) {\n\t\t\t\t\t\tthis.pics.push(data)\n\t\t\t\t\t\tif (count > 0) {\n\t\t\t\t\t\t\tvar pic = data.split('\\\"')\n\t\t\t\t\t\t\tpics.push({\n\t\t\t\t\t\t\t\turl: pic[1],\n\t\t\t\t\t\t\t\tresponse: response,\n\t\t\t\t\t\t\t\treplurk: replurk,\n\t\t\t\t\t\t\t\tloved: loved\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.links.push(data)\n\t\t\t\t\t\tif (count > 0) {\n\t\t\t\t\t\t\tvar link = data.split('\\\"')\n\t\t\t\t\t\t\tlinks.push({\n\t\t\t\t\t\t\t\turl: link[1],\n\t\t\t\t\t\t\t\tresponse: response,\n\t\t\t\t\t\t\t\treplurk: replurk,\n\t\t\t\t\t\t\t\tloved: loved\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (count) this.data.push({\n\t\t\t\t\tid: id,\n\t\t\t\t\tpics: pics,\n\t\t\t\t\tlinks: links,\n\t\t\t\t\tcount: count,\n\t\t\t\t\tcontent: content\n\t\t\t\t})\n\t\t\t},\n\t\t\tdrawLinks: function () {\n\t\t\t\tvar max = 1\n\t\t\t\tvar index = 0\n\t\t\t\tvar result = \"\"\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\twhile (index < this.data.length && max > 0) {\n\t\t\t\t\tif (this.data[index].links.length > 0) {\n\t\t\t\t\t\tvar link = this.data[index].links[0]\n\t\t\t\t\t\tvar url = '<a href=\"https://plurk.com/p/' + this.data[index].id.toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>'\n\t\t\t\t\t\tresult += '<div class=\"post\"><div class=\"info\">' + this.data[index].content + '</div><div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + link.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + link.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + link.loved + '</span>' + url + '</div></div>'\n\t\t\t\t\t\tmax--\n\t\t\t\t\t}\n\t\t\t\t\tindex++\n\t\t\t\t}\n\t\t\t\tif (this.links.length > 0) this.parent.statistics.drawDiv('sharedlinks', \"<div class='title'>I shared <i>🔗 \" + plural(this.links.length, 'link') + '</i> and this is the most popular one</div>' + result)\n\t\t\t},\n\t\t\tdrawPics: function () {\n\t\t\t\tvar max = 1\n\t\t\t\tvar index = 0\n\t\t\t\tvar result = \"\"\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\twhile (index < this.data.length && max > 0) {\n\t\t\t\t\tif (this.data[index].pics.length > 0) {\n\t\t\t\t\t\tvar pics = this.data[index].pics[0]\n\t\t\t\t\t\tvar url = '<a href=\"https://plurk.com/p/' + this.data[index].toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>'\n\t\t\t\t\t\tresult += '<div class=\"box\"><div class=\"image\" style=\"background-image: url(' + api.url + \"?img=\" + pics.url + ')\"></div><div class=\"post\">' + this.data[index].content + '<div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + pics.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + pics.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + pics.loved + '</span>' + url + '</div></div></div>'\n\t\t\t\t\t\tmax--\n\t\t\t\t\t}\n\t\t\t\t\tindex++\n\t\t\t\t}\n\n\t\t\t\tif (this.pics.length > 0) this.parent.statistics.draw('sharedpictures', this.pics.length, 'I shared <i>🖼 ' + plural(this.pics.length, 'image') + '</i>')\n\t\t\t\tif (result != \"\") this.parent.statistics.drawHTML('span2 previewpics', '<i>🖼 Most Popular Image</i>', result)\n\t\t\t}\n\t\t}\n\n\t\tthis.types = {\n\t\t\twords: 0,\n\t\t\tchars: 0,\n\t\t\tparent: this,\n\t\t\tcount: function (content) {\n\t\t\t\tvar words = content.split(\" \")\n\n\t\t\t\tthis.chars += content.length\n\t\t\t\tthis.words += words.length\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tif (this.chars > 0) this.parent.statistics.draw('span2 mediumnumber', this.chars, 'I typed more than  <i>' + pluralinwords(this.chars, 'character') + '</i>, around <i>' + pluralinwords(this.words, 'word') + '</i> this year')\n\t\t\t}\n\t\t}\n\n\t\tthis.responses = {\n\t\t\tparent: this,\n\t\t\tsort: (a, b) => b.response_count - a.response_count,\n\t\t\tdraw: function (posts) {\n\t\t\t\tvar post\n\t\t\t\tposts.sort(this.sort)\n\t\t\t\tif (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.response_count > 0) {\n\t\t\t\t\tthis.parent.statistics.drawPost('postcontent span2 mostresponded', post.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> Most Responded</i> ' + datediff(post.posted), post.content, post.response_count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.replurk = {\n\t\t\tparent: this,\n\t\t\tsort: (a, b) => b.replurkers_count - a.replurkers_count,\n\t\t\tdraw: function (posts) {\n\t\t\t\tvar post\n\t\t\t\tposts.sort(this.sort)\n\t\t\t\tif (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.replurkers_count > 0) {\n\t\t\t\t\tthis.parent.statistics.drawPost('postcontent span2 mostreplurked', post.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Most Replurked</i> ' + datediff(post.posted), post.content, post.replurkers_count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.favorite = {\n\t\t\tparent: this,\n\t\t\tsort: (a, b) => b.favorite_count - a.favorite_count,\n\t\t\tdraw: function (posts) {\n\t\t\t\tvar post\n\t\t\t\tposts.sort(this.sort)\n\t\t\t\tif (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.favorite_count > 0) {\n\t\t\t\t\tthis.parent.statistics.drawPost('postcontent span2 mostfavorited', post.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Most Loved</i> ' + datediff(post.posted), post.content, post.favorite_count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.interaction = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (response) {\n\t\t\t\tvar index = this.data.findIndex(function (el) {\n\t\t\t\t\treturn el.id == response.user_id\n\t\t\t\t})\n\n\t\t\t\tif (index < 0) {\n\t\t\t\t\tthis.data.push({\n\t\t\t\t\t\tid: response.user_id,\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tmultiplier: 1,\n\t\t\t\t\t\tplurk_id: response.plurk_id\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tif (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier++\n\t\t\t\t\telse this.data[index].multiplier = 1\n\t\t\t\t\tthis.data[index].count += (this.data[index].multiplier * response.content_raw.length)\n\t\t\t\t}\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar result = []\n\t\t\t\tvar length = 0\n\t\t\t\tvar index = 0\n\t\t\t\twhile (this.data[index] && length <= 5) {\n\t\t\t\t\tif (this.data[index].id != this.parent.me.id) {\n\t\t\t\t\t\tresult.push(this.data[index])\n\t\t\t\t\t\tlength++\n\t\t\t\t\t}\n\t\t\t\t\tindex++\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tif (result.length > 0) this.parent.statistics.drawUserList(\"bubble span2\", \"mostinteraction\", \"Plurkers who really like to <i><img src='https://api.iconify.design/fluent-emoji:speaking-head.svg' /> interact</i> with me\", result)\n\t\t\t\t} catch {\n\t\t\t\t\tconsole.info(\"Error while counting most interacted plurker\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.mvp = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (response, type) {\n\t\t\t\tvar index = this.data.findIndex(function (el) {\n\t\t\t\t\treturn el.id == response.user_id\n\t\t\t\t})\n\n\t\t\t\tif (index < 0) {\n\t\t\t\t\tthis.data.push({\n\t\t\t\t\t\tid: response.user_id,\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tmultiplier: 1,\n\t\t\t\t\t\tplurk_id: response.plurk_id\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tif (type == \"replurk\") {\n\t\t\t\t\t\tthis.data[index].count += (response.count * 250)\n\t\t\t\t\t} else if (type == \"favorite\") {\n\t\t\t\t\t\tthis.data[index].count += (response.count * 50)\n\t\t\t\t\t} else if (response.content_raw.length > 16) {\n\t\t\t\t\t\tif (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier += .5\n\t\t\t\t\t\telse this.data[index].multiplier = .5\n\t\t\t\t\t\tthis.data[index].count += (this.data[index].multiplier * response.content_raw.length)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar result = []\n\t\t\t\tvar length = 0\n\t\t\t\tvar index = 0\n\t\t\t\twhile (this.data[index] && length <= 5) {\n\t\t\t\t\tif (this.data[index].id != this.parent.me.id) {\n\t\t\t\t\t\tresult.push(this.data[index])\n\t\t\t\t\t\tlength++\n\t\t\t\t\t}\n\t\t\t\t\tindex++\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tif (result.length > 0) this.parent.statistics.drawUserList(\"bubble span3\", \"mvp\", \"My \" + this.parent.year + \" <i><img src='https://api.iconify.design/fluent-emoji:biting-lip.svg' /> MVP</i>\", result)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.info(\"Error while counting my mvp\", error)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tsort(a, b) {\n\t\treturn b.count - a.count\n\t}\n\n\t// Find and count all based on regex\n\tfindregex(regex, replace, content, storage) {\n\t\tvar result = content.match(regex)\n\n\t\tfor (var index in result) {\n\t\t\tvar value = replace(result[index])\n\t\t\tvar idx = storage.findIndex(el => el.value == value)\n\n\t\t\tif (idx < 0) {\n\t\t\t\tstorage.push({\n\t\t\t\t\tid: value,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tcount: 1\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tstorage[idx].count++\n\t\t\t}\n\t\t}\n\n\t\treturn result\n\t}\n\n\tasync countAll(data) {\n\t\t// Find and count all my emoticons from my post\n\t\tif (data.user_id == this.me.id) this.myemoticons.count(data.content)\n\t\t// Find and count all mentions from my post\n\t\tawait this.mentions.count(data.content_raw)\n\t\t// Find and count all hashtags from my post\n\t\tif (data.user_id == this.me.id) this.hashtags.count(data.content)\n\t\t// Find and count all links and pictures post from my post\n\t\tif (data.user_id == this.me.id) this.links.count(data.content, data.plurk_id, data.response_count, data.replurkers_count, data.favorite_count)\n\t\t// Find and count characther and words from my post\n\t\tif (data.user_id == this.me.id) this.types.count(data.content_raw)\n\t}\n}\n\nexport default most","// Inactive plurker object\nclass inactive {\n\tconstructor(statistics) {\n\t\tthis.statistics = statistics\n\t\tthis.year = statistics.year\n\t}\n\n\tdraw(data) {\n\t\tthis.statistics.draw('inactive', this.year + \" &#8617;\", 'I\\'ve been inactive since ' + year + ' <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n\t\tthis.statistics.drawPost('postcontent span2 inactivemore', data.plurk_id, '<i>My last Plurk</i> ' + datediff(data.posted), data.content, data.response_count);\n\t}\n\n\tempty() {\n\t\tthis.statistics.draw('inactive', '-', 'I didn\\'t post anything at this year <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n\t}\n}\n\nexport default inactive","\"use strict\"\n\nimport { gsap } from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js'\nimport html2canvas from \"html2canvas\"\n\nimport api from \"./api.js\"\nimport scroll from \"../helpers/scroll.js\"\nimport { hasClass, plural, reduceMotionFilter } from '../helpers/helper.js'\n\nimport span from \"./span.js\"\nimport colors from \"./colors.js\"\nimport iconLink from \"./icons.js\"\nimport element from \"./element.js\"\nimport most from \"./most.js\"\nimport inactive from \"./inactive.js\"\n\nclass statistics {\n\tconstructor(next, me, friends, year) {\n\t\tif (!next || !me || !friends || !year) return\n\n\t\tthis.whispers_count = 0\n\t\tthis.poll_count = 0\n\t\tthis.poll_responder_count = 0\n\t\tthis.coins_count = 0\n\t\tthis.porn_count = 0\n\t\tthis.noresponse_count = 0\n\t\tthis.private_count = 0\n\t\tthis.replurker_count = 0\n\t\tthis.replurker_list = []\n\t\tthis.favourite_count = 0\n\t\tthis.favorite_list = []\n\t\tthis.response_count = 0\n\t\tthis.responded_count = 0\n\t\tthis.responded_other_count = 0\n\t\tthis.responded_other_list = []\n\t\tthis.plurks_count = 0\n\t\tthis.id = 0\n\t\tthis.randomcolors = []\n\n\t\tthis.next = next\n\t\tthis.me = me\n\t\tthis.friends = friends\n\t\tthis.year = year\n\n\t\t// Most statistics object renderer\n\t\tthis.most = new most(this)\n\n\t\t// Inactive timeline\n\t\tthis.inactive = new inactive(this)\n\n\t\tthis.el = this.next.querySelector(\"#statistics\")\n\n\t\t// Obverse when element is added to DOM\n\t\tvar observer = new MutationObserver((mutationsList) => {\n\t\t\tmutationsList.forEach(mutation => {\n\t\t\t\tmutation.addedNodes.forEach(el => {\n\t\t\t\t\tif (hasClass(el, \"statistics\")) this.afterDraw(el)\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t\tobserver.observe(this.el, {\n\t\t\tattributes: true,\n\t\t\tchildList: true,\n\t\t\tsubtree: false\n\t\t})\n\t}\n\n\tclear() {\n\t\tthis.el.innerHTML = \"\"\n\t}\n\n\tlistCount(list, collection) {\n\t\tif (collection.length > 0) {\n\t\t\tcollection.forEach(value => {\n\t\t\t\tvar index = list.findIndex(el => el.id == value)\n\n\t\t\t\tif (index < 0) list.push({ id: value, count: 1 })\n\t\t\t\telse list[index].count++\n\t\t\t})\n\t\t}\n\n\t\treturn list\n\t}\n\n\ttitle(text, style = \"\", loading = false) {\n\t\tlet span = loading ? `<span class=\"loading\"><i/>` : `<span class=\"line\"><i></i></span>`\n\t\tthis.el.insertAdjacentHTML('beforeend', `\\\n\t\t\t<div class=\"statistics statistics-title ${style}\">\\\n\t\t\t\t<h3><span>${text}</span>${span}</h3>\\\n\t\t\t</div>`)\n\t}\n\n\tbody(text, style = \"\") {\n\t\tthis.el.insertAdjacentHTML('beforeend', `\\\n\t\t\t<div class=\"statistics statistics-title ${style}\">\\\n\t\t\t\t<div class=\"body\">${text}</div>\\\n\t\t\t</div>`)\n\t}\n\n\tafterDraw(el) {\n\t\tvar length = reduceMotionFilter(1)\n\n\t\tif (hasClass(el, 'statistics-wrap')) {\n\t\t\tvar color = new colors()\n\t\t\tvar randomcolors = [color.getRandomColor(), color.getRandomColor()]\n\t\t\tvar content = el.querySelector(\".content\")\n\n\t\t\tgsap.set(content, {\n\t\t\t\tbackground: 'radial-gradient(at 10% 10%, ' + randomcolors[0] + ' 0%, ' + randomcolors[1] + ' 100%)'\n\t\t\t})\n\n\t\t\tgsap.to(content, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length / 2,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, 0)\n\n\t\t\t// Scroll animation wrap section\n\t\t\tvar screen = gsap.matchMedia()\n\t\t\tscreen.add(\"(min-aspect-ratio: 1/1)\", () => {\n\t\t\t\tscroll.push(tl => {\n\t\t\t\t\ttl.fromTo(el.children, {\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t}, {\n\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\tease: \"ease.out\"\n\t\t\t\t\t}, 0)\n\t\t\t\t\treturn tl\n\t\t\t\t}, tl => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: el,\n\t\t\t\t\t\tstart: \"0 100%-=100px\",\n\t\t\t\t\t\tend: \"0 100%-=100px\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: 2\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t\t\tscreen.add(\"(max-aspect-ratio: 1/1)\", () => {\n\t\t\t\tscroll.push(tl => {\n\t\t\t\t\ttl.fromTo(el.children, {\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t}, {\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t}, 0)\n\t\t\t\t\treturn tl\n\t\t\t\t}, tl => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: el,\n\t\t\t\t\t\tstart: \"0 100%-=100px\",\n\t\t\t\t\t\tend: \"100px 100%-=100px\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: 1\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\n\t\t\t// Animate number\n\t\t\tscroll.push(function (tl) {\n\t\t\t\tif (el.querySelector(\".big\")) {\n\t\t\t\t\tvar number = Number(el.querySelector(\".big\").textContent)\n\t\t\t\t\tif (number > 0) {\n\t\t\t\t\t\tvar load = { progress: 0 }\n\t\t\t\t\t\tvar duration = 1\n\t\t\t\t\t\tif (number >= 500 && number < 1000) duration = 2\n\t\t\t\t\t\telse if (number >= 1000 && number < 99999) duration = 3\n\t\t\t\t\t\telse if (number >= 99999) duration = 4\n\t\t\t\t\t\ttl.to(load, {\n\t\t\t\t\t\t\tprogress: number,\n\t\t\t\t\t\t\tsnap: \"progress\",\n\t\t\t\t\t\t\tease: \"power3.out\",\n\t\t\t\t\t\t\tduration: duration,\n\t\t\t\t\t\t\tonUpdate: () => {\n\t\t\t\t\t\t\t\tel.querySelector(\".big\").textContent = plural(load.progress)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"0 100%-=100px\",\n\t\t\t\t\tend: \"100px 100%-=100px\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\ttoggleActions: \"play none none none\"\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\t// Scroll animation header line section\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(el.querySelectorAll(\"i\"), {\n\t\t\t\t\tx: \"-100%\"\n\t\t\t\t}, {\n\t\t\t\t\tx: \"0%\",\n\t\t\t\t\tease: \"ease.out\"\n\t\t\t\t}, 0)\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"100% 100%\",\n\t\t\t\t\tend: \"100% 0\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: 1\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tif (hasClass(el, 'drawgraph')) {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(el.querySelector(\".graph\"), {\n\t\t\t\t\ty: 100\n\t\t\t\t}, {\n\t\t\t\t\ty: 0\n\t\t\t\t}, 0)\n\n\t\t\t\ttl.fromTo(el.querySelector(\".graph i\"), {\n\t\t\t\t\theight: \"0%\"\n\t\t\t\t}, {\n\t\t\t\t\theight: el.querySelector(\".graph i\").getAttribute(\"data-number\") + \"%\"\n\t\t\t\t}, 0)\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"50% 100%\",\n\t\t\t\t\tend: \"100% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: 1\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tif (hasClass(el, 'coins')) {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(el.querySelector(\".big\"), {\n\t\t\t\t\ty: \"50%\"\n\t\t\t\t}, {\n\t\t\t\t\ty: 0,\n\t\t\t\t\tease: \"power3.out\"\n\t\t\t\t}, 0)\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"50% 100%\",\n\t\t\t\t\tend: \"100% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: 2\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\t// Capture function\n\t\tthis.capture(el)\n\t}\n\n\tcapture(el) {\n\t\tvar capture = el.querySelector(\".content\")\n\t\tif (!capture) return\n\n\t\tcapture.onclick = async () => {\n\t\t\tif (capture.generating) return\n\n\t\t\t// Informing user the process is starting\n\t\t\tcapture.generating = true\n\t\t\tdocument.body.style.cursor = \"wait\"\n\n\t\t\t// HTML to Canvas magic\n\t\t\tvar canvas = await html2canvas(capture, {\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tlogging: false,\n\t\t\t\tproxy: `${api.url}?img=`,\n\t\t\t\tuseCORS: true\n\t\t\t})\n\n\t\t\t// Download the output\n\t\t\tvar link = document.createElement(\"a\")\n\t\t\tlink.style.display = \"none\"\n\t\t\tlink.download = \"replurk\" + this.year + \"-\" + Date.now() + \".png\"\n\t\t\tlink.href = canvas.toDataURL()\n\t\t\tdocument.body.appendChild(link)\n\t\t\tlink.click()\n\t\t\tdocument.body.removeChild(link)\n\t\t\tlink.remove()\n\n\t\t\t// Reset button after 3s\n\t\t\tdocument.body.style.cursor = \"\"\n\t\t\tsetTimeout(() => {\n\t\t\t\tcapture.generating = false\n\t\t\t}, 3000)\n\t\t}\n\t}\n\n\twrapper(style, text, background) {\n\t\treturn `<div class=\"statistics statistics-wrap ${style}\">\\\n\t\t\t<div class=\"content\" ${background ? `style=\"background-images:url(${background})\"` : ``}>${text}</div>\\\n\t\t</div>`\n\t}\n\n\tdraw(style, number, text, background) {\n\t\tif (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n\t\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style, `\\\n\t\t\t\t<p>\\\n\t\t\t\t\t<span class=\"big\">${number}</span>\\\n\t\t\t\t\t<span class=\"text\">${text}</span>\\\n\t\t\t\t</p>\\\n\t\t\t`), background)\n\t\t}\n\t}\n\n\tdrawDiv(style, text) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style, '<div class=\"box\">' + text + '</div>'))\n\t}\n\n\tdrawGraph(style, number, text) {\n\t\tif (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n\t\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawgraph\", '\\\n\t\t\t\t<p>\\\n\t\t\t\t\t<span class=\"graph\"><i data-number=\"' + number + '\"></i></span>\\\n\t\t\t\t\t<span class=\"info\">' + text + '</span>\\\n\t\t\t\t</p>\\\n\t\t\t'))\n\t\t}\n\t}\n\n\tdrawImage(style, image, link, title, text, badge) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawimage\", '\\\n\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t<span class=\"avatar\"><img src=\"' + image + '\" /></span>\\\n\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t</a>\\\n\t\t'))\n\t}\n\n\tdrawHTML(style, title, html) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawhtml\", '\\\n\t\t\t<div>\\\n\t\t\t\t<div class=\"html\">' + html + '</div>\\\n\t\t\t\t<div class=\"title\">' + title + '</div>\\\n\t\t\t</div>\\\n\t\t'))\n\t}\n\n\tdrawLink(style, link, title, text, badge) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawlink\", '\\\n\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t<span>' + text + '</span>\\\n\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t</a>\\\n\t\t'))\n\t}\n\n\tdrawPost(style, id, title, text, badge) {\n\t\tvar url = \"\"\n\t\tif (id) url = 'https://plurk.com/p/' + id.toString(36)\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawpost\", '\\\n\t\t\t<div>\\\n\t\t\t\t<a href=\"' + url + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>\\\n\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t<p class=\"post\">' + text + '</p>\\\n\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t</div>\\\n\t\t'))\n\t}\n\n\tasync drawUserList(style, id, title, users) {\n\t\tvar html = \"\"\n\t\tvar max = users.length >= 5 ? 5 : users.length\n\t\tvar length = reduceMotionFilter(1)\n\n\t\tthis.drawHTML(`${style} userlist ${id}`, title, \"<span class='info'>Downloading user data</span>\")\n\t\tfor (var index = 0; index < max; index++) {\n\t\t\tlet user = users[index]\n\t\t\tlet friend = await this.friends.find(user.id)\n\t\t\tif (friend) {\n\t\t\t\tvar plurker = new element(user.id, friend, \"\", plurker => {\n\t\t\t\t\tplurker.avatar = new span()\n\t\t\t\t\t\t.class(\"avatar\")\n\t\t\t\t\t\t.html(`<img src=\"${this.friends.getAvatar(plurker.user.id)}\" />`)\n\t\t\t\t\tplurker.name = new span()\n\t\t\t\t\t\t.class(\"name\")\n\t\t\t\t\t\t.html(`${plurker.user.display_name}`)\n\t\t\t\t\tplurker.counts = new span()\n\t\t\t\t\t\t.class(\"count\")\n\t\t\t\t\t\t.html(`${user.count}`)\n\n\t\t\t\t\tplurker.el.appendChild(plurker.avatar.el)\n\t\t\t\t\tplurker.el.appendChild(plurker.name.el)\n\t\t\t\t\tplurker.el.appendChild(plurker.counts.el)\n\t\t\t\t\tplurker.el.setAttribute(\"href\", `https://plurk.com/${plurker.user.nick_name}`)\n\t\t\t\t})\n\t\t\t\tplurker.create()\n\t\t\t\thtml += plurker.el.outerHTML\n\t\t\t} else {\n\t\t\t\tmax++\n\t\t\t}\n\t\t}\n\t\tthis.el.querySelector(`.${id} .html`).innerHTML = html\n\n\t\t// Stagger animation\n\t\tif (id == 'mostinteraction' || id == 'mvp') {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n\t\t\t\t\tscale: .3,\n\t\t\t\t\topacity: 0\n\t\t\t\t}, {\n\t\t\t\t\tscale: 1,\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tease: \"elastic.out(1.2, 0.5)\",\n\t\t\t\t\tduration: length * 3 / 4,\n\t\t\t\t\tstagger: {\n\t\t\t\t\t\tamount: length / 3,\n\t\t\t\t\t\tfrom: \"end\"\n\t\t\t\t\t}\n\t\t\t\t}, 0)\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: this.el.querySelector(\".\" + id),\n\t\t\t\t\tstart: \"50% 100%\",\n\t\t\t\t\tend: \"50% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\ttoggleActions: \"play none none reverse\"\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n\t\t\t\t\ty: 50,\n\t\t\t\t\topacity: 0\n\t\t\t\t}, {\n\t\t\t\t\ty: 0,\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tduration: length,\n\t\t\t\t\tease: \"power3.out\",\n\t\t\t\t\tstagger: length / 3\n\t\t\t\t}, 0)\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: this.el.querySelector(\".\" + id),\n\t\t\t\t\tstart: \"0% 100%\",\n\t\t\t\t\tend: \"0% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\ttoggleActions: \"play none none reverse\"\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\t// For animating user chart\n\tattach(charttitle, node, max) {\n\t\tvar id = node.id\n\t\tvar chart\n\t\tvar title\n\t\tvar text\n\t\tvar content\n\t\tvar wrapper\n\t\tvar opacity = 0\n\t\tvar position = max\n\t\tvar zIndex = 0\n\t\tvar hidden = true\n\n\t\tif (node.position <= max) {\n\t\t\thidden = false\n\t\t\tzIndex = position = (node.position - 1)\n\t\t\topacity = 1\n\t\t}\n\n\t\t// Create the box\n\t\tif (!this.next.querySelector(`.${id}`)) {\n\t\t\tchart = document.createElement('div')\n\t\t\tchart.setAttribute('class', 'chart')\n\n\t\t\ttitle = document.createElement('div')\n\t\t\ttitle.classList.add('title')\n\t\t\ttitle.innerHTML = charttitle\n\n\t\t\ttext = document.createElement('div')\n\t\t\ttext.classList.add('text')\n\t\t\ttext.appendChild(chart)\n\t\t\ttext.appendChild(title)\n\n\t\t\tcontent = document.createElement('div')\n\t\t\tcontent.classList.add('content')\n\t\t\tcontent.appendChild(text)\n\n\t\t\twrapper = document.createElement('div')\n\t\t\twrapper.classList.add(\"statistics\", \"statistics-wrap\", \"attach\", id)\n\t\t\twrapper.appendChild(content)\n\n\t\t\tthis.el.insertAdjacentElement(\"beforeend\", wrapper)\n\t\t}\n\n\t\t// Add  element\n\t\tif (!hidden && !node.attached) {\n\t\t\tvar maxTop = max / (max - 1) * 100\n\n\t\t\tnode.insertTo(this.el.querySelector(`.${id} .chart`))\n\n\t\t\tgsap.set(node.el, {\n\t\t\t\ttop: maxTop + \"%\",\n\t\t\t\topacity: 0,\n\t\t\t\tzIndex: 0,\n\t\t\t})\n\t\t}\n\t\t// Update position\n\t\tif (!hidden || !node.hidden) {\n\t\t\tvar currentTop = position / (max - 1) * 100\n\t\t\tvar length = reduceMotionFilter(1)\n\n\t\t\tgsap.killTweensOf(node.el)\n\t\t\tgsap.to(node.el, {\n\t\t\t\ttop: currentTop + \"%\",\n\t\t\t\topacity: opacity,\n\t\t\t\tzIndex: zIndex,\n\t\t\t\tduration: length / 2,\n\t\t\t\tease: \"power3.out\",\n\t\t\t\tonComplete: function () {\n\t\t\t\t\tif (hidden) {\n\t\t\t\t\t\tnode.destroy()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tnode.hidden = hidden\n\t\t}\n\n\t\tnode.update()\n\t}\n\n\tasync drawAll(plurks) {\n\t\tvar response_percentage = Math.round((this.plurks_count - this.noresponse_count) / this.plurks_count * 100)\n\n\t\tthis.most.responses.draw(plurks)\n\t\tthis.drawGraph('center graph percentage', response_percentage, 'Around <i>' + response_percentage + '%</i> of my plurks got <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> responses ' + ((response_percentage <= 50) ? '<img src=\"https://api.iconify.design/fluent-emoji:crying-face.svg\" />' : '<img src=\"https://api.iconify.design/fluent-emoji:star-struck.svg\" />'))\n\n\t\tthis.draw('recievereplurk', this.replurker_count, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + plural(this.replurker_count, 'replurk') + '</i>')\n\t\tthis.most.replurk.draw(plurks)\n\n\t\tthis.most.favorite.draw(plurks)\n\t\tthis.draw('recievelove', this.favourite_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + plural(this.favourite_count, 'love') + '</i>')\n\n\t\tthis.draw('privateplurk', this.private_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:lip.svg\" /> ' + plural(this.private_count, 'private plurk') + '</i>')\n\t\tthis.draw('whisper', this.whispers_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-in-clouds.svg\" /> ' + plural(this.whispers_count, 'whisper') + '</i>')\n\t\tthis.draw('porn', this.porn_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg\" /> ' + plural(this.porn_count, 'adult plurk') + '</i>')\n\n\t\tthis.draw('span2 responsecount', `${this.plurks_count} &rarr; ${this.response_count}`, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(this.response_count, 'response') + '</i> from <i>' + plural(this.plurks_count, 'plurk') + '</i>')\n\t\tthis.draw('center coins', this.coins_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:coin.svg\" /> ' + plural(this.coins_count, 'coin') + '</i>')\n\n\t\tif (this.favorite_list.length > 0) this.drawUserList(\"users\", \"loved\", 'These Plurkers <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Loved</i> My Posts', this.favorite_list.sort(this.most.sort))\n\t\tif (this.replurker_list.length > 0) this.drawUserList(\"users\", \"replurked\", 'These Plurkers likes to <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Replurked</i> My Posts', this.replurker_list.sort(this.most.sort))\n\t}\n}\n\nexport default statistics","\"use strict\";\n\nimport { gsap } from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js'\nimport api from \"./api.js\"\nimport scroll from \"../helpers/scroll.js\"\nimport animate from \"../helpers/animate.js\"\nimport { _q, _qAll, plural, monthNames, reduceMotionFilter } from '../helpers/helper.js'\n\nimport friends from \"./friends.js\"\nimport loading from './loading.js'\nimport scrolls from './scrolls.js'\nimport browser from './browser.js'\nimport statistics from \"./statistics.js\"\n\nclass replurk {\n\tconstructor(year) {\n\t\t// Draw in which element?\n\t\tthis.next = document.createElement('div');\n\t\t// Plurks array\n\t\tthis.plurks = [];\n\t\t// Plurker profile object\n\t\tthis.me = {}\n\t\t// Friends object\n\t\tthis.friends = new friends()\n\t\t// Statistics plurker object renderer\n\t\tthis.statistics = new statistics()\n\t\t// Loading object\n\t\tthis.loading = new loading()\n\t\t// Scrolling animation\n\t\tthis.scrolls = new scrolls(this.next)\n\n\t\t// Which year?\n\t\tthis.year = year;\n\t\tthis.startDate = this.year + '-10-29T09:00:00';\n\t\tthis.endDate = new Date((this.year - 1) + '-10-29T09:00:00');\n\t\tthis.days = 60 * 60 * 24 * 1000;\n\t\tthis.fulldays = 365;\n\t}\n\n\t// Show/hide Animations\n\t// Login Pages\n\tshowLoginPage(tl) {\n\t\tvar next = this.next;\n\t\tvar length = reduceMotionFilter(1);\n\n\t\tbrowser.set(\"green\", 1);\n\t\ttl.fromTo(next.querySelectorAll(\"#permission\"), {\n\t\t\tposition: \"fixed\",\n\t\t\tdisplay: \"\",\n\t\t\topacity: 0,\n\t\t\ttop: 0\n\t\t}, {\n\t\t\topacity: 1,\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\"\n\t\t});\n\t\ttl.fromTo(next.querySelectorAll(\"#permission .bgtext *\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tstagger: length / 5,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\",\n\t\t\tonComplete: () => {\n\t\t\t\tgsap.set(next.querySelectorAll(\"#permission\"), {\n\t\t\t\t\tposition: \"\",\n\t\t\t\t\ttop: \"\"\n\t\t\t\t});\n\t\t\t}\n\t\t}, \">-\" + (length / 2));\n\n\t\treturn tl;\n\t}\n\thideLoginPage(tl) {\n\t\tvar next = this.next;\n\t\tvar length = reduceMotionFilter(1);\n\n\t\ttl.set(next.querySelectorAll(\"#permission\"), {\n\t\t\tposition: \"fixed\",\n\t\t\ttop: 0,\n\t\t});\n\t\ttl.fromTo(next.querySelectorAll(\"#permission .bgtext *, #permission form\"), {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t}, {\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t\tstagger: {\n\t\t\t\tfrom: \"end\",\n\t\t\t\tamount: length / 5\n\t\t\t},\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\",\n\t\t\tonComplete: () => {\n\t\t\t\tbrowser.set(\"yellow\");\n\t\t\t}\n\t\t});\n\t\ttl.fromTo(next.querySelectorAll(\"#permission\"), {\n\t\t\topacity: 1\n\t\t}, {\n\t\t\topacity: 0,\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\",\n\t\t\tonComplete: () => {\n\t\t\t\tgsap.set(next.querySelectorAll(\"#permission\"), {\n\t\t\t\t\tposition: \"\",\n\t\t\t\t\tdisplay: \"none\",\n\t\t\t\t\ttop: \"\"\n\t\t\t\t}, \">\");\n\t\t\t}\n\t\t}, \">-\" + (length / 4));\n\n\t\treturn tl;\n\t}\n\t// Statistic Pages\n\tshowStatisticPages() {\n\t\treturn new Promise(resolve => {\n\t\t\tvar next = this.next;\n\t\t\tvar length = reduceMotionFilter(1);\n\t\t\tvar tl = gsap.timeline();\n\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tduration: length,\n\t\t\t\tonStart: () => browser.set(\"green\", .5)\n\t\t\t}, length / 4);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext > *\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: length / 5,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, length / 2);\n\t\t\ttl.fromTo(next.querySelectorAll(\" #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: length / 5,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, length / 2);\n\t\t\ttl.fromTo(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length / 2,\n\t\t\t\tonComplete: () => resolve()\n\t\t\t}, length / 2);\n\t\t});\n\t}\n\thideStatisticPages() {\n\t\treturn new Promise(async resolve => {\n\t\t\tvar next = this.next;\n\t\t\tvar length = reduceMotionFilter(1);\n\t\t\tvar tl = gsap.timeline();\n\n\t\t\tawait animate.top(next);\n\n\t\t\ttl.fromTo(next.querySelectorAll(\".footer > *, #hello .bgtext > *, #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0\n\t\t\t}, {\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: {\n\t\t\t\t\tfrom: \"end\",\n\t\t\t\t\tamount: length / 5\n\t\t\t\t},\n\t\t\t\tease: \"power3.in\"\n\t\t\t}, length / 5);\n\t\t\ttl.set(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n\t\t\t\topacity: 0\n\t\t\t}, length / 2);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello\"), {\n\t\t\t\topacity: 1\n\t\t\t}, {\n\t\t\t\topacity: 0,\n\t\t\t\tduration: length,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tgsap.set(next.querySelectorAll(\".grant\"), { display: \"none\" });\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}, length / 2);\n\t\t});\n\t}\n\n\t// Access logic\n\t// Login messages\n\tmessage(message, quick) {\n\t\tvar next = this.next;\n\n\t\tvar loginmessage = next.querySelector(\"#login-message\");\n\n\t\tif (quick) {\n\t\t\tloginmessage.innerHTML = message;\n\t\t} else {\n\t\t\tgsap.to(loginmessage, {\n\t\t\t\topacity: 0,\n\t\t\t\tonComplete: function () {\n\t\t\t\t\tloginmessage.innerHTML = message;\n\t\t\t\t\tgsap.to(loginmessage, {\n\t\t\t\t\t\topacity: 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\t// Check login status\n\tasync login(clear) {\n\t\tvar next = this.next;\n\n\t\tthis.me = { id: 0 }\n\t\tthis.plurks = [];\n\n\t\tscroll.destroy();\n\n\t\twindow.scrollTo(0, 0);\n\t\tbrowser.set(\"yellow\");\n\n\t\t// Scroll animation menu and logout\n\t\tthis.scrolls.menu();\n\n\t\t// Check is server have open session\n\t\tvar tl = gsap.timeline();\n\t\ttl.set(next.querySelector(\"#hello .arrow-big\"), {\n\t\t\topacity: 0\n\t\t});\n\n\t\tlet data = await api.call(\"?\");\n\t\tvar interval = null;\n\t\tif (data.success) {\n\t\t\tthis.me = data.message\n\t\t\tthis.friends = new friends()\n\t\t\tthis.statistics = new statistics(next, this.me, this.friends, this.year)\n\n\t\t\t// Initial Plurk statistics\n\t\t\tawait this.displayPlurkerData();\n\n\t\t\t// Display the rest of the statistics\n\t\t\tthis.displayStatistics();\n\n\t\t\t// Scroll top top\n\t\t\tawait animate.top(next);\n\n\t\t\t// Hide login page\n\t\t\tif (clear) next.querySelector(\"#permission\").style.display = \"none\";\n\t\t\telse tl = this.hideLoginPage(tl);\n\n\t\t\t// Show statistic pages\n\t\t\tawait this.showStatisticPages(tl);\n\n\t\t\t// Add logout event\n\t\t\tnext.querySelector(\"#logout\").onclick = () => this.logout();\n\n\t\t\t// Scroll animate statistics\n\t\t\tthis.scrolls.statistics();\n\t\t\t// Scroll browser bar\n\t\t\tthis.scrolls.browserBar();\n\t\t} else {\n\t\t\t// Hide statistic pages\n\t\t\tif (clear) next.querySelectorAll(\".grant\").forEach(function (el) { el.style.display = \"none\"; });\n\t\t\t// Show login page\n\t\t\tthis.showLoginPage(tl);\n\t\t\t// Request token\n\t\t\tthis.token();\n\n\t\t\t// Scroll animation permission section\n\t\t\tthis.scrolls.permisions();\n\t\t\t// Scroll browser bar\n\t\t\tthis.scrolls.browserBar(false);\n\n\t\t\t// Automatic login\n\t\t\tinterval = setInterval(async () => {\n\t\t\t\tvar data = await api.call(\"?\");\n\n\t\t\t\tif (data.success) {\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tthis.login();\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\tscroll.refresh();\n\n\t\t// Snap\n\t\tnext.querySelectorAll(\"section.snap\").forEach(el => scroll.snap(el));\n\t\tnext.querySelectorAll(\"section.snap-bottom\").forEach(el => scroll.snap(el, \"bottom\"));\n\t}\n\t// Logout\n\tasync logout() {\n\t\tvar tl = gsap.timeline();\n\n\t\tapi.abort();\n\n\t\t// Hide statistic pages\n\t\tawait this.hideStatisticPages(tl);\n\n\t\t// Logout\n\t\tawait api.call(\"?fetch=logout\");\n\t\tthis.statistics.clear();\n\n\t\t// Disconnect any api connection\n\t\tapi.clear();\n\n\t\t// Display login\n\t\tthis.login();\n\n\t\tscroll.refresh();\n\t}\n\t// Request token\n\tasync token(text) {\n\t\tvar next = this.next;\n\t\tvar length = reduceMotionFilter(1);\n\t\tvar tokenlink = next.querySelector(\"#tokenurl\");\n\t\ttokenlink.textContent = \"Connecting Plurk...\";\n\n\t\tvar tl = gsap.timeline();\n\t\ttl.fromTo(next.querySelectorAll(\"#permission form\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\"\n\t\t}, length);\n\t\ttl.fromTo(next.querySelectorAll(\"#permission h1, #permission li\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 50,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tstagger: length / 10,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\"\n\t\t}, length);\n\n\t\tapi.call(\"?request=token\").then(data => {\n\t\t\tif (text) {\n\t\t\t\tthis.message(text);\n\t\t\t} else {\n\t\t\t\ttokenlink.textContent = \"Grant Access\";\n\t\t\t\ttokenlink.setAttribute(\"href\", api.url + \"?redirect=\" + data.message.url);\n\t\t\t}\n\t\t}, () => {\n\t\t\tthis.message(\"Error when requesting verification from Plurk, please reload your browser again.\");\n\t\t});\n\n\t\tif (!text) next.querySelector(\"#permission form\").style.display = \"none\";\n\t}\n\t// Display LocalStorage stats\n\tinfo() {\n\t\tfunction getStorageSize() {\n\t\t\tvar totalBytes = 0;\n\n\t\t\tfor (var key in localStorage) {\n\t\t\t\tif (localStorage.hasOwnProperty(key)) {\n\t\t\t\t\tvar itemValue = localStorage.getItem(key);\n\t\t\t\t\ttotalBytes += itemValue.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Convert bytes to Megabytes\n\t\t\tvar totalMegabytes = Math.round((totalBytes / 1024 / 1024) * 100) / 100;\n\n\t\t\treturn totalMegabytes;\n\t\t}\n\n\t\t// Usage\n\t\tvar storageSize = getStorageSize();\n\t\tconsole.info('Storage Size: ' + storageSize + ' MB');\n\t}\n\n\t// Rendering statistics\n\t// Display current Plurker data\n\tasync displayPlurkerData() {\n\t\tvar plurker = this.me;\n\t\tvar next = this.next;\n\t\tvar extra = \"\";\n\t\tvar length = reduceMotionFilter(1);\n\n\t\t// plurks_count\n\t\tvar days = (plurker.anniversary.years * 365) + plurker.anniversary.days;\n\t\tvar responses = Math.round(plurker.response_count / days);\n\n\t\tnext.querySelector(\"#hello .thumbs\").innerHTML = \"<img src='\" + plurker.avatar_big + \"' />\";\n\t\tif (this.year == 2021) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>If \" + this.year + \" have been a rough year you, hopefully RePlurk will cheer you by bringing some good memories</p>\";\n\t\telse if (this.year == 2022) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>It's 2020 v2, and this is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\t\telse next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>This is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\n\t\t// Draw statistic\n\t\tthis.statistics.title('All Time', 'alltime');\n\t\tif (plurker.anniversary.years && plurker.anniversary.days) {\n\t\t\tthis.statistics.draw('center posted', Math.round(plurker.plurks_count / days), 'I posted around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(Math.round(plurker.plurks_count / days), \"plurk\") + \" per day</i>\");\n\n\t\t\t// Responses\n\t\t\tvar oneday = 16;\n\t\t\tif (responses <= oneday) extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday / responses), \"hour\") + '</i>';\n\t\t\telse extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday * 60 / responses), \"minute\") + '</i>';\n\t\t\tthis.statistics.draw('span2 center responded', responses, 'I responded around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(responses, \"time\") + \"</i> per day. \" + extra + \" when I'm not sleeping\");\n\n\t\t\tvar join = new Date(plurker.join_date)\n\t\t\tthis.statistics.draw('center anniversary', \"<strong><i>\" + monthNames[join.getMonth()] + \"</i> <i>\" + join.getFullYear() + \"</i></strong> <em>\" + join.getDate() + \"</em>\", \"I joined Plurk <i>\" + plural(plurker.anniversary.years, \"year\") + \"</i> and <i>\" + plural(plurker.anniversary.days, \"day\") + \"</i> ago\");\n\t\t\tthis.statistics.draw('center badges', plurker.badges.length, \"I have <i><img src='https://api.iconify.design/fluent-emoji:shield.svg' /> \" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n\t\t} else {\n\t\t\tthis.statistics.draw('', '-', \"There is no data in my timeline\");\n\t\t\tthis.statistics.draw('', plurker.badges.length, \"But at least I have <i>\" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n\t\t}\n\n\t\t// Scroll animation hello section\n\t\tscroll.push(tl => {\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .text, #hello .thumbs\"), {\n\t\t\t\ty: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -3 / 4,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext sup\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * -1 / 10,\n\t\t\t\trotation: -10,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext sub\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * 1 / 10,\n\t\t\t\trotation: 10,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .arrow-big\"), {\n\t\t\t\ty: 0,\n\t\t\t\topacity: 1\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * 1 / 4,\n\t\t\t\topacity: 0,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length / 4,\n\t\t\t}, 0);\n\t\t\treturn tl;\n\t\t}, tl => ScrollTrigger.create({\n\t\t\ttrigger: next.querySelectorAll(\"#hello\"),\n\t\t\tstart: \"0 0\",\n\t\t\tend: \"100% 0\",\n\t\t\tanimation: tl,\n\t\t\tscrub: true\n\t\t}));\n\n\t\tscroll.refresh();\n\t}\n\t// Display statistics\n\tasync displayStatistics() {\n\t\tthis.statistics.title('This Year', 'thisyear');\n\t\tthis.statistics.draw(\"statistics-loading thisyearloading\", \"\", \"<i class='month'>Data from December</i>1 of 2. Loading \" + this.year + \" timeline. It can take up to 1 minute.\");\n\n\t\tthis.loading = new loading(this.next);\n\t\tthis.loading.loop(this.fulldays);\n\n\t\t// Load loop timeline\n\t\tvar getTimeline = async (offset) => {\n\t\t\toffset = (!offset) ? \"\" : \"&offset=\" + offset;\n\n\t\t\tvar data = await api.call(\"?fetch=plurk&filter=my\" + offset, 1);\n\t\t\tif (data.success) {\n\t\t\t\tthis.friends.add(data.message.plurk_users);\n\t\t\t\tthis.plurks = this.plurks.concat(data.message.plurks);\n\n\t\t\t\tif (data.message.plurks.length > 0) {\n\t\t\t\t\tvar lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\n\t\t\t\t\tif (lastposted >= this.endDate) {\n\t\t\t\t\t\tthis.loading.update(\"Data from \" + monthNames[lastposted.getMonth()] + \" \" + lastposted.getFullYear(), this.fulldays - Math.floor((lastposted - this.endDate) / this.days));\n\n\t\t\t\t\t\t// Load next plurks\n\t\t\t\t\t\tawait getTimeline(data.message.offset);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twhile (lastposted < this.endDate && this.plurks.length > 1) {\n\t\t\t\t\t\t\tthis.plurks.pop();\n\t\t\t\t\t\t\tlastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait this.loading.forcedone();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait this.loading.forcedone();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.logout();\n\t\t\t}\n\t\t}\n\t\tawait getTimeline(this.startDate);\n\n\t\t// When loading done\n\t\tvar largest_poll_result = 0;\n\t\tif (this.plurks.length > 1) {\n\t\t\t// Count user statistics\n\t\t\tthis.statistics.plurks_count = 0;\n\t\t\tthis.plurks.forEach(plurk => {\n\t\t\t\t// Calculate the statistics\n\t\t\t\tif (plurk.responded) this.statistics.responded_count++;\n\t\t\t\tif (plurk.owner_id == this.me.id) {\n\t\t\t\t\tthis.statistics.plurks_count++;\n\t\t\t\t\tthis.statistics.replurker_count += plurk.replurkers.length;\n\t\t\t\t\tthis.statistics.replurker_list = this.statistics.listCount(this.statistics.replurker_list, plurk.replurkers);\n\t\t\t\t\tthis.statistics.favourite_count += plurk.favorers.length;\n\t\t\t\t\tthis.statistics.favorite_list = this.statistics.listCount(this.statistics.favorite_list, plurk.favorers);\n\t\t\t\t\tif (plurk.anonymous) this.statistics.whispers_count++;\n\t\t\t\t\tif (plurk.coins) this.statistics.coins_count += plurk.coins;\n\t\t\t\t\tif (plurk.porn) this.statistics.porn_count++;\n\t\t\t\t\tif (!plurk.response_count) this.statistics.noresponse_count++;\n\t\t\t\t\tif (plurk.plurk_type == 3) this.statistics.private_count++;\n\t\t\t\t\tthis.statistics.response_count += plurk.response_count;\n\n\t\t\t\t\tif (plurk.content_raw.includes(\"instagram.com\")) this.statistics.instagrammer_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"facebook.com\")) this.statistics.facebooker_count++;\n\t\t\t\t\telse if (plurk.content_raw.includes(\"fb.watch\")) this.statistics.facebooker_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"twitter.com\")) this.statistics.twitterer_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"reddit.com\")) this.statistics.redditor_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"tiktok.com\")) this.statistics.tiktoker_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"imgur.com\")) this.statistics.imgurer_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"youtube.com\")) this.statistics.youtuber_count++;\n\n\t\t\t\t\t// Calculate polls\n\t\t\t\t\tif (plurk.with_poll) {\n\t\t\t\t\t\tvar response_count = plurk.poll.response.response_count;\n\t\t\t\t\t\tthis.statistics.poll_count++;\n\t\t\t\t\t\tthis.statistics.poll_responder_count += response_count;\n\n\t\t\t\t\t\tif (largest_poll_result < response_count) {\n\t\t\t\t\t\t\tlargest_poll_result = response_count;\n\t\t\t\t\t\t\tthis.statistics.poll_popular_plurk = plurk;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (plurk.responded) this.statistics.responded_other_count++;\n\t\t\t});\n\n\t\t\t// Sort based on date\n\t\t\tthis.plurks.sort((a, b) => new Date(b.posted) - new Date(a.posted));\n\n\t\t\t// Draw statistics\n\t\t\ttry {\n\t\t\t\tawait this.statistics.drawAll(this.plurks);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.info(\"Error while counting statistics\", error);\n\t\t\t}\n\n\t\t\t// Display extended statistics\n\t\t\tthis.displayExtendedStatistics();\n\t\t} else {\n\t\t\tif (this.plurks[0]) {\n\t\t\t\tvar date = new Date(plurk[0].posted);\n\t\t\t\tthis.statistics.inactive.draw(plurk[0], date.getFullYear());\n\t\t\t}\n\t\t\telse this.statistics.inactive.empty();\n\t\t}\n\n\t\tscroll.refresh();\n\t}\n\t// Display extended statistics\n\tasync displayExtendedStatistics() {\n\t\t// Deeper user statistics\n\t\tthis.statistics.title('Dig Deeper', 'digdeeper');\n\t\tthis.statistics.draw(\"statistics-loading digdeeperloading\", \"\", \"<i class='month'>Data from \" + this.year + \"</i> 2 of 2. Loading all responses. <small>If the loading seems to stop, refresh your browser tab to resume your download. Closing your browser tab will clear all downloaded data.</small>\");\n\n\t\t// Load each post responses and calculate statistics\n\t\tthis.loading = new loading(this.next);\n\t\tthis.loading.loop(this.plurks.length);\n\n\t\t// Get the responses for each plurks in parallel\n\t\tthis.plurks.sort((a, b) => new Date(a.posted) < new Date(b.posted));\n\t\tfor (var plurk of this.plurks) {\n\t\t\tvar date = new Date(plurk.posted);\n\t\t\tthis.loading.update(\"Data from \" + monthNames[date.getMonth()] + \" \" + date.getFullYear());\n\n\t\t\t// Count all\n\t\t\tawait this.statistics.most.countAll(plurk);\n\n\t\t\t// Count responses\n\t\t\tif (plurk.response_count > 0 && (plurk.responded || plurk.owner_id == this.me.id)) {\n\t\t\t\tvar result = await api.call(\"?fetch=response&plurk_ids=\" + plurk.plurk_id);\n\t\t\t\tif (result.success) for (var message of result.message) {\n\t\t\t\t\t// Add friends from response lists\n\t\t\t\t\tthis.friends.add(message.friends);\n\n\t\t\t\t\t// Count the rest of statistics\n\t\t\t\t\tfor (var response of message.responses) {\n\t\t\t\t\t\t// Find and count all responders\n\t\t\t\t\t\tawait this.statistics.most.responders.count(response);\n\t\t\t\t\t\tthis.statistics.most.interaction.count(response);\n\t\t\t\t\t\tthis.statistics.most.mvp.count(response, \"response\");\n\t\t\t\t\t\t// Count all\n\t\t\t\t\t\tawait this.statistics.most.countAll(response);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.logout();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Display How Many Links\n\t\tthis.statistics.most.links.drawLinks();\n\t\t// Display How Many Pictures\n\t\tthis.statistics.most.links.drawPics();\n\n\t\t// Draw Results\n\t\t// Display Most Responder\n\t\t// this.statistics.most.responders.draw();\n\n\t\t// Display Most Interaction\n\t\tthis.statistics.most.interaction.draw();\n\n\t\t// Display Most Mentioned by me\n\t\t// this.statistics.most.mentions.draw();\n\n\t\t// Display How Many Words-Characters\n\t\tthis.statistics.most.types.draw();\n\n\t\t// Display Most hashtags by me\n\t\tthis.statistics.most.hashtags.draw();\n\n\t\t// Display Most My Emoticons\n\t\tthis.statistics.most.myemoticons.draw();\n\n\t\t// Display MVP\n\t\tthis.statistics.replurker_list.forEach(value => {\n\t\t\tthis.statistics.most.mvp.count({ user_id: value.id, count: value.count }, \"replurk\");\n\t\t});\n\t\tthis.statistics.favorite_list.forEach(value => {\n\t\t\tthis.statistics.most.mvp.count({ user_id: value.id, count: value.count }, \"favorite\");\n\t\t});\n\t\tthis.statistics.most.mvp.draw();\n\n\t\t// Replurk Badges\n\t\tvar gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Leader\";\n\t\tif (this.me.gender == 1) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> King\";\n\t\tif (this.me.gender == 0) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Queen\";\n\n\t\tvar tiktok = \"<img src='https://api.iconify.design/fluent-emoji:mirror-ball.svg' />\";\n\t\tif (this.me.gender == 1) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:man-dancing-medium-dark-skin-tone.svg' />\";\n\t\tif (this.me.gender == 0) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:woman-dancing-medium-dark-skin-tone.svg' />\";\n\n\t\tvar facebook = \"<img src='https://api.iconify.design/fluent-emoji:older-person.svg' />\";\n\t\tif (this.me.gender == 1) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-man.svg' />\";\n\t\tif (this.me.gender == 0) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-woman.svg' />\";\n\n\t\tvar plurker = \"<img src='https://api.iconify.design/fluent-emoji:person-bowing.svg' />\";\n\t\tif (this.me.gender == 1) plurker = \"<img src='https://api.iconify.design/fluent-emoji:man-bowing.svg' />\";\n\t\tif (this.me.gender == 0) plurker = \"<img src='https://api.iconify.design/fluent-emoji:woman-bowing.svg' />\";\n\n\t\tthis.statistics.title('RePlurk Badges', 'replurkbadges');\n\t\tthis.statistics.body(`\\\n\t\t\t<h4>What are RePlurk Badges consist of?</h4>\\\n\t\t\t<p>They are badges based on your activities in Plurk. Currently there are 16 badges in total, for activities such as:</p>\\\n\t\t\t<ol>\\\n\t\t\t\t<li>Creating lots of polls (Polling ${gender})</li>\\\n\t\t\t\t<li>Receiving lots of coins (Plurk Coins Billionaire)</li>\\\n\t\t\t\t<li>Writing lots of posts (Novelist and Keyboard Warrior)</li>\\\n\t\t\t\t<li>Sharing lots of pictures and links (Meme Lord & Missing Link)</li>\\\n\t\t\t\t<li>Sharing social medias urls (there are 7 badges)</li>\\\n\t\t\t\t<li>Posting lots of adult posts (Adult-er)</li>\\\n\t\t\t\t<li>Getting lots of replurks (Trendsetter)</li>\\\n\t\t\t\t<li>and, Constantly posting in Plurk almost everyday (Active Plurker)</li>\\\n\t\t\t</ol>\\\n\t\t\t`, `replurkbadges description`);\n\t\tif (this.statistics.poll_count >= 5) this.statistics.draw('span1 badges pollbadges', \"<img src='https://api.iconify.design/fluent-emoji:ballot-box-with-ballot.svg' />\", \"<strong>Polling \" + gender + \"</strong>\");\n\t\tif (this.statistics.coins_count >= 5) this.statistics.draw('span1 badges coinbadges', \"<img src='https://api.iconify.design/fluent-emoji:coin.svg' />\", \"<strong>Plurk Coins Billionaire</strong>\");\n\t\tif (this.statistics.most.types.words >= 50000) this.statistics.draw('span1 badges novelistbadges', \"<img src='https://api.iconify.design/fluent-emoji:orange-book.svg' />\", \"<strong>Novelist</strong>\");\n\t\tif (this.statistics.most.types.chars >= 1000000) this.statistics.draw('span1 badges keyboardbadges', \"<img src='https://api.iconify.design/fluent-emoji:keyboard.svg' />\", \"<strong>Keyboard Warrior</strong>\");\n\t\tif (this.statistics.most.links.pics.length >= 356) this.statistics.draw('span1 badges memebadges', \"<img src='https://api.iconify.design/fluent-emoji:cat.svg' />\", \"<strong>Meme Lord</strong>\");\n\t\tif (this.statistics.most.links.links.length >= 356 / 2) this.statistics.draw('span1 badges missingbadges', \"<img src='https://api.iconify.design/fluent-emoji:orangutan.svg' />\", \"<strong>The Missing Link</strong>\");\n\t\tif (this.statistics.instagrammer_count >= 10) this.statistics.draw('span1 badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:camera.svg' />\", \"<strong>Instagrammer</strong>\");\n\t\tif (this.statistics.facebooker_count >= 10) this.statistics.draw('span1 badges socmedbadges', facebook, \"<strong>Facebooker</strong>\");\n\t\tif (this.statistics.twitterer_count >= 10) this.statistics.draw('span1 badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:hatching-chick.svg' />\", \"<strong>The Real Chief Twit</strong>\");\n\t\tif (this.statistics.redditor_count >= 10) this.statistics.draw('span1 badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:robot.svg' />\", \"<strong>/r</strong>\");\n\t\tif (this.statistics.tiktoker_count >= 10) this.statistics.draw('span1 badges socmedbadges', tiktok, \"<strong>Tiktoker</strong>\");\n\t\tif (this.statistics.imgurer_count >= 10) this.statistics.draw('span1 badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:framed-picture.svg' />\", \"<strong>Imgur-er</strong>\");\n\t\tif (this.statistics.youtuber_count >= 10) this.statistics.draw('span1 badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:movie-camera.svg' />\", \"<strong>Youtuber <img src='https://api.iconify.design/fluent-emoji:sleepy-face.svg' /></strong>\");\n\t\tif (this.statistics.porn_count >= 10) this.statistics.draw('span1 badges adultbadges', \"<img src='https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg' />\", \"<strong>Adult-er</strong>\");\n\t\tif (this.statistics.replurker_count >= 50) this.statistics.draw('span1 badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:trophy.svg' />\", \"<strong>Trendsetter</strong>\");\n\t\tif (this.statistics.plurks_count >= 356 * 1.5) this.statistics.draw('span1 badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:military-medal.svg' />\", \"<strong>Active Plurker \" + plurker + \"</strong>\");\n\n\t\tthis.info();\n\n\t\tscroll.refresh();\n\t}\n\n\t// Main entry\n\t// Run this to start the API\n\trun(el) {\n\t\treturn new Promise(resolve => {\n\t\t\tvar length = reduceMotionFilter(1);\n\t\t\tthis.next = el;\n\t\t\tbrowser.set(\"yellow\");\n\n\t\t\t// Run the login\n\t\t\tgsap.fromTo(this.next.querySelectorAll('#credits'), {\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tonComplete: async () => {\n\t\t\t\t\t// Change color\n\t\t\t\t\tbrowser.set(\"yellow\", 0);\n\n\t\t\t\t\t// Display login\n\t\t\t\t\tawait this.login(true);\n\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default replurk;"],"names":["constructor","this","data","unavailable","add","new_friends","Object","assign","find","user_id","findIndex","el","result","api","call","success","temp","message","user_info","id","push","findByUsername","nick_name","index","toLowerCase","getAvatar","has_profile_image","avatar","getAvatarByUsername","user_name","next","count","prev_count","counts","clean","parent","isComplete","draw","item","Promise","resolve","length","querySelector","statistics","year","load","progress","gsap","to","Math","round","snap","ease","duration","onUpdate","innerHTML","onComplete","async","done","loop","update","month","value","fakeupdate","forcedone","opacity","width","height","padding","margin","overflow","remove","refresh","credits","tl","fromTo","querySelectorAll","y","window","innerHeight","stagger","from","amount","ScrollTrigger","create","trigger","start","end","animation","scrub","permisions","x","rotation","menu","el1","el2","direction","killTweensOf","browserBar","login","onLeave","browser","set","onEnterBack","onEnter","document","createElement","classname","classList","html","text","textContent","oldcolor","randomcolors","allColorArrays","arrayIndex","floor","Date","now","colors","getRandomColor","color","utils","shuffle","slice","pop","avatarurl","customcreate","user","attached","hidden","position","created","class","setAttribute","name","display_name","appendChild","insertTo","element","insertAdjacentElement","destroy","me","friends","responders","response","sort","i","attach","drawImage","mentions","dataAll","content","findregex","replace","idx","undefined","plurker","myemoticons","drawHTML","hashtags","links","pics","replurk","loved","match","includes","pic","split","url","link","drawLinks","max","toString","drawDiv","drawPics","types","words","chars","responses","a","b","response_count","posts","post","owner_id","plurk_type","drawPost","plurk_id","posted","replurkers_count","favorite","favorite_count","interaction","multiplier","content_raw","drawUserList","console","info","mvp","type","error","regex","storage","countAll","datediff","empty","whispers_count","poll_count","poll_responder_count","coins_count","porn_count","noresponse_count","private_count","replurker_count","replurker_list","favourite_count","favorite_list","responded_count","responded_other_count","responded_other_list","plurks_count","most","inactive","MutationObserver","mutationsList","forEach","mutation","addedNodes","afterDraw","observe","attributes","childList","subtree","clear","listCount","list","collection","title","style","loading","span","insertAdjacentHTML","body","background","screen","matchMedia","children","number","Number","toggleActions","getAttribute","capture","onclick","generating","cursor","canvas","html2canvas","backgroundColor","logging","proxy","useCORS","display","download","href","toDataURL","click","removeChild","setTimeout","wrapper","drawGraph","image","badge","drawLink","users","friend","outerHTML","scale","charttitle","node","chart","zIndex","maxTop","top","currentTop","drawAll","plurks","response_percentage","scrolls","startDate","endDate","days","fulldays","showLoginPage","hideLoginPage","showStatisticPages","timeline","onStart","hideStatisticPages","animate","quick","loginmessage","scrollTo","interval","displayPlurkerData","displayStatistics","logout","token","setInterval","clearInterval","abort","tokenlink","then","storageSize","totalBytes","key","localStorage","hasOwnProperty","getItem","getStorageSize","extra","anniversary","years","avatar_big","oneday","join","join_date","getMonth","getFullYear","getDate","badges","getTimeline","offset","plurk_users","concat","lastposted","largest_poll_result","plurk","responded","replurkers","favorers","anonymous","coins","porn","instagrammer_count","facebooker_count","twitterer_count","redditor_count","tiktoker_count","imgurer_count","youtuber_count","with_poll","poll","poll_popular_plurk","displayExtendedStatistics","date","gender","tiktok","facebook","run"],"sourceRoot":""}