{"version":3,"file":"21.bundle.js","mappings":"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","sources":["webpack://dwaan/./src/js/replurk/friends.js","webpack://dwaan/./src/js/replurk/span.js","webpack://dwaan/./src/js/replurk/colors.js","webpack://dwaan/./src/js/replurk/element.js","webpack://dwaan/./src/js/replurk/statistics.js","webpack://dwaan/./src/js/replurk/main.js"],"sourcesContent":["\"use strict\"\n\nimport api from \"../helpers/api.js\"\n\n/*\n\tFriends object spesification:\n\n\t1. data: contains all the friends collection data\n\t2. add(data): add friend to friends collection data\n\t3. find(user_id): return friend data based on their id\n\t4. findByUsername(nick_name): return friend data based on their nick name\n\t5. getAvatar(user_id): return avatar url based on their id for from friends collection data\n\t6. getAvatarByUsername(user_id): return avatar url based on their nick name for from friends collection data\n*/\n\nclass friends {\n\tconstructor() {\n\t\tthis.data = {}\n\t\tthis.unavailable = []\n\t}\n\n\t/**\n\t * Add JSON object as a friends data\n\t *\n\t * ```js\n\t * friends.add({});\n\t * ```\n\t *\n\t * @param {new_friends}: New friends JSON from /APP/Profile/getPublicProfile\n\t * @memberof friends\n\t * @link https://www.plurk.com/API/2/\n\t */\n\tadd(new_friends) {\n\t\tObject.assign(this.data, new_friends)\n\t}\n\n\tasync find(user_id) {\n\t\tif (this.unavailable.findIndex(el => el == user_id) >= 0) return false\n\n\t\tif (this.data && this.data[user_id]) {\n\t\t\treturn this.data[user_id]\n\t\t} else {\n\t\t\tvar result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&user_id=\" + user_id)\n\n\t\t\tif (result.success) {\n\t\t\t\tvar temp = {}\n\t\t\t\ttemp[result.message.user_info.id] = result.message.user_info\n\t\t\t\tthis.add(temp)\n\t\t\t\treturn result.message.user_info\n\t\t\t} else {\n\t\t\t\tthis.unavailable.push(user_id)\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\n\tasync findByUsername(nick_name) {\n\t\tvar user_id = false\n\n\t\tif (this.unavailable.findIndex(el => el == nick_name) >= 0) return false\n\n\t\tfor (var index in this.data) {\n\t\t\tif (this.data[index].nick_name.toLowerCase() == nick_name.toLowerCase()) {\n\t\t\t\tuser_id = index\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif (user_id) {\n\t\t\treturn this.data[user_id]\n\t\t} else {\n\t\t\tvar result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&nick_name=\" + nick_name)\n\n\t\t\tif (result.success) {\n\t\t\t\tvar temp = {}\n\t\t\t\ttemp[result.message.user_info.id] = result.message.user_info\n\t\t\t\tthis.add(temp)\n\t\t\t\treturn result.message.user_info\n\t\t\t} else {\n\t\t\t\tthis.unavailable.push(nick_name)\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\n\tgetAvatar(user_id) {\n\t\tif (user_id && this.data && this.data[user_id]) {\n\t\t\tif (this.data[user_id].has_profile_image) {\n\t\t\t\tvar avatar = \"\"\n\t\t\t\tif (this.data[user_id].avatar) avatar = this.data[user_id].avatar\n\t\t\t\treturn 'https://avatars.plurk.com/' + user_id + '-big' + avatar + '.jpg'\n\t\t\t}\n\t\t}\n\t\treturn 'https://plurk.com/static/default_big.jpg'\n\t}\n\n\tgetAvatarByUsername(user_name) {\n\t\tvar user_id = false\n\n\t\tif (user_name) {\n\t\t\tfor (var index in this.data) {\n\t\t\t\tif (this.data[index].nick_name.toLowerCase() == user_name.toLowerCase()) {\n\t\t\t\t\tuser_id = index\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.getAvatar(user_id)\n\t}\n}\n\nexport default friends","\"use strict\"\n\nimport { _q, _qAll, animateNumber } from '../helpers/helper.js'\n\n/*\n    Simple span element object:\n\n    1. update(text): Update the content with text value, and animate it if it's number.\n    2. html(html): Update the content with html value.\n    3. class(classname): Add class name to span.\n*/\n\nclass span {\n    constructor() {\n        this.el = document.createElement('span')\n        return this\n    }\n\n    class(...classname) {\n        this.el.classList.add(...classname)\n        return this\n    }\n\n    html(html) {\n        this.el.innerHTML = html\n        return this\n    }\n\n    update(text) {\n        animateNumber(this.el.textContent, text, (text) => {\n            this.el.textContent = text\n        })\n        return this\n    }\n}\n\nexport default span","\"use strict\";\n\nimport { gsap } from 'gsap';\n\n/*\n    Color randomizer\n\n    1. colors: array of colors value\n    2. getRandomColor(): get the randomized color from colors list\n*/\n\nclass colors {\n    constructor() {\n        this.oldcolor = \"\";\n        this.randomcolors = [];\n\n        const allColorArrays = [\n            [\n                'rgb(63,94,251)',     // Dodger Blue\n                'rgb(252,70,107)',    // Radical Red\n                'rgb(34,193,195)',    // Light Sea Green\n                'rgb(253,187,45)',    // Goldenrod\n                'rgb(195,34,190)',    // Deep Pink\n                'rgb(219,158,0)',     // Golden Yellow\n                'rgb(75,231,152)',    // Medium Spring Green\n                'rgb(195,34,103)',    // Cerise\n                'rgb(45,182,253)'     // Dodger Blue (Lighter)\n            ]\n        ];\n\n        const seconds = Math.floor(Date.now() / 1000); // Get current time in seconds\n        const arrayIndex = seconds % allColorArrays.length; // Use seconds to determine the index\n        this.colors = allColorArrays[arrayIndex];\n    }\n\n    getRandomColor() {\n        var color;\n        do {\n            this.randomcolors = gsap.utils.shuffle(this.colors).slice();\n        } while (this.oldcolor == (color = this.randomcolors.pop()));\n        this.oldcolor = color;\n        return color;\n    }\n}\n\nexport default colors;","\"use strict\"\n\nimport span from \"./span.js\"\n\n/*\n    Plurk element object spesification:\n\n    1. id: contain the id name\n    2. user: contain user object\n    3. attached: status of element is attached in DOM or not\n    4. create(): create the DOM element\n    4. destroy(): remove the DOM element\n    4. update(): update the DOM element based on it's current value\n    5. insertTo(element): insert DOM element to spesific element, also will check if it's already created or not\n*/\n\nclass element {\n    constructor(id, data, avatarurl, customcreate) {\n        this.id = id\n        this.user = data\n        this.user_id = data.id\n        this.value = data.nick_name\n        this.nick_name = data.nick_name\n        this.attached = false\n        this.hidden = true\n        this.count = 1\n        this.position = 0\n        this.customcreate = customcreate\n        this.el = document.createElement('a')\n        this.created = false\n        this.avatarurl = avatarurl\n        this.counts = new span().class(\"count\").html(this.count)\n    }\n\n    create() {\n        this.created = true\n\n        this.el.setAttribute(\"id\", this.id + this.user_id)\n        this.el.setAttribute(\"class\", 'plurkers')\n        this.el.setAttribute(\"href\", 'https://plurk.com/' + this.user.nick_name)\n        this.el.setAttribute(\"target\", '_BLANK')\n\n        if (!this.customcreate) {\n            this.avatar = new span()\n                .class(\"avatar\")\n                .html(`<img src=\"${this.avatarurl}\" />`)\n            this.name = new span()\n                .class(\"name\")\n                .html(`${this.user.display_name}`)\n            this.counts = new span()\n                .class('count')\n                .html(this.count)\n            this.el.appendChild(this.avatar.el)\n            this.el.appendChild(this.name.el)\n            this.el.appendChild(this.counts.el)\n        } else {\n            this.customcreate(this)\n        }\n    }\n\n    insertTo(element) {\n        if (!this.created) this.create()\n\n        this.attached = true\n        element.insertAdjacentElement(\"beforeend\", this.el)\n    }\n\n    destroy() {\n        this.attached = false\n\n        if (this.el) {\n            this.el.remove()\n            return true\n        } else {\n            return false\n        }\n    }\n\n    update() {\n        // Only update when it's attached\n        if (this.attached) {\n            this.counts.update(`${this.count}`)\n        }\n    }\n}\n\nexport default element","\"use strict\"\n\nimport { gsap } from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js'\nimport html2canvas from \"html2canvas\"\n\nimport api from \"../helpers/api.js\"\nimport scroll from \"../helpers/scroll.js\"\nimport { hasClass, plural, reduceMotionFilter } from '../helpers/helper.js'\n\nimport span from \"./span.js\"\nimport colors from \"./colors.js\"\nimport iconLink from \"./icons.js\"\nimport element from \"./element.js\"\n\nclass statistics {\n\tconstructor(next, friends, most, year) {\n\t\tif (!next || !friends || !most || !year) return\n\n\t\tthis.whispers_count = 0\n\t\tthis.poll_count = 0\n\t\tthis.poll_responder_count = 0\n\t\tthis.coins_count = 0\n\t\tthis.porn_count = 0\n\t\tthis.noresponse_count = 0\n\t\tthis.private_count = 0\n\t\tthis.replurker_count = 0\n\t\tthis.replurker_list = []\n\t\tthis.favourite_count = 0\n\t\tthis.favorite_list = []\n\t\tthis.response_count = 0\n\t\tthis.responded_count = 0\n\t\tthis.responded_other_count = 0\n\t\tthis.responded_other_list = []\n\t\tthis.plurks_count = 0\n\t\tthis.id = 0\n\t\tthis.randomcolors = []\n\t\tthis.next = next\n\t\tthis.friends = friends\n\t\tthis.most = most\n\t\tthis.year = year\n\n\t\tthis.el = this.next.querySelector(\"#statistics\")\n\n\t\t// Obverse when element is added to DOM\n\t\tvar observer = new MutationObserver((mutationsList) => {\n\t\t\tmutationsList.forEach(mutation => {\n\t\t\t\tmutation.addedNodes.forEach(el => {\n\t\t\t\t\tif (el.querySelector) this.afterDraw(el)\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t\tobserver.observe(this.el, {\n\t\t\tattributes: true,\n\t\t\tchildList: true,\n\t\t\tsubtree: false\n\t\t})\n\t}\n\n\tclear() {\n\t\tthis.el.innerHTML = \"\"\n\t}\n\n\tlistCount(list, collection) {\n\t\tif (collection.length > 0) {\n\t\t\tcollection.forEach(value => {\n\t\t\t\tvar index = list.findIndex(el => el.id == value)\n\n\t\t\t\tif (index < 0) list.push({ id: value, count: 1 })\n\t\t\t\telse list[index].count++\n\t\t\t})\n\t\t}\n\n\t\treturn list\n\t}\n\n\ttitle(text, style = \"\", loading = false) {\n\t\tlet span = loading ? `<span class=\"loading\"><i/>` : `<span class=\"line\"><i/></span>`\n\t\tthis.el.insertAdjacentHTML('beforeend', `\\\n\t\t\t<div class=\"statistics middle statistics-title ${style}\">\\\n\t\t\t\t<h3><span>${text}</span>${span}</h3>\\\n\t\t\t</div>`)\n\t}\n\n\tbody(text, style = \"\") {\n\t\tthis.el.insertAdjacentHTML('beforeend', `\\\n\t\t\t<div class=\"statistics middle statistics-title ${style}\">\\\n\t\t\t\t<div class=\"body\">${text}</div>\\\n\t\t\t</div>`)\n\t}\n\n\tafterDraw(el) {\n\t\tvar length = reduceMotionFilter(1)\n\n\t\tif (hasClass(el, 'statistics-wrap')) {\n\t\t\tvar color = new colors()\n\t\t\tvar randomcolors = [color.getRandomColor(), color.getRandomColor()]\n\t\t\tvar anim = el.querySelector(\".anim\")\n\n\t\t\tgsap.set(anim, {\n\t\t\t\tbackground: 'radial-gradient(at 10% 10%, ' + randomcolors[0] + ' 0%, ' + randomcolors[1] + ' 100%)'\n\t\t\t})\n\n\t\t\tgsap.to(anim, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length / 2,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, 0)\n\n\t\t\t// Scroll animation wrap section\n\t\t\tvar screen = gsap.matchMedia()\n\t\t\tscreen.add(\"(min-aspect-ratio: 1/1)\", () => {\n\t\t\t\tscroll.push(tl => {\n\t\t\t\t\ttl.fromTo(el.children, {\n\t\t\t\t\t\ty: window.innerHeight * 1 / 5\n\t\t\t\t\t}, {\n\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\tease: \"ease.out\"\n\t\t\t\t\t}, 0)\n\t\t\t\t\treturn tl\n\t\t\t\t}, tl => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: el,\n\t\t\t\t\t\tstart: \"0 100%-=100px\",\n\t\t\t\t\t\tend: \"0 100%-=100px\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: 2\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t\t\tscreen.add(\"(max-aspect-ratio: 1/1)\", () => {\n\t\t\t\tscroll.push(tl => {\n\t\t\t\t\ttl.fromTo(el.children, {\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t}, {\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t}, 0)\n\t\t\t\t\treturn tl\n\t\t\t\t}, tl => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: el,\n\t\t\t\t\t\tstart: \"0 100%-=100px\",\n\t\t\t\t\t\tend: \"100px 100%-=100px\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: 1\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tscroll.push(function (tl) {\n\t\t\t\tif (el.querySelector(\".big\")) {\n\t\t\t\t\tvar number = Number(el.querySelector(\".big\").textContent)\n\t\t\t\t\tif (number > 0) {\n\t\t\t\t\t\tvar load = { progress: 0 }\n\t\t\t\t\t\tvar duration = 1\n\t\t\t\t\t\tif (number >= 500 && number < 1000) duration = 2\n\t\t\t\t\t\telse if (number >= 1000 && number < 99999) duration = 3\n\t\t\t\t\t\telse if (number >= 99999) duration = 4\n\t\t\t\t\t\ttl.to(load, {\n\t\t\t\t\t\t\tprogress: number,\n\t\t\t\t\t\t\tsnap: \"progress\",\n\t\t\t\t\t\t\tease: \"power3.out\",\n\t\t\t\t\t\t\tduration: duration,\n\t\t\t\t\t\t\tonUpdate: () => {\n\t\t\t\t\t\t\t\tel.querySelector(\".big\").textContent = plural(load.progress)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"0 100%-=100px\",\n\t\t\t\t\tend: \"100px 100%-=100px\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\ttoggleActions: \"play none none none\"\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\t// Scroll animation line section\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(el.querySelectorAll(\"i\"), {\n\t\t\t\t\tx: \"-100%\"\n\t\t\t\t}, {\n\t\t\t\t\tx: \"0%\",\n\t\t\t\t\tease: \"ease.out\"\n\t\t\t\t}, 0)\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"100% 100%\",\n\t\t\t\t\tend: \"100% 0\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: 1\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tif (hasClass(el, 'drawgraph')) {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(el.querySelector(\".graph\"), {\n\t\t\t\t\ty: 100\n\t\t\t\t}, {\n\t\t\t\t\ty: 0\n\t\t\t\t}, 0)\n\n\t\t\t\ttl.fromTo(el.querySelector(\".graph i\"), {\n\t\t\t\t\theight: \"0%\"\n\t\t\t\t}, {\n\t\t\t\t\theight: el.querySelector(\".graph i\").getAttribute(\"data-number\") + \"%\"\n\t\t\t\t}, 0)\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"50% 100%\",\n\t\t\t\t\tend: \"100% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: 1\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tif (hasClass(el, 'coins')) {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(el.querySelector(\".big\"), {\n\t\t\t\t\ty: \"50%\"\n\t\t\t\t}, {\n\t\t\t\t\ty: 0,\n\t\t\t\t\tease: \"power3.out\"\n\t\t\t\t}, 0)\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"50% 100%\",\n\t\t\t\t\tend: \"100% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: 2\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\t// Capture function\n\t\tthis.capture(el)\n\n\t\tscroll.refresh()\n\t}\n\n\tcapture(el) {\n\t\tvar capture = el.querySelector(\".capture small\")\n\t\tif (!capture) return\n\n\t\tcapture.onclick = async () => {\n\t\t\tif (capture.generating) return\n\n\t\t\t// Informing user the process is starting\n\t\t\tcapture.generating = true\n\t\t\tdocument.body.style.cursor = \"wait\"\n\n\t\t\t// HTML to Canvas magic\n\t\t\tcapture.innerHTML = \"Processing...\"\n\t\t\tvar canvas = await html2canvas(el.querySelector(\".anim\"), {\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tlogging: false,\n\t\t\t\tproxy: `${api.url}?img=`,\n\t\t\t\tuseCORS: true\n\t\t\t})\n\n\t\t\t// Download the output\n\t\t\tvar link = document.createElement(\"a\")\n\t\t\tlink.style.display = \"none\"\n\t\t\tlink.download = \"replurk\" + this.year + \"-\" + Date.now() + \".png\"\n\t\t\tlink.href = canvas.toDataURL()\n\t\t\tdocument.body.appendChild(link)\n\t\t\tlink.click()\n\t\t\tdocument.body.removeChild(link)\n\t\t\tlink.remove()\n\n\t\t\t// Reset button after 3s\n\t\t\tcapture.innerHTML = \"Done\"\n\t\t\tdocument.body.style.cursor = \"default\"\n\t\t\tsetTimeout(() => {\n\t\t\t\tcapture.innerHTML = \"Recapture\"\n\t\t\t\tcapture.generating = false\n\t\t\t}, 3000)\n\t\t}\n\t}\n\n\twrapper(style, text, background) {\n\t\treturn `<div class=\"statistics middle statistics-wrap ${style}\">\\\n\t\t\t<div class=\"anim\" ${background ? `style=\"background-images:url(${background})\"` : ``}>${text}</div>\\\n\t\t\t<div class=\"capture\"><small>Capture</small></div>\\\n\t\t</div>`\n\t}\n\n\tdraw(style, number, text, background) {\n\t\tif (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n\t\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style, `\\\n\t\t\t\t<p>\\\n\t\t\t\t\t<span class=\"big\">${number}</span>\\\n\t\t\t\t\t<span class=\"text\">${text}</span>\\\n\t\t\t\t</p>\\\n\t\t\t`), background)\n\t\t}\n\t}\n\n\tdrawDiv(style, text) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style, '<div class=\"box\">' + text + '</div>'))\n\t}\n\n\tdrawGraph(style, number, text) {\n\t\tif (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n\t\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawgraph movetitle\", '\\\n\t\t\t\t<p>\\\n\t\t\t\t\t<span class=\"graph\"><i data-number=\"' + number + '\"></i></span>\\\n\t\t\t\t\t<span class=\"info\">' + text + '</span>\\\n\t\t\t\t</p>\\\n\t\t\t'))\n\t\t}\n\t}\n\n\tdrawImage(style, image, link, title, text, badge) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawimage\", '\\\n\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t<span class=\"avatar\"><img src=\"' + image + '\" /></span>\\\n\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t</a>\\\n\t\t'))\n\t}\n\n\tdrawHTML(style, title, html) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawhtml\", '\\\n\t\t\t<div>\\\n\t\t\t\t<div class=\"htmlcontent\">' + html + '</div>\\\n\t\t\t\t<div class=\"title\">' + title + '</div>\\\n\t\t\t</div>\\\n\t\t'))\n\t}\n\n\tdrawLink(style, link, title, text, badge) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawlink\", '\\\n\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t<span>' + text + '</span>\\\n\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t</a>\\\n\t\t'))\n\t}\n\n\tdrawPost(style, id, title, text, badge) {\n\t\tvar url = \"\"\n\t\tif (id) url = 'https://plurk.com/p/' + id.toString(36)\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawpost\", '\\\n\t\t\t<div>\\\n\t\t\t\t<a href=\"' + url + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>\\\n\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t<p class=\"post\">' + text + '</p>\\\n\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t</div>\\\n\t\t'))\n\t}\n\n\tasync drawUserList(style, id, title, users) {\n\t\tvar html = \"\"\n\t\tvar max = users.length >= 5 ? 5 : users.length\n\t\tvar length = reduceMotionFilter(1)\n\n\t\tthis.drawHTML(`${style} drawuserlist movetitle ${id}`, title, \"<span class='info'>Downloading user data</span>\")\n\t\tfor (var index = 0; index < max; index++) {\n\t\t\tlet user = users[index]\n\t\t\tlet friend = await this.friends.find(user.id)\n\t\t\tif (friend) {\n\t\t\t\tvar plurker = new element(user.id, friend, \"\", plurker => {\n\t\t\t\t\tplurker.avatar = new span()\n\t\t\t\t\t\t.class(\"avatar\")\n\t\t\t\t\t\t.html(`<img src=\"${this.friends.getAvatar(plurker.user.id)}\" />`)\n\t\t\t\t\tplurker.name = new span()\n\t\t\t\t\t\t.class(\"name\")\n\t\t\t\t\t\t.html(`${plurker.user.display_name}`)\n\t\t\t\t\tplurker.counts = new span()\n\t\t\t\t\t\t.class(\"count\")\n\t\t\t\t\t\t.html(`${user.count}`)\n\n\t\t\t\t\tplurker.el.appendChild(plurker.avatar.el)\n\t\t\t\t\tplurker.el.appendChild(plurker.name.el)\n\t\t\t\t\tplurker.el.appendChild(plurker.counts.el)\n\t\t\t\t\tplurker.el.setAttribute(\"href\", `https://plurk.com/${plurker.user.nick_name}`)\n\t\t\t\t})\n\t\t\t\tplurker.create()\n\t\t\t\thtml += plurker.el.outerHTML\n\t\t\t} else {\n\t\t\t\tmax++\n\t\t\t}\n\t\t}\n\t\tthis.el.querySelector(`.${id} .htmlcontent`).innerHTML = html\n\n\t\t// Stagger animation\n\t\tif (id == 'mostinteraction' || id == 'mvp') {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n\t\t\t\t\tscale: .3,\n\t\t\t\t\topacity: 0\n\t\t\t\t}, {\n\t\t\t\t\tscale: 1,\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tease: \"elastic.out(1.2, 0.5)\",\n\t\t\t\t\tduration: length * 3 / 4,\n\t\t\t\t\tstagger: {\n\t\t\t\t\t\tamount: length / 3,\n\t\t\t\t\t\tfrom: \"end\"\n\t\t\t\t\t}\n\t\t\t\t}, 0)\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: this.el.querySelector(\".\" + id),\n\t\t\t\t\tstart: \"50% 100%\",\n\t\t\t\t\tend: \"50% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\ttoggleActions: \"play none none reverse\"\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n\t\t\t\t\ty: 50,\n\t\t\t\t\topacity: 0\n\t\t\t\t}, {\n\t\t\t\t\ty: 0,\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tduration: length,\n\t\t\t\t\tease: \"power3.out\",\n\t\t\t\t\tstagger: length / 3\n\t\t\t\t}, 0)\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: this.el.querySelector(\".\" + id),\n\t\t\t\t\tstart: \"0% 100%\",\n\t\t\t\t\tend: \"0% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\ttoggleActions: \"play none none reverse\"\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tattach(charttitle, node, max) {\n\t\tvar id = node.id\n\t\tvar chart\n\t\tvar title\n\t\tvar text\n\t\tvar anim\n\t\tvar wrapper\n\t\tvar capture\n\t\tvar opacity = 0\n\t\tvar position = max\n\t\tvar zIndex = 0\n\t\tvar hidden = true\n\n\t\tif (node.position <= max) {\n\t\t\thidden = false\n\t\t\tzIndex = position = (node.position - 1)\n\t\t\topacity = 1\n\t\t}\n\n\t\t// Create the box\n\t\tif (!this.next.querySelector(`.${id}`)) {\n\t\t\tchart = document.createElement('div')\n\t\t\tchart.setAttribute('class', 'chart')\n\n\t\t\ttitle = document.createElement('div')\n\t\t\ttitle.classList.add('title')\n\t\t\ttitle.innerHTML = charttitle\n\n\t\t\ttext = document.createElement('div')\n\t\t\ttext.classList.add('text')\n\t\t\ttext.appendChild(chart)\n\t\t\ttext.appendChild(title)\n\n\t\t\tanim = document.createElement('div')\n\t\t\tanim.classList.add('anim')\n\t\t\tanim.appendChild(text)\n\n\t\t\ttext = document.createElement('small')\n\t\t\ttext.innerHTML = \"Capture\"\n\n\t\t\tcapture = document.createElement('div')\n\t\t\tcapture.classList.add('capture')\n\t\t\tcapture.appendChild(text)\n\n\t\t\twrapper = document.createElement('div')\n\t\t\twrapper.classList.add(\"statistics\", \"middle\", \"statistics-wrap\", \"attach\", id)\n\t\t\twrapper.appendChild(anim)\n\t\t\twrapper.appendChild(capture)\n\n\t\t\tthis.el.insertAdjacentElement(\"beforeend\", wrapper)\n\t\t}\n\n\t\t// Add  element\n\t\tif (!hidden && !node.attached) {\n\t\t\tvar maxTop = max / (max - 1) * 100\n\n\t\t\tnode.insertTo(this.el.querySelector(`.${id} .chart`))\n\n\t\t\tgsap.set(node.el, {\n\t\t\t\ttop: maxTop + \"%\",\n\t\t\t\topacity: 0,\n\t\t\t\tzIndex: 0,\n\t\t\t})\n\t\t}\n\t\t// Update position\n\t\tif (!hidden || !node.hidden) {\n\t\t\tvar currentTop = position / (max - 1) * 100\n\t\t\tvar length = reduceMotionFilter(1)\n\n\t\t\tgsap.killTweensOf(node.el)\n\t\t\tgsap.to(node.el, {\n\t\t\t\ttop: currentTop + \"%\",\n\t\t\t\topacity: opacity,\n\t\t\t\tzIndex: zIndex,\n\t\t\t\tduration: length / 2,\n\t\t\t\tease: \"power3.out\",\n\t\t\t\tonComplete: function () {\n\t\t\t\t\tif (hidden) {\n\t\t\t\t\t\tnode.destroy()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tnode.hidden = hidden\n\t\t}\n\n\t\tnode.update()\n\t}\n\n\tasync drawAll(plurks) {\n\t\tvar response_percentage = Math.round((this.plurks_count - this.noresponse_count) / this.plurks_count * 100)\n\n\t\tthis.most.responses.draw(plurks)\n\t\tthis.drawGraph('center graph percentage', response_percentage, 'Around <i>' + response_percentage + '%</i> of my plurks got <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> responses ' + ((response_percentage <= 50) ? '<img src=\"https://api.iconify.design/fluent-emoji:crying-face.svg\" />' : '<img src=\"https://api.iconify.design/fluent-emoji:star-struck.svg\" />'))\n\n\t\tthis.draw('spansmall recievereplurk', this.replurker_count, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + plural(this.replurker_count, 'replurk') + '</i>')\n\t\tthis.most.replurk.draw(plurks)\n\n\t\tthis.most.favorite.draw(plurks)\n\t\tthis.draw('spansmall recievelove', this.favourite_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + plural(this.favourite_count, 'love') + '</i>')\n\n\t\tthis.draw('spansmall privateplurk', this.private_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:lip.svg\" /> ' + plural(this.private_count, 'private plurk') + '</i>')\n\t\tthis.draw('spansmall whisper', this.whispers_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-in-clouds.svg\" /> ' + plural(this.whispers_count, 'whisper') + '</i>')\n\t\tthis.draw('spansmall porn', this.porn_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg\" /> ' + plural(this.porn_count, 'adult plurk') + '</i>')\n\n\t\tthis.draw('span2 responsecount', `${this.plurks_count} &rarr; ${this.response_count}`, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(this.response_count, 'response') + '</i> from <i>' + plural(this.plurks_count, 'plurk') + '</i>')\n\t\tthis.draw('spansmall center coins', this.coins_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:coin.svg\" /> ' + plural(this.coins_count, 'coin') + '</i>')\n\n\t\tif (this.favorite_list.length > 0) this.drawUserList(\"avatar\", \"loved\", 'These Plurkers <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Loved</i> My Posts', this.favorite_list.sort(this.most.sort))\n\t\tif (this.replurker_list.length > 0) this.drawUserList(\"avatar\", \"replurked\", 'These Plurkers likes to <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Replurked</i> My Posts', this.replurker_list.sort(this.most.sort))\n\t}\n}\n\nexport default statistics","\"use strict\";\n\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js';\nimport api from \"../helpers/api.js\";\nimport scroll from \"../helpers/scroll.js\";\nimport darkmode from \"../helpers/darkmode.js\";\nimport animate from \"../helpers/animate.js\";\nimport { _q, _qAll, plural, monthNames, datediff, reduceMotionFilter } from '../helpers/helper.js';\n\nimport friends from \"./friends.js\";\nimport statistics from \"./statistics.js\";\n\n/*\n\tReplurk class\n*/\nclass replurk {\n\t// Draw in which element?\n\tnext = document.createElement('div');\n\t// Plurks array\n\tplurks = [];\n\t// Plurker profile object\n\tme = {}\n\n\t// Friends object\n\tfriends = new friends()\n\n\t// Statistics plurker object renderer\n\tstatistics = new statistics()\n\n\t// Most statistics object renderer\n\tmost = new most()\n\n\t// Inactive plurker object\n\tinactive = {\n\t\tdraw: (data, year) => {\n\t\t\tthis.statistics.draw('inactive', year + \" &#8617;\", 'I\\'ve been inactive since ' + year + ' <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n\t\t\tthis.statistics.drawPost('postcontent span2 inactivemore', data.plurk_id, '<i>My last Plurk</i> ' + datediff(data.posted), data.content, data.response_count);\n\t\t},\n\t\tempty: () => {\n\t\t\tthis.statistics.draw('inactive', '-', 'I didn\\'t post anything at this year <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n\t\t}\n\t}\n\n\t// Loading object\n\tloading = {\n\t\tcount: 0,\n\t\tprev_count: 0,\n\t\tcounts: -1,\n\t\tclean: false,\n\t\tnext: document.createElement('div'),\n\t\tparent: this,\n\t\tisComplete: function () { return this.count == this.counts },\n\t\tinit: function (next) {\n\t\t\tthis.count = 0;\n\t\t\tthis.prev_count = 0;\n\t\t\tthis.counts = -1;\n\t\t\tthis.clean = false;\n\t\t\tthis.next = next;\n\t\t},\n\t\tdraw: function (item) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tvar length = reduceMotionFilter(1);\n\t\t\t\tthis.prev_count = item;\n\n\t\t\t\tif (!this.next.querySelector(\".statistics.statistics-loading\")) {\n\t\t\t\t\tthis.parent.statistics.draw(\"statistics-loading\", item + \"%\", \"<i class='month'>Data from \" + this.year + \"</i>. Loading. <small>As long as you didn't close this browser tab, You can resume later by refreshing this page.</small>\");\n\t\t\t\t}\n\n\t\t\t\t// Animate loading\n\t\t\t\tvar load = { progress: this.prev_count };\n\t\t\t\tgsap.to(load, {\n\t\t\t\t\tprogress: Math.round(item),\n\t\t\t\t\tsnap: \"progress\",\n\t\t\t\t\tease: \"linear\",\n\t\t\t\t\tduration: length / 4,\n\t\t\t\t\tonUpdate: () => {\n\t\t\t\t\t\tvar el = this.next.querySelector(\".statistics-loading .big\");\n\t\t\t\t\t\tif (el) el.innerHTML = load.progress + \"%\";\n\t\t\t\t\t},\n\t\t\t\t\tonComplete: async () => {\n\t\t\t\t\t\tif (this.clean) await this.done();\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tloop: async function (length) {\n\t\t\tthis.clean = true;\n\t\t\tthis.counts = length;\n\t\t\tawait this.draw(0);\n\t\t},\n\t\tupdate: async function (month, value) {\n\t\t\tvar el = this.next.querySelector(\".statistics-loading .month\");\n\t\t\tif (month && el) el.innerHTML = month;\n\n\t\t\tif (this.counts >= 0) {\n\t\t\t\tthis.count = value ? value : this.count + 1;\n\t\t\t\tawait this.draw(Math.round(100 * (this.count / this.counts)));\n\t\t\t}\n\t\t},\n\t\tfakeupdate: async function () {\n\t\t\tif (this.counts >= 0) {\n\t\t\t\tthis.count++;\n\t\t\t\tif (this.count >= (this.counts - 10)) this.count = (this.counts - 10);\n\t\t\t\tawait this.draw(100 * (this.count / this.counts));\n\t\t\t}\n\t\t},\n\t\tforcedone: async function () {\n\t\t\tthis.count = this.counts;\n\t\t\tawait this.draw(100);\n\t\t},\n\t\tdone: function () {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tvar length = reduceMotionFilter(1);\n\n\t\t\t\tif (this.isComplete()) {\n\t\t\t\t\tvar el = this.next.querySelector(\".statistics.statistics-loading\");\n\t\t\t\t\tthis.clean = false;\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\tgsap.to(el, {\n\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\theight: 0,\n\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t\t\tduration: length / 2,\n\t\t\t\t\t\t\tease: \"power3.out\",\n\t\t\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\t\t\tel.remove();\n\t\t\t\t\t\t\t\tscroll.refresh();\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else resolve();\n\t\t\t});\n\t\t}\n\t}\n\n\t// Scroll Animation\n\tscrollAnimate = {\n\t\tcredits: (tl) => {\n\t\t\tvar next = this.next;\n\t\t\tvar length = reduceMotionFilter(1);\n\n\t\t\ttl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation, #credits .made\"), {\n\t\t\t\ty: window.innerHeight * 1 / 8\n\t\t\t}, {\n\t\t\t\ty: 0,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length * 2,\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation\"), {\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tstagger: {\n\t\t\t\t\tfrom: 'end',\n\t\t\t\t\tamount: length / 10\n\t\t\t\t},\n\t\t\t\tduration: length,\n\t\t\t\tease: \"power3.in\"\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#credits .made\"), {\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length,\n\t\t\t\tease: \"power3.in\"\n\t\t\t}, length * 3 / 10);\n\n\t\t\treturn tl;\n\t\t},\n\t\tstatistics: () => {\n\t\t\tvar next = this.next;\n\n\t\t\t// Scroll animate statistics\n\t\t\tscroll.push(tl => this.scrollAnimate.credits(tl), tl => ScrollTrigger.create({\n\t\t\t\ttrigger: next.querySelectorAll(\"#statistics\"),\n\t\t\t\tstart: \"100%-=\" + window.innerHeight + \" 0\",\n\t\t\t\tend: \"100% 0\",\n\t\t\t\tanimation: tl,\n\t\t\t\tscrub: .5\n\t\t\t}));\n\t\t},\n\t\tpermisions: () => {\n\t\t\tvar next = this.next;\n\n\t\t\t// Scroll animation permission section\n\t\t\tscroll.push((tl) => {\n\t\t\t\ttl.fromTo(next.querySelectorAll(\"#permission form\"), {\n\t\t\t\t\ty: 0\n\t\t\t\t}, {\n\t\t\t\t\ty: window.innerHeight * -3 / 4,\n\t\t\t\t\tease: \"linear\"\n\t\t\t\t}, 0);\n\t\t\t\ttl.fromTo(next.querySelectorAll(\"#permission .bgtext sup\"), {\n\t\t\t\t\ty: 0,\n\t\t\t\t\tx: 0,\n\t\t\t\t\trotation: 0\n\t\t\t\t}, {\n\t\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\t\tx: window.innerHeight * -1 / 10,\n\t\t\t\t\trotation: -10,\n\t\t\t\t\tease: \"linear\"\n\t\t\t\t}, 0);\n\t\t\t\ttl.fromTo(next.querySelectorAll(\"#permission .bgtext sub\"), {\n\t\t\t\t\ty: 0,\n\t\t\t\t\tx: 0,\n\t\t\t\t\trotation: 0\n\t\t\t\t}, {\n\t\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\t\tx: window.innerHeight * 1 / 10,\n\t\t\t\t\trotation: 10,\n\t\t\t\t\tease: \"linear\"\n\t\t\t\t}, 0);\n\t\t\t\treturn tl;\n\t\t\t}, (tl) => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: next.querySelectorAll(\"#permission\"),\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 0\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: .5\n\t\t\t\t});\n\t\t\t});\n\t\t\tscroll.push((tl) => {\n\t\t\t\ttl = this.scrollAnimate.credits(tl);\n\t\t\t\treturn tl;\n\t\t\t}, (tl) => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: next.querySelectorAll(\"#permission\"),\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 0\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: .5\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tmenu: () => {\n\t\t\t// Scroll animation menu and logout\n\t\t\tscroll.push(tl => tl, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: 'main',\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 0\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tonUpdate: update => {\n\t\t\t\t\t\tvar el1 = '.logo, .size, .lamp, .switch';\n\t\t\t\t\t\tvar el2 = el1 + \", .footer > *\";\n\n\t\t\t\t\t\tif (update.direction > 0) {\n\t\t\t\t\t\t\tgsap.killTweensOf(_qAll(el2));\n\t\t\t\t\t\t\tgsap.to(_qAll(el1), { y: -100, opacity: 0 });\n\t\t\t\t\t\t\tgsap.to(_qAll('.footer > *'), { y: 100, opacity: 0 });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgsap.to(_qAll(el2), { y: 0, opacity: 1 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tbrowserBar: (login = true) => {\n\t\t\tif (login) {\n\t\t\t\tscroll.push((tl) => {\n\t\t\t\t\treturn tl;\n\t\t\t\t}, (tl) => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: '#hello',\n\t\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: true,\n\t\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\t\tthis.browserColor(\"white\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\t\tthis.browserColor(\"green\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tscroll.push((tl) => {\n\t\t\t\t\treturn tl;\n\t\t\t\t}, (tl) => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: '#statistics',\n\t\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: true,\n\t\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\t\tthis.browserColor(\"yellow\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonEnter: () => {\n\t\t\t\t\t\t\tthis.browserColor(\"white\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\t\tthis.browserColor(\"white\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tscroll.push((tl) => {\n\t\t\t\t\treturn tl;\n\t\t\t\t}, (tl) => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: '#permission',\n\t\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: true,\n\t\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\t\tthis.browserColor(\"yellow\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\t\tthis.browserColor(\"green\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tconstructor(year) {\n\t\t// Which year?\n\t\tthis.year = year;\n\t\tthis.startDate = this.year + '-10-29T09:00:00';\n\t\tthis.endDate = new Date((this.year - 1) + '-10-29T09:00:00');\n\t\tthis.days = 60 * 60 * 24 * 1000;\n\t\tthis.fulldays = 365;\n\t}\n\n\t// Browser color\n\tgetSetStateColor(state) {\n\t\tif (typeof (state) == \"object\" && state.length >= 1) {\n\t\t\tif (state.length == 1) {\n\t\t\t\tdarkmode.browserColorDark = state[0];\n\t\t\t\tdarkmode.browserColorLight = state[0];\n\t\t\t} else {\n\t\t\t\tdarkmode.browserColorDark = state[1];\n\t\t\t\tdarkmode.browserColorLight = state[0];\n\t\t\t}\n\t\t} else if (state == \"green\") {\n\t\t\tdarkmode.browserColorDark = \"#0d4f03\";\n\t\t\tdarkmode.browserColorLight = \"#60e670\";\n\t\t} else if (state == \"yellow\") {\n\t\t\tdarkmode.browserColorDark = \"#705f02\";\n\t\t\tdarkmode.browserColorLight = \"#FFD700\";\n\t\t} else {\n\t\t\tdarkmode.browserColorDark = \"#000000\";\n\t\t\tdarkmode.browserColorLight = \"#FFFFFF\";\n\t\t}\n\n\t\treturn [darkmode.browserColorLight, darkmode.browserColorDark];\n\t}\n\tbrowserColor(state, duration, ease) {\n\t\tthis.getSetStateColor(state);\n\t\tdarkmode.setDarkMode(duration, ease);\n\t}\n\n\t// Show/hide Animations\n\t// Login Pages\n\tshowLoginPage(tl) {\n\t\tvar next = this.next;\n\t\tvar length = reduceMotionFilter(1);\n\n\t\tthis.browserColor(\"green\", 1);\n\t\ttl.fromTo(next.querySelectorAll(\"#permission\"), {\n\t\t\tposition: \"fixed\",\n\t\t\tdisplay: \"\",\n\t\t\topacity: 0,\n\t\t\ttop: 0\n\t\t}, {\n\t\t\topacity: 1,\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\"\n\t\t});\n\t\ttl.fromTo(next.querySelectorAll(\"#permission .bgtext *\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tstagger: length / 5,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\",\n\t\t\tonComplete: () => {\n\t\t\t\tgsap.set(next.querySelectorAll(\"#permission\"), {\n\t\t\t\t\tposition: \"\",\n\t\t\t\t\ttop: \"\"\n\t\t\t\t});\n\t\t\t}\n\t\t}, \">-\" + (length / 2));\n\n\t\treturn tl;\n\t}\n\thideLoginPage(tl) {\n\t\tvar next = this.next;\n\t\tvar length = reduceMotionFilter(1);\n\n\t\ttl.set(next.querySelectorAll(\"#permission\"), {\n\t\t\tposition: \"fixed\",\n\t\t\ttop: 0,\n\t\t});\n\t\ttl.fromTo(next.querySelectorAll(\"#permission .bgtext *, #permission form\"), {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t}, {\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t\tstagger: {\n\t\t\t\tfrom: \"end\",\n\t\t\t\tamount: length / 5\n\t\t\t},\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\",\n\t\t\tonComplete: () => {\n\t\t\t\tthis.browserColor(\"yellow\");\n\t\t\t}\n\t\t});\n\t\ttl.fromTo(next.querySelectorAll(\"#permission\"), {\n\t\t\topacity: 1\n\t\t}, {\n\t\t\topacity: 0,\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\",\n\t\t\tonComplete: () => {\n\t\t\t\tgsap.set(next.querySelectorAll(\"#permission\"), {\n\t\t\t\t\tposition: \"\",\n\t\t\t\t\tdisplay: \"none\",\n\t\t\t\t\ttop: \"\"\n\t\t\t\t}, \">\");\n\t\t\t}\n\t\t}, \">-\" + (length / 4));\n\n\t\treturn tl;\n\t}\n\t// Statistic Pages\n\tshowStatisticPages() {\n\t\treturn new Promise(resolve => {\n\t\t\tvar next = this.next;\n\t\t\tvar length = reduceMotionFilter(1);\n\t\t\tvar tl = gsap.timeline();\n\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tduration: length,\n\t\t\t\tonStart: () => this.browserColor(\"green\", .5)\n\t\t\t}, length / 4);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext > *\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: length / 5,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, length / 2);\n\t\t\ttl.fromTo(next.querySelectorAll(\" #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: length / 5,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, length / 2);\n\t\t\ttl.fromTo(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length / 2,\n\t\t\t\tonComplete: () => resolve()\n\t\t\t}, length / 2);\n\t\t});\n\t}\n\thideStatisticPages() {\n\t\treturn new Promise(async resolve => {\n\t\t\tvar next = this.next;\n\t\t\tvar length = reduceMotionFilter(1);\n\t\t\tvar tl = gsap.timeline();\n\n\t\t\tawait animate.top(next);\n\n\t\t\ttl.fromTo(next.querySelectorAll(\".footer > *, #hello .bgtext > *, #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0\n\t\t\t}, {\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: {\n\t\t\t\t\tfrom: \"end\",\n\t\t\t\t\tamount: length / 5\n\t\t\t\t},\n\t\t\t\tease: \"power3.in\"\n\t\t\t}, length / 5);\n\t\t\ttl.set(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n\t\t\t\topacity: 0\n\t\t\t}, length / 2);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello\"), {\n\t\t\t\topacity: 1\n\t\t\t}, {\n\t\t\t\topacity: 0,\n\t\t\t\tduration: length,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tgsap.set(next.querySelectorAll(\".grant\"), { display: \"none\" });\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}, length / 2);\n\t\t});\n\t}\n\n\t// Login messages\n\tmessage(message, quick) {\n\t\tvar next = this.next;\n\n\t\tvar loginmessage = next.querySelector(\"#login-message\");\n\n\t\tif (quick) {\n\t\t\tloginmessage.innerHTML = message;\n\t\t} else {\n\t\t\tgsap.to(loginmessage, {\n\t\t\t\topacity: 0,\n\t\t\t\tonComplete: function () {\n\t\t\t\t\tloginmessage.innerHTML = message;\n\t\t\t\t\tgsap.to(loginmessage, {\n\t\t\t\t\t\topacity: 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t// Logout\n\tasync requestLogout() {\n\t\tvar tl = gsap.timeline();\n\n\t\tapi.abort();\n\n\t\t// Hide statistic pages\n\t\tawait this.hideStatisticPages(tl);\n\n\t\t// Logout\n\t\tawait api.call(\"?fetch=logout\");\n\t\tthis.statistics.clear();\n\t\tapi.clear();\n\t\tthis.login();\n\n\t\tscroll.refresh();\n\t}\n\n\t// Request token\n\tasync requestToken(text) {\n\t\tvar next = this.next;\n\t\tvar length = reduceMotionFilter(1);\n\t\tvar tokenlink = next.querySelector(\"#tokenurl\");\n\t\ttokenlink.textContent = \"Connecting Plurk...\";\n\n\t\tvar tl = gsap.timeline();\n\t\ttl.fromTo(next.querySelectorAll(\"#permission form\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\"\n\t\t}, length);\n\t\ttl.fromTo(next.querySelectorAll(\"#permission h1, #permission li\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 50,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tstagger: length / 10,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\"\n\t\t}, length);\n\n\t\tapi.call(\"?request=token\").then(data => {\n\t\t\tif (text) {\n\t\t\t\tmessage(text);\n\t\t\t} else {\n\t\t\t\ttokenlink.textContent = \"Grant Access\";\n\t\t\t\ttokenlink.setAttribute(\"href\", api.url + \"?redirect=\" + data.message.url);\n\t\t\t}\n\t\t}, () => {\n\t\t\tmessage(\"Error when requesting verification from Plurk, please reload your browser again.\");\n\t\t});\n\n\t\tif (!text) next.querySelector(\"#permission form\").style.display = \"none\";\n\t}\n\n\t// Display current Plurker data\n\tasync displayPlurkerData() {\n\t\tvar plurker = this.me;\n\t\tvar next = this.next;\n\t\tvar extra = \"\";\n\t\tvar length = reduceMotionFilter(1);\n\n\t\t// plurks_count\n\t\tvar days = (plurker.anniversary.years * 365) + plurker.anniversary.days;\n\t\tvar responses = Math.round(plurker.response_count / days);\n\n\t\tnext.querySelector(\"#hello .thumbs\").innerHTML = \"<img src='\" + plurker.avatar_big + \"' />\";\n\t\tif (this.year == 2021) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>If \" + this.year + \" have been a rough year you, hopefully RePlurk will cheer you by bringing some good memories</p>\";\n\t\telse if (this.year == 2022) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>It's 2020 v2, and this is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\t\telse next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>This is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\n\t\t// Draw statistic\n\t\tthis.statistics.title('All Time', 'alltime');\n\t\tif (plurker.anniversary.years && plurker.anniversary.days) {\n\t\t\tthis.statistics.draw('spansmall center posted', Math.round(plurker.plurks_count / days), 'I posted around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(Math.round(plurker.plurks_count / days), \"plurk\") + \" per day</i>\");\n\n\t\t\t// Responses\n\t\t\tvar oneday = 16;\n\t\t\tif (responses <= oneday) extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday / responses), \"hour\") + '</i>';\n\t\t\telse extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday * 60 / responses), \"minute\") + '</i>';\n\t\t\tthis.statistics.draw('span2 center responded', responses, 'I responded around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(responses, \"time\") + \"</i> per day. \" + extra + \" when I'm not sleeping\");\n\n\t\t\tvar join = new Date(plurker.join_date)\n\t\t\tthis.statistics.draw('spansmall center anniversary', \"<strong><i>\" + monthNames[join.getMonth()] + \"</i> <i>\" + join.getFullYear() + \"</i></strong> <em>\" + join.getDate() + \"</em>\", \"I joined Plurk <i>\" + plural(plurker.anniversary.years, \"year\") + \"</i> and <i>\" + plural(plurker.anniversary.days, \"day\") + \"</i> ago\");\n\t\t\tthis.statistics.draw('spansmall center badges', plurker.badges.length, \"I have <i><img src='https://api.iconify.design/fluent-emoji:shield.svg' /> \" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n\t\t} else {\n\t\t\tthis.statistics.draw('', '-', \"There is no data in my timeline\");\n\t\t\tthis.statistics.draw('', plurker.badges.length, \"But at least I have <i>\" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n\t\t}\n\n\t\t// Scroll animation hello section\n\t\tscroll.push(tl => {\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .text, #hello .thumbs\"), {\n\t\t\t\ty: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -3 / 4,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext sup\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * -1 / 10,\n\t\t\t\trotation: -10,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext sub\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * 1 / 10,\n\t\t\t\trotation: 10,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .arrow-big\"), {\n\t\t\t\ty: 0,\n\t\t\t\topacity: 1\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * 1 / 4,\n\t\t\t\topacity: 0,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length / 4,\n\t\t\t}, 0);\n\t\t\treturn tl;\n\t\t}, tl => ScrollTrigger.create({\n\t\t\ttrigger: next.querySelectorAll(\"#hello\"),\n\t\t\tstart: \"0 0\",\n\t\t\tend: \"100% 0\",\n\t\t\tanimation: tl,\n\t\t\tscrub: true\n\t\t}));\n\t\tscroll.refresh();\n\t}\n\t// Display statistics\n\tasync displayStatistics() {\n\t\tthis.statistics.title('This Year', 'thisyear');\n\t\tthis.statistics.draw(\"statistics-loading thisyearloading\", \"\", \"<i class='month'>Data from December</i>1 of 2. Loading \" + this.year + \" timeline. It can take up to 1 minute.\");\n\n\t\tthis.loading.init(this.next);\n\t\tthis.loading.loop(this.fulldays);\n\n\t\t// Load loop timeline\n\t\tvar getTimeline = async (offset) => {\n\t\t\toffset = (!offset) ? \"\" : \"&offset=\" + offset;\n\n\t\t\tvar data = await api.call(\"?fetch=plurk&filter=my\" + offset, 1);\n\t\t\tif (data.success) {\n\t\t\t\tthis.friends.add(data.message.plurk_users);\n\t\t\t\tthis.plurks = this.plurks.concat(data.message.plurks);\n\n\t\t\t\tif (data.message.plurks.length > 0) {\n\t\t\t\t\tvar lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\n\t\t\t\t\tif (lastposted >= this.endDate) {\n\t\t\t\t\t\tthis.loading.update(\"Data from \" + monthNames[lastposted.getMonth()] + \" \" + lastposted.getFullYear(), this.fulldays - Math.floor((lastposted - this.endDate) / this.days));\n\n\t\t\t\t\t\t// Load next plurks\n\t\t\t\t\t\tawait getTimeline(data.message.offset);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twhile (lastposted < this.endDate && this.plurks.length > 1) {\n\t\t\t\t\t\t\tthis.plurks.pop();\n\t\t\t\t\t\t\tlastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait this.loading.forcedone();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait this.loading.forcedone();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.requestLogout();\n\t\t\t}\n\t\t}\n\t\tawait getTimeline(this.startDate);\n\n\t\t// When loading done\n\t\tvar largest_poll_result = 0;\n\t\tif (this.plurks.length > 1) {\n\t\t\t// Count user statistics\n\t\t\tthis.statistics.plurks_count = 0;\n\t\t\tthis.plurks.forEach(plurk => {\n\t\t\t\t// Calculate the statistics\n\t\t\t\tif (plurk.responded) this.statistics.responded_count++;\n\t\t\t\tif (plurk.owner_id == this.me.id) {\n\t\t\t\t\tthis.statistics.plurks_count++;\n\t\t\t\t\tthis.statistics.replurker_count += plurk.replurkers.length;\n\t\t\t\t\tthis.statistics.replurker_list = this.statistics.listCount(this.statistics.replurker_list, plurk.replurkers);\n\t\t\t\t\tthis.statistics.favourite_count += plurk.favorers.length;\n\t\t\t\t\tthis.statistics.favorite_list = this.statistics.listCount(this.statistics.favorite_list, plurk.favorers);\n\t\t\t\t\tif (plurk.anonymous) this.statistics.whispers_count++;\n\t\t\t\t\tif (plurk.coins) this.statistics.coins_count += plurk.coins;\n\t\t\t\t\tif (plurk.porn) this.statistics.porn_count++;\n\t\t\t\t\tif (!plurk.response_count) this.statistics.noresponse_count++;\n\t\t\t\t\tif (plurk.plurk_type == 3) this.statistics.private_count++;\n\t\t\t\t\tthis.statistics.response_count += plurk.response_count;\n\n\t\t\t\t\tif (plurk.content_raw.includes(\"instagram.com\")) this.statistics.instagrammer_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"facebook.com\")) this.statistics.facebooker_count++;\n\t\t\t\t\telse if (plurk.content_raw.includes(\"fb.watch\")) this.statistics.facebooker_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"twitter.com\")) this.statistics.twitterer_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"reddit.com\")) this.statistics.redditor_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"tiktok.com\")) this.statistics.tiktoker_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"imgur.com\")) this.statistics.imgurer_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"youtube.com\")) this.statistics.youtuber_count++;\n\n\t\t\t\t\t// Calculate polls\n\t\t\t\t\tif (plurk.with_poll) {\n\t\t\t\t\t\tvar response_count = plurk.poll.response.response_count;\n\t\t\t\t\t\tthis.statistics.poll_count++;\n\t\t\t\t\t\tthis.statistics.poll_responder_count += response_count;\n\n\t\t\t\t\t\tif (largest_poll_result < response_count) {\n\t\t\t\t\t\t\tlargest_poll_result = response_count;\n\t\t\t\t\t\t\tthis.statistics.poll_popular_plurk = plurk;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (plurk.responded) this.statistics.responded_other_count++;\n\t\t\t});\n\n\t\t\t// Sort based on date\n\t\t\tthis.plurks.sort((a, b) => new Date(b.posted) - new Date(a.posted));\n\n\t\t\t// Draw statistics\n\t\t\ttry {\n\t\t\t\tawait this.statistics.drawAll(this.plurks);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.info(\"Error while counting statistics\", error);\n\t\t\t}\n\n\t\t\t// Display extended statistics\n\t\t\tthis.displayExtendedStatistics();\n\t\t} else {\n\t\t\tif (this.plurks[0]) {\n\t\t\t\tvar date = new Date(plurk[0].posted);\n\t\t\t\tinactive.draw(plurk[0], date.getFullYear());\n\t\t\t}\n\t\t\telse inactive.empty();\n\t\t}\n\t}\n\t// Display extended statistics\n\tasync displayExtendedStatistics() {\n\t\t// Deeper user statistics\n\t\tthis.statistics.title('Dig Deeper', 'digdeeper');\n\t\tthis.statistics.draw(\"statistics-loading digdeeperloading\", \"\", \"<i class='month'>Data from \" + this.year + \"</i> 2 of 2. Loading all responses. <small>If the loading seems to stop, refresh your browser tab to resume your download. Closing your browser tab will clear all downloaded data.</small>\");\n\n\t\t// Load each post responses and calculate statistics\n\t\tthis.loading.init(this.next);\n\t\tthis.loading.loop(this.plurks.length);\n\n\t\t// Get the responses for each plurks in parallel\n\t\tthis.plurks.sort((a, b) => new Date(a.posted) < new Date(b.posted));\n\t\tfor (var plurk of this.plurks) {\n\t\t\tvar date = new Date(plurk.posted);\n\t\t\tthis.loading.update(\"Data from \" + monthNames[date.getMonth()] + \" \" + date.getFullYear());\n\n\t\t\t// Count all\n\t\t\tawait this.most.countAll(plurk);\n\n\t\t\t// Count responses\n\t\t\tif (plurk.response_count > 0 && (plurk.responded || plurk.owner_id == this.me.id)) {\n\t\t\t\tvar result = await api.call(\"?fetch=response&plurk_ids=\" + plurk.plurk_id);\n\t\t\t\tif (result.success) for (var message of result.message) {\n\t\t\t\t\t// Add friends from response lists\n\t\t\t\t\tthis.friends.add(message.friends);\n\n\t\t\t\t\t// Count the rest of statistics\n\t\t\t\t\tfor (var response of message.responses) {\n\t\t\t\t\t\t// Find and count all responders\n\t\t\t\t\t\tawait this.most.responders.count(response);\n\t\t\t\t\t\tthis.most.interaction.count(response);\n\t\t\t\t\t\tthis.most.mvp.count(response, \"response\");\n\t\t\t\t\t\t// Count all\n\t\t\t\t\t\tawait this.most.countAll(response);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.requestLogout();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Display How Many Links\n\t\tthis.most.links.drawLinks();\n\t\t// Display How Many Pictures\n\t\tthis.most.links.drawPics();\n\n\t\t// Draw Results\n\t\t// Display Most Responder\n\t\t// this.most.responders.draw();\n\n\t\t// Display Most Interaction\n\t\tthis.most.interaction.draw();\n\n\t\t// Display Most Mentioned by me\n\t\t// this.most.mentions.draw();\n\n\t\t// Display How Many Words-Characters\n\t\tthis.most.types.draw();\n\n\t\t// Display Most hashtags by me\n\t\tthis.most.hashtags.draw();\n\n\t\t// Display Most My Emoticons\n\t\tthis.most.myemoticons.draw();\n\n\t\t// Display MVP\n\t\tthis.statistics.replurker_list.forEach(value => {\n\t\t\tthis.most.mvp.count({ user_id: value.id, count: value.count }, \"replurk\");\n\t\t});\n\t\tthis.statistics.favorite_list.forEach(value => {\n\t\t\tthis.most.mvp.count({ user_id: value.id, count: value.count }, \"favorite\");\n\t\t});\n\t\tthis.most.mvp.draw();\n\n\t\t// Replurk Badges\n\t\tvar gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Leader\";\n\t\tif (this.me.gender == 1) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> King\";\n\t\tif (this.me.gender == 0) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Queen\";\n\n\t\tvar tiktok = \"<img src='https://api.iconify.design/fluent-emoji:mirror-ball.svg' />\";\n\t\tif (this.me.gender == 1) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:man-dancing-medium-dark-skin-tone.svg' />\";\n\t\tif (this.me.gender == 0) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:woman-dancing-medium-dark-skin-tone.svg' />\";\n\n\t\tvar facebook = \"<img src='https://api.iconify.design/fluent-emoji:older-person.svg' />\";\n\t\tif (this.me.gender == 1) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-man.svg' />\";\n\t\tif (this.me.gender == 0) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-woman.svg' />\";\n\n\t\tvar plurker = \"<img src='https://api.iconify.design/fluent-emoji:person-bowing.svg' />\";\n\t\tif (this.me.gender == 1) plurker = \"<img src='https://api.iconify.design/fluent-emoji:man-bowing.svg' />\";\n\t\tif (this.me.gender == 0) plurker = \"<img src='https://api.iconify.design/fluent-emoji:woman-bowing.svg' />\";\n\n\t\tthis.statistics.title('RePlurk Badges', 'replurkbadges');\n\t\tthis.statistics.body(`\\\n\t\t\t<h4>What are RePlurk Badges consist of?</h4>\\\n\t\t\t<p>They are badges based on your activities in Plurk. Currently there are 16 badges in total, for activities such as:</p>\\\n\t\t\t<ol>\\\n\t\t\t\t<li>Creating lots of polls (Polling ${gender})</li>\\\n\t\t\t\t<li>Receiving lots of coins (Plurk Coins Billionaire)</li>\\\n\t\t\t\t<li>Writing lots of posts (Novelist and Keyboard Warrior)</li>\\\n\t\t\t\t<li>Sharing lots of pictures and links (Meme Lord & Missing Link)</li>\\\n\t\t\t\t<li>Sharing social medias urls (there are 7 badges)</li>\\\n\t\t\t\t<li>Posting lots of adult posts (Adult-er)</li>\\\n\t\t\t\t<li>Getting lots of replurks (Trendsetter)</li>\\\n\t\t\t\t<li>and, Constantly posting in Plurk almost everyday (Active Plurker)</li>\\\n\t\t\t</ol>\\\n\t\t\t`, `replurkbadges description`);\n\t\tif (this.statistics.poll_count >= 5) this.statistics.draw('spansmall spanhalf center badges pollbadges', \"<img src='https://api.iconify.design/fluent-emoji:ballot-box-with-ballot.svg' />\", \"<strong>Polling \" + gender + \"</strong>\");\n\t\tif (this.statistics.coins_count >= 5) this.statistics.draw('spansmall spanhalf center badges coinbadges', \"<img src='https://api.iconify.design/fluent-emoji:coin.svg' />\", \"<strong>Plurk Coins Billionaire</strong>\");\n\t\tif (this.most.types.words >= 50000) this.statistics.draw('spansmall spanhalf center badges novelistbadges', \"<img src='https://api.iconify.design/fluent-emoji:orange-book.svg' />\", \"<strong>Novelist</strong>\");\n\t\tif (this.most.types.chars >= 1000000) this.statistics.draw('spansmall spanhalf center badges keyboardbadges', \"<img src='https://api.iconify.design/fluent-emoji:keyboard.svg' />\", \"<strong>Keyboard Warrior</strong>\");\n\t\tif (this.most.links.pics.length >= 356) this.statistics.draw('spansmall spanhalf center badges memebadges', \"<img src='https://api.iconify.design/fluent-emoji:cat.svg' />\", \"<strong>Meme Lord</strong>\");\n\t\tif (this.most.links.links.length >= 356 / 2) this.statistics.draw('spansmall spanhalf center badges missingbadges', \"<img src='https://api.iconify.design/fluent-emoji:orangutan.svg' />\", \"<strong>The Missing Link</strong>\");\n\t\tif (this.statistics.instagrammer_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:camera.svg' />\", \"<strong>Instagrammer</strong>\");\n\t\tif (this.statistics.facebooker_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', facebook, \"<strong>Facebooker</strong>\");\n\t\tif (this.statistics.twitterer_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:hatching-chick.svg' />\", \"<strong>The Real Chief Twit</strong>\");\n\t\tif (this.statistics.redditor_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:robot.svg' />\", \"<strong>/r</strong>\");\n\t\tif (this.statistics.tiktoker_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', tiktok, \"<strong>Tiktoker</strong>\");\n\t\tif (this.statistics.imgurer_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:framed-picture.svg' />\", \"<strong>Imgur-er</strong>\");\n\t\tif (this.statistics.youtuber_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:movie-camera.svg' />\", \"<strong>Youtuber <img src='https://api.iconify.design/fluent-emoji:sleepy-face.svg' /></strong>\");\n\t\tif (this.statistics.porn_count >= 10) this.statistics.draw('spansmall spanhalf center badges adultbadges', \"<img src='https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg' />\", \"<strong>Adult-er</strong>\");\n\t\tif (this.statistics.replurker_count >= 50) this.statistics.draw('spansmall spanhalf center badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:trophy.svg' />\", \"<strong>Trendsetter</strong>\");\n\t\tif (this.statistics.plurks_count >= 356 * 1.5) this.statistics.draw('spansmall spanhalf center badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:military-medal.svg' />\", \"<strong>Active Plurker \" + plurker + \"</strong>\");\n\n\t\tthis.logSessionStrorageSize();\n\t}\n\n\t// Display LocalStorage stats\n\tlogSessionStrorageSize() {\n\t\tfunction getSessionStorageSize() {\n\t\t\tvar totalBytes = 0;\n\n\t\t\tfor (var key in sessionStorage) {\n\t\t\t\tif (sessionStorage.hasOwnProperty(key)) {\n\t\t\t\t\tvar itemValue = sessionStorage.getItem(key);\n\t\t\t\t\ttotalBytes += itemValue.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Convert bytes to Megabytes\n\t\t\tvar totalMegabytes = Math.round((totalBytes / 1024 / 1024) * 100) / 100;\n\n\t\t\treturn totalMegabytes;\n\t\t}\n\n\t\t// Usage\n\t\tvar sessionStorageSize = getSessionStorageSize();\n\t\tconsole.info('SessionStorage Size: ' + sessionStorageSize + ' MB');\n\t}\n\n\t// Check login status\n\tasync login(clear) {\n\t\tvar next = this.next;\n\n\t\tthis.me = { id: 0 }\n\t\tthis.plurks = [];\n\n\t\tscroll.destroy();\n\n\t\twindow.scrollTo(0, 0);\n\t\tthis.browserColor(\"yellow\");\n\n\t\t// Scroll animation menu and logout\n\t\tthis.scrollAnimate.menu();\n\n\t\t// Check is server have open session\n\t\tvar tl = gsap.timeline();\n\t\ttl.set(next.querySelector(\"#hello .arrow-big\"), {\n\t\t\topacity: 0\n\t\t});\n\n\t\tvar data = await api.call(\"?\");\n\t\tvar interval = null;\n\t\tif (data.success) {\n\t\t\tthis.me = data.message\n\t\t\tthis.friends = new friends()\n\t\t\tthis.statistics = new statistics(next, this.friends, this.most, this.year)\n\t\t\tthis.most = new most(this.me, this.friends, this.statistics)\n\n\t\t\t// Initial Plurk statistics\n\t\t\tawait this.displayPlurkerData();\n\n\t\t\t// Display the rest of the statistics\n\t\t\tthis.displayStatistics();\n\n\t\t\t// Scroll top top\n\t\t\tawait animate.top(next);\n\n\t\t\t// Hide login page\n\t\t\tif (clear) next.querySelector(\"#permission\").style.display = \"none\";\n\t\t\telse tl = this.hideLoginPage(tl);\n\n\t\t\t// Show statistic pages\n\t\t\tawait this.showStatisticPages(tl);\n\n\t\t\t// Add logout event\n\t\t\tnext.querySelector(\"#logout\").onclick = () => this.requestLogout();\n\n\t\t\t// Scroll animate statistics\n\t\t\tthis.scrollAnimate.statistics();\n\t\t\t// Scroll browser bar\n\t\t\tthis.scrollAnimate.browserBar();\n\n\t\t\tscroll.refresh();\n\t\t} else {\n\t\t\t// Hide statistic pages\n\t\t\tif (clear) next.querySelectorAll(\".grant\").forEach(function (el) { el.style.display = \"none\"; });\n\t\t\t// Show login page\n\t\t\tthis.showLoginPage(tl);\n\t\t\t// Request token\n\t\t\tthis.requestToken();\n\n\t\t\t// Scroll animation permission section\n\t\t\tthis.scrollAnimate.permisions();\n\t\t\t// Scroll browser bar\n\t\t\tthis.scrollAnimate.browserBar(false);\n\n\t\t\tscroll.refresh();\n\n\t\t\t// Automatic login\n\t\t\tinterval = setInterval(async () => {\n\t\t\t\tvar data = await api.call(\"?\");\n\n\t\t\t\tif (data.success) {\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tthis.login();\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\t// Snap\n\t\tnext.querySelectorAll(\"section.snap\").forEach(el => scroll.snap(el));\n\t\tnext.querySelectorAll(\"section.snap-bottom\").forEach(el => scroll.snap(el, \"bottom\"));\n\t}\n\n\t// Run the API call\n\trun(el) {\n\t\treturn new Promise(resolve => {\n\t\t\tvar length = reduceMotionFilter(1);\n\t\t\tthis.next = el;\n\t\t\tthis.browserColor(\"yellow\");\n\n\t\t\t// Run the login\n\t\t\tgsap.fromTo(this.next.querySelectorAll('#credits'), {\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tonComplete: async () => {\n\t\t\t\t\t// Change color\n\t\t\t\t\tthis.browserColor(\"yellow\", 0);\n\n\t\t\t\t\t// Display login\n\t\t\t\t\tawait this.login(true);\n\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default replurk;"],"names":["constructor","this","data","unavailable","add","new_friends","Object","assign","find","user_id","findIndex","el","result","api","call","success","temp","message","user_info","id","push","findByUsername","nick_name","index","toLowerCase","getAvatar","has_profile_image","avatar","getAvatarByUsername","user_name","document","createElement","classname","classList","html","innerHTML","update","text","textContent","oldcolor","randomcolors","allColorArrays","arrayIndex","Math","floor","Date","now","length","colors","getRandomColor","color","gsap","utils","shuffle","slice","pop","avatarurl","customcreate","user","value","attached","hidden","count","position","created","counts","class","create","setAttribute","name","display_name","appendChild","insertTo","element","insertAdjacentElement","destroy","remove","next","friends","most","year","whispers_count","poll_count","poll_responder_count","coins_count","porn_count","noresponse_count","private_count","replurker_count","replurker_list","favourite_count","favorite_list","response_count","responded_count","responded_other_count","responded_other_list","plurks_count","querySelector","MutationObserver","mutationsList","forEach","mutation","addedNodes","afterDraw","observe","attributes","childList","subtree","clear","listCount","list","collection","title","style","loading","span","insertAdjacentHTML","body","anim","set","background","to","opacity","duration","ease","screen","matchMedia","tl","fromTo","children","y","window","innerHeight","ScrollTrigger","trigger","start","end","animation","scrub","number","Number","load","progress","snap","onUpdate","toggleActions","querySelectorAll","x","height","getAttribute","capture","refresh","onclick","async","generating","cursor","canvas","html2canvas","backgroundColor","logging","proxy","url","useCORS","link","display","download","href","toDataURL","click","removeChild","setTimeout","wrapper","draw","drawDiv","drawGraph","drawImage","image","badge","drawHTML","drawLink","drawPost","toString","drawUserList","users","max","friend","plurker","outerHTML","scale","stagger","amount","from","attach","charttitle","node","chart","zIndex","maxTop","top","currentTop","killTweensOf","onComplete","drawAll","plurks","response_percentage","round","responses","replurk","favorite","sort","me","statistics","inactive","plurk_id","posted","content","empty","prev_count","clean","parent","isComplete","init","item","Promise","resolve","done","loop","month","fakeupdate","forcedone","width","padding","margin","overflow","scrollAnimate","credits","permisions","rotation","menu","el1","el2","direction","browserBar","login","onLeave","browserColor","onEnterBack","onEnter","startDate","endDate","days","fulldays","getSetStateColor","state","darkmode","browserColorDark","browserColorLight","setDarkMode","showLoginPage","hideLoginPage","showStatisticPages","timeline","onStart","hideStatisticPages","animate","quick","loginmessage","requestLogout","abort","requestToken","tokenlink","then","displayPlurkerData","extra","anniversary","years","avatar_big","oneday","join","join_date","getMonth","getFullYear","getDate","badges","displayStatistics","getTimeline","offset","plurk_users","concat","lastposted","largest_poll_result","plurk","responded","owner_id","replurkers","favorers","anonymous","coins","porn","plurk_type","content_raw","includes","instagrammer_count","facebooker_count","twitterer_count","redditor_count","tiktoker_count","imgurer_count","youtuber_count","with_poll","poll","response","poll_popular_plurk","a","b","error","console","info","displayExtendedStatistics","date","countAll","responders","interaction","mvp","links","drawLinks","drawPics","types","hashtags","myemoticons","gender","tiktok","facebook","words","chars","pics","logSessionStrorageSize","sessionStorageSize","totalBytes","key","sessionStorage","hasOwnProperty","getItem","getSessionStorageSize","scrollTo","interval","setInterval","clearInterval","run"],"sourceRoot":""}