{"version":3,"file":"21.bundle.js","mappings":"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","sources":["webpack://dwaan/./src/js/replurk/icons.js","webpack://dwaan/./src/js/replurk/span.js","webpack://dwaan/./src/js/replurk/element.js","webpack://dwaan/./src/js/replurk/friends.js","webpack://dwaan/./src/js/replurk/colors.js","webpack://dwaan/./src/js/replurk/statistics.js","webpack://dwaan/./src/js/replurk/main.js"],"sourcesContent":["\"use strict\";\n\nvar iconLink = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\"><path id=\"right\" d=\"M19.188,12.001c0,1.1-0.891,2.015-1.988,2.015l-4.195-0.015C13.543,15.089,13.968,16,15.002,16h3C19.658,16,21,13.657,21,12s-1.342-4-2.998-4h-3c-1.034,0-1.459,0.911-1.998,1.999l4.195-0.015C18.297,9.984,19.188,10.901,19.188,12.001z\"/><path id=\"center\" d=\"M8,12c0,0.535,0.42,1,0.938,1h6.109c0.518,0,0.938-0.465,0.938-1c0-0.534-0.42-1-0.938-1H8.938C8.42,11,8,11.466,8,12z\"/><path id=\"left\" d=\"M4.816,11.999c0-1.1,0.891-2.015,1.988-2.015L11,9.999C10.461,8.911,10.036,8,9.002,8h-3c-1.656,0-2.998,2.343-2.998,4s1.342,4,2.998,4h3c1.034,0,1.459-0.911,1.998-1.999l-4.195,0.015C5.707,14.016,4.816,13.099,4.816,11.999z\"/></svg>';\n\nexport default iconLink;","\"use strict\"\n\nimport { _q, _qAll, animateNumber } from '../helpers/helper.js'\n\n/*\n    Simple span element object:\n\n    1. update(text): Update the content with text value, and animate it if it's number.\n    2. html(html): Update the content with html value.\n    3. class(classname): Add class name to span.\n*/\n\nclass span {\n    constructor() {\n        this.el = document.createElement('span')\n        return this\n    }\n\n    class(...classname) {\n        this.el.classList.add(...classname)\n        return this\n    }\n\n    html(html) {\n        this.el.innerHTML = html\n        return this\n    }\n\n    update(text) {\n        animateNumber(this.el.textContent, text, (text) => {\n            this.el.textContent = text\n        })\n        return this\n    }\n}\n\nexport default span","\"use strict\"\n\nimport span from \"./span.js\"\n\n/*\n    Plurk element object spesification:\n\n    1. id: contain the id name\n    2. user: contain user object\n    3. attached: status of element is attached in DOM or not\n    4. create(): create the DOM element\n    4. destroy(): remove the DOM element\n    4. update(): update the DOM element based on it's current value\n    5. insertTo(element): insert DOM element to spesific element, also will check if it's already created or not\n*/\n\nclass element {\n    constructor(id, data, avatarurl, customcreate) {\n        this.id = id\n        this.user = data\n        this.user_id = data.id\n        this.value = data.nick_name\n        this.nick_name = data.nick_name\n        this.attached = false\n        this.hidden = true\n        this.count = 1\n        this.position = 0\n        this.customcreate = customcreate\n        this.el = document.createElement('a')\n        this.created = false\n        this.avatarurl = avatarurl\n        this.counts = new span().class(\"count\").html(this.count)\n    }\n\n    create() {\n        this.created = true\n\n        this.el.setAttribute(\"id\", this.id + this.user_id)\n        this.el.setAttribute(\"class\", 'plurkers')\n        this.el.setAttribute(\"href\", 'https://plurk.com/' + this.user.nick_name)\n        this.el.setAttribute(\"target\", '_BLANK')\n\n        if (!this.customcreate) {\n            this.avatar = new span()\n                .class(\"avatar\")\n                .html(`<img src=\"${this.avatarurl}\" />`)\n            this.name = new span()\n                .class(\"name\")\n                .html(`${this.user.display_name}`)\n            this.counts = new span()\n                .class('count')\n                .html(this.count)\n            this.el.appendChild(this.avatar.el)\n            this.el.appendChild(this.name.el)\n            this.el.appendChild(this.counts.el)\n        } else {\n            this.customcreate(this)\n        }\n    }\n\n    insertTo(element) {\n        if (!this.created) this.create()\n\n        this.attached = true\n        element.insertAdjacentElement(\"beforeend\", this.el)\n    }\n\n    destroy() {\n        this.attached = false\n\n        if (this.el) {\n            this.el.remove()\n            return true\n        } else {\n            return false\n        }\n    }\n\n    update() {\n        // Only update when it's attached\n        if (this.attached) {\n            this.counts.update(`${this.count}`)\n        }\n    }\n}\n\nexport default element","\"use strict\"\n\nimport api from \"../helpers/api.js\"\n\n/*\n\tFriends object spesification:\n\n\t1. data: contains all the friends collection data\n\t2. add(data): add friend to friends collection data\n\t3. find(user_id): return friend data based on their id\n\t4. findByUsername(nick_name): return friend data based on their nick name\n\t5. getAvatar(user_id): return avatar url based on their id for from friends collection data\n\t6. getAvatarByUsername(user_id): return avatar url based on their nick name for from friends collection data\n*/\n\nclass friends {\n\tconstructor() {\n\t\tthis.data = {}\n\t\tthis.unavailable = []\n\t}\n\n\t/**\n\t * Add JSON object as a friends data\n\t *\n\t * ```js\n\t * friends.add({});\n\t * ```\n\t *\n\t * @param {new_friends}: New friends JSON from /APP/Profile/getPublicProfile\n\t * @memberof friends\n\t * @link https://www.plurk.com/API/2/\n\t */\n\tadd(new_friends) {\n\t\tObject.assign(this.data, new_friends)\n\t}\n\n\tasync find(user_id) {\n\t\tif (this.unavailable.findIndex(el => el == user_id) >= 0) return false\n\n\t\tif (this.data && this.data[user_id]) {\n\t\t\treturn this.data[user_id]\n\t\t} else {\n\t\t\tvar result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&user_id=\" + user_id)\n\n\t\t\tif (result.success) {\n\t\t\t\tvar temp = {}\n\t\t\t\ttemp[result.message.user_info.id] = result.message.user_info\n\t\t\t\tthis.add(temp)\n\t\t\t\treturn result.message.user_info\n\t\t\t} else {\n\t\t\t\tthis.unavailable.push(user_id)\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\n\tasync findByUsername(nick_name) {\n\t\tvar user_id = false\n\n\t\tif (this.unavailable.findIndex(el => el == nick_name) >= 0) return false\n\n\t\tfor (var index in this.data) {\n\t\t\tif (this.data[index].nick_name.toLowerCase() == nick_name.toLowerCase()) {\n\t\t\t\tuser_id = index\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif (user_id) {\n\t\t\treturn this.data[user_id]\n\t\t} else {\n\t\t\tvar result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&nick_name=\" + nick_name)\n\n\t\t\tif (result.success) {\n\t\t\t\tvar temp = {}\n\t\t\t\ttemp[result.message.user_info.id] = result.message.user_info\n\t\t\t\tthis.add(temp)\n\t\t\t\treturn result.message.user_info\n\t\t\t} else {\n\t\t\t\tthis.unavailable.push(nick_name)\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\n\tgetAvatar(user_id) {\n\t\tif (user_id && this.data && this.data[user_id]) {\n\t\t\tif (this.data[user_id].has_profile_image) {\n\t\t\t\tvar avatar = \"\"\n\t\t\t\tif (this.data[user_id].avatar) avatar = this.data[user_id].avatar\n\t\t\t\treturn 'https://avatars.plurk.com/' + user_id + '-big' + avatar + '.jpg'\n\t\t\t}\n\t\t}\n\t\treturn 'https://plurk.com/static/default_big.jpg'\n\t}\n\n\tgetAvatarByUsername(user_name) {\n\t\tvar user_id = false\n\n\t\tif (user_name) {\n\t\t\tfor (var index in this.data) {\n\t\t\t\tif (this.data[index].nick_name.toLowerCase() == user_name.toLowerCase()) {\n\t\t\t\t\tuser_id = index\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.getAvatar(user_id)\n\t}\n}\n\nexport default friends","\"use strict\";\n\nimport { gsap } from 'gsap';\n\n/*\n    Color randomizer\n\n    1. colors: array of colors value\n    2. getRandomColor(): get the randomized color from colors list\n*/\n\nclass colors {\n    constructor() {\n        this.oldcolor = \"\";\n        this.randomcolors = [];\n\n        const allColorArrays = [\n            [\n                'rgb(63,94,251)',     // Dodger Blue\n                'rgb(252,70,107)',    // Radical Red\n                'rgb(34,193,195)',    // Light Sea Green\n                'rgb(253,187,45)',    // Goldenrod\n                'rgb(195,34,190)',    // Deep Pink\n                'rgb(219,158,0)',     // Golden Yellow\n                'rgb(75,231,152)',    // Medium Spring Green\n                'rgb(195,34,103)',    // Cerise\n                'rgb(45,182,253)'     // Dodger Blue (Lighter)\n            ]\n        ];\n\n        const seconds = Math.floor(Date.now() / 1000); // Get current time in seconds\n        const arrayIndex = seconds % allColorArrays.length; // Use seconds to determine the index\n        this.colors = allColorArrays[arrayIndex];\n    }\n\n    getRandomColor() {\n        var color;\n        do {\n            this.randomcolors = gsap.utils.shuffle(this.colors).slice();\n        } while (this.oldcolor == (color = this.randomcolors.pop()));\n        this.oldcolor = color;\n        return color;\n    }\n}\n\nexport default colors;","\"use strict\"\n\nimport { gsap } from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js'\nimport html2canvas from \"html2canvas\"\n\nimport api from \"../helpers/api.js\"\nimport scroll from \"../helpers/scroll.js\"\nimport { hasClass, plural, reduceMotionFilter } from '../helpers/helper.js'\n\nimport span from \"./span.js\"\nimport colors from \"./colors.js\"\nimport iconLink from \"./icons.js\"\nimport element from \"./element.js\"\n\nclass statistics {\n\tconstructor(next, friends, most, year) {\n\t\tif (!next || !friends || !most || !year) return\n\n\t\tthis.whispers_count = 0\n\t\tthis.poll_count = 0\n\t\tthis.poll_responder_count = 0\n\t\tthis.coins_count = 0\n\t\tthis.porn_count = 0\n\t\tthis.noresponse_count = 0\n\t\tthis.private_count = 0\n\t\tthis.replurker_count = 0\n\t\tthis.replurker_list = []\n\t\tthis.favourite_count = 0\n\t\tthis.favorite_list = []\n\t\tthis.response_count = 0\n\t\tthis.responded_count = 0\n\t\tthis.responded_other_count = 0\n\t\tthis.responded_other_list = []\n\t\tthis.plurks_count = 0\n\t\tthis.id = 0\n\t\tthis.randomcolors = []\n\t\tthis.next = next\n\t\tthis.friends = friends\n\t\tthis.most = most\n\t\tthis.year = year\n\n\t\tthis.el = this.next.querySelector(\"#statistics\")\n\n\t\t// Obverse when element is added to DOM\n\t\tvar observer = new MutationObserver((mutationsList) => {\n\t\t\tmutationsList.forEach(mutation => {\n\t\t\t\tmutation.addedNodes.forEach(el => {\n\t\t\t\t\tif (el.querySelector) this.afterDraw(el)\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t\tobserver.observe(this.el, {\n\t\t\tattributes: true,\n\t\t\tchildList: true,\n\t\t\tsubtree: false\n\t\t})\n\t}\n\n\tclear() {\n\t\tthis.el.innerHTML = \"\"\n\t}\n\n\tlistCount(list, collection) {\n\t\tif (collection.length > 0) {\n\t\t\tcollection.forEach(value => {\n\t\t\t\tvar index = list.findIndex(el => el.id == value)\n\n\t\t\t\tif (index < 0) list.push({ id: value, count: 1 })\n\t\t\t\telse list[index].count++\n\t\t\t})\n\t\t}\n\n\t\treturn list\n\t}\n\n\ttitle(text, style = \"\", loading = false) {\n\t\tlet span = loading ? `<span class=\"loading\"><i/>` : `<span class=\"line\"><i/></span>`\n\t\tthis.el.insertAdjacentHTML('beforeend', `\\\n\t\t\t<div class=\"statistics middle statistics-title ${style}\">\\\n\t\t\t\t<h3><span>${text}</span>${span}</h3>\\\n\t\t\t</div>`)\n\t}\n\n\tbody(text, style = \"\") {\n\t\tthis.el.insertAdjacentHTML('beforeend', `\\\n\t\t\t<div class=\"statistics middle statistics-title ${style}\">\\\n\t\t\t\t<div class=\"body\">${text}</div>\\\n\t\t\t</div>`)\n\t}\n\n\tafterDraw(el) {\n\t\tvar length = reduceMotionFilter(1)\n\n\t\tif (hasClass(el, 'statistics-wrap')) {\n\t\t\tvar color = new colors()\n\t\t\tvar randomcolors = [color.getRandomColor(), color.getRandomColor()]\n\t\t\tvar anim = el.querySelector(\".anim\")\n\n\t\t\tgsap.set(anim, {\n\t\t\t\tbackground: 'radial-gradient(at 10% 10%, ' + randomcolors[0] + ' 0%, ' + randomcolors[1] + ' 100%)'\n\t\t\t})\n\n\t\t\tgsap.to(anim, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length / 2,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, 0)\n\n\t\t\t// Scroll animation wrap section\n\t\t\tvar screen = gsap.matchMedia()\n\t\t\tscreen.add(\"(min-aspect-ratio: 1/1)\", () => {\n\t\t\t\tscroll.push(tl => {\n\t\t\t\t\ttl.fromTo(el.children, {\n\t\t\t\t\t\ty: window.innerHeight * 1 / 5\n\t\t\t\t\t}, {\n\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\tease: \"ease.out\"\n\t\t\t\t\t}, 0)\n\t\t\t\t\treturn tl\n\t\t\t\t}, tl => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: el,\n\t\t\t\t\t\tstart: \"0 100%-=100px\",\n\t\t\t\t\t\tend: \"0 100%-=100px\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: 2\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t\t\tscreen.add(\"(max-aspect-ratio: 1/1)\", () => {\n\t\t\t\tscroll.push(tl => {\n\t\t\t\t\ttl.fromTo(el.children, {\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t}, {\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t}, 0)\n\t\t\t\t\treturn tl\n\t\t\t\t}, tl => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: el,\n\t\t\t\t\t\tstart: \"0 100%-=100px\",\n\t\t\t\t\t\tend: \"100px 100%-=100px\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: 1\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tscroll.push(function (tl) {\n\t\t\t\tif (el.querySelector(\".big\")) {\n\t\t\t\t\tvar number = Number(el.querySelector(\".big\").textContent)\n\t\t\t\t\tif (number > 0) {\n\t\t\t\t\t\tvar load = { progress: 0 }\n\t\t\t\t\t\tvar duration = 1\n\t\t\t\t\t\tif (number >= 500 && number < 1000) duration = 2\n\t\t\t\t\t\telse if (number >= 1000 && number < 99999) duration = 3\n\t\t\t\t\t\telse if (number >= 99999) duration = 4\n\t\t\t\t\t\ttl.to(load, {\n\t\t\t\t\t\t\tprogress: number,\n\t\t\t\t\t\t\tsnap: \"progress\",\n\t\t\t\t\t\t\tease: \"power3.out\",\n\t\t\t\t\t\t\tduration: duration,\n\t\t\t\t\t\t\tonUpdate: () => {\n\t\t\t\t\t\t\t\tel.querySelector(\".big\").textContent = plural(load.progress)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"0 100%-=100px\",\n\t\t\t\t\tend: \"100px 100%-=100px\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\ttoggleActions: \"play none none none\"\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\t// Scroll animation line section\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(el.querySelectorAll(\"i\"), {\n\t\t\t\t\tx: \"-100%\"\n\t\t\t\t}, {\n\t\t\t\t\tx: \"0%\",\n\t\t\t\t\tease: \"ease.out\"\n\t\t\t\t}, 0)\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"100% 100%\",\n\t\t\t\t\tend: \"100% 0\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: 1\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tif (hasClass(el, 'drawgraph')) {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(el.querySelector(\".graph\"), {\n\t\t\t\t\ty: 100\n\t\t\t\t}, {\n\t\t\t\t\ty: 0\n\t\t\t\t}, 0)\n\n\t\t\t\ttl.fromTo(el.querySelector(\".graph i\"), {\n\t\t\t\t\theight: \"0%\"\n\t\t\t\t}, {\n\t\t\t\t\theight: el.querySelector(\".graph i\").getAttribute(\"data-number\") + \"%\"\n\t\t\t\t}, 0)\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"50% 100%\",\n\t\t\t\t\tend: \"100% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: 1\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tif (hasClass(el, 'coins')) {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(el.querySelector(\".big\"), {\n\t\t\t\t\ty: \"50%\"\n\t\t\t\t}, {\n\t\t\t\t\ty: 0,\n\t\t\t\t\tease: \"power3.out\"\n\t\t\t\t}, 0)\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"50% 100%\",\n\t\t\t\t\tend: \"100% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: 2\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\t// Capture function\n\t\tthis.capture(el)\n\n\t\tscroll.refresh()\n\t}\n\n\tcapture(el) {\n\t\tvar capture = el.querySelector(\".capture small\")\n\t\tif (!capture) return\n\n\t\tcapture.onclick = async () => {\n\t\t\tif (capture.generating) return\n\n\t\t\t// Informing user the process is starting\n\t\t\tcapture.generating = true\n\t\t\tdocument.body.style.cursor = \"wait\"\n\n\t\t\t// HTML to Canvas magic\n\t\t\tcapture.innerHTML = \"Processing...\"\n\t\t\tvar canvas = await html2canvas(el.querySelector(\".anim\"), {\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tlogging: false,\n\t\t\t\tproxy: `${api.url}?img=`,\n\t\t\t\tuseCORS: true\n\t\t\t})\n\n\t\t\t// Download the output\n\t\t\tvar link = document.createElement(\"a\")\n\t\t\tlink.style.display = \"none\"\n\t\t\tlink.download = \"replurk\" + this.year + \"-\" + Date.now() + \".png\"\n\t\t\tlink.href = canvas.toDataURL()\n\t\t\tdocument.body.appendChild(link)\n\t\t\tlink.click()\n\t\t\tdocument.body.removeChild(link)\n\t\t\tlink.remove()\n\n\t\t\t// Reset button after 3s\n\t\t\tcapture.innerHTML = \"Done\"\n\t\t\tdocument.body.style.cursor = \"default\"\n\t\t\tsetTimeout(() => {\n\t\t\t\tcapture.innerHTML = \"Recapture\"\n\t\t\t\tcapture.generating = false\n\t\t\t}, 3000)\n\t\t}\n\t}\n\n\twrapper(style, text, background) {\n\t\treturn `<div class=\"statistics middle statistics-wrap ${style}\">\\\n\t\t\t<div class=\"anim\" ${background ? `style=\"background-images:url(${background})\"` : ``}>${text}</div>\\\n\t\t\t<div class=\"capture\"><small>Capture</small></div>\\\n\t\t</div>`\n\t}\n\n\tdraw(style, number, text, background) {\n\t\tif (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n\t\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style, `\\\n\t\t\t\t<p>\\\n\t\t\t\t\t<span class=\"big\">${number}</span>\\\n\t\t\t\t\t<span class=\"text\">${text}</span>\\\n\t\t\t\t</p>\\\n\t\t\t`), background)\n\t\t}\n\t}\n\n\tdrawDiv(style, text) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style, '<div class=\"box\">' + text + '</div>'))\n\t}\n\n\tdrawGraph(style, number, text) {\n\t\tif (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n\t\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawgraph movetitle\", '\\\n\t\t\t\t<p>\\\n\t\t\t\t\t<span class=\"graph\"><i data-number=\"' + number + '\"></i></span>\\\n\t\t\t\t\t<span class=\"info\">' + text + '</span>\\\n\t\t\t\t</p>\\\n\t\t\t'))\n\t\t}\n\t}\n\n\tdrawImage(style, image, link, title, text, badge) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawimage\", '\\\n\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t<span class=\"avatar\"><img src=\"' + image + '\" /></span>\\\n\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t</a>\\\n\t\t'))\n\t}\n\n\tdrawHTML(style, title, html) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawhtml\", '\\\n\t\t\t<div>\\\n\t\t\t\t<div class=\"htmlcontent\">' + html + '</div>\\\n\t\t\t\t<div class=\"title\">' + title + '</div>\\\n\t\t\t</div>\\\n\t\t'))\n\t}\n\n\tdrawLink(style, link, title, text, badge) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawlink\", '\\\n\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t<span>' + text + '</span>\\\n\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t</a>\\\n\t\t'))\n\t}\n\n\tdrawPost(style, id, title, text, badge) {\n\t\tvar url = \"\"\n\t\tif (id) url = 'https://plurk.com/p/' + id.toString(36)\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawpost\", '\\\n\t\t\t<div>\\\n\t\t\t\t<a href=\"' + url + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>\\\n\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t<p class=\"post\">' + text + '</p>\\\n\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t</div>\\\n\t\t'))\n\t}\n\n\tasync drawUserList(style, id, title, users) {\n\t\tvar html = \"\"\n\t\tvar max = users.length >= 5 ? 5 : users.length\n\t\tvar length = reduceMotionFilter(1)\n\n\t\tthis.drawHTML(`${style} drawuserlist movetitle ${id}`, title, \"<span class='info'>Downloading user data</span>\")\n\t\tfor (var index = 0; index < max; index++) {\n\t\t\tlet user = users[index]\n\t\t\tlet friend = await this.friends.find(user.id)\n\t\t\tif (friend) {\n\t\t\t\tvar plurker = new element(user.id, friend, \"\", plurker => {\n\t\t\t\t\tplurker.avatar = new span()\n\t\t\t\t\t\t.class(\"avatar\")\n\t\t\t\t\t\t.html(`<img src=\"${this.friends.getAvatar(plurker.user.id)}\" />`)\n\t\t\t\t\tplurker.name = new span()\n\t\t\t\t\t\t.class(\"name\")\n\t\t\t\t\t\t.html(`${plurker.user.display_name}`)\n\t\t\t\t\tplurker.counts = new span()\n\t\t\t\t\t\t.class(\"count\")\n\t\t\t\t\t\t.html(`${user.count}`)\n\n\t\t\t\t\tplurker.el.appendChild(plurker.avatar.el)\n\t\t\t\t\tplurker.el.appendChild(plurker.name.el)\n\t\t\t\t\tplurker.el.appendChild(plurker.counts.el)\n\t\t\t\t\tplurker.el.setAttribute(\"href\", `https://plurk.com/${plurker.user.nick_name}`)\n\t\t\t\t})\n\t\t\t\tplurker.create()\n\t\t\t\thtml += plurker.el.outerHTML\n\t\t\t} else {\n\t\t\t\tmax++\n\t\t\t}\n\t\t}\n\t\tthis.el.querySelector(`.${id} .htmlcontent`).innerHTML = html\n\n\t\t// Stagger animation\n\t\tif (id == 'mostinteraction' || id == 'mvp') {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n\t\t\t\t\tscale: .3,\n\t\t\t\t\topacity: 0\n\t\t\t\t}, {\n\t\t\t\t\tscale: 1,\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tease: \"elastic.out(1.2, 0.5)\",\n\t\t\t\t\tduration: length * 3 / 4,\n\t\t\t\t\tstagger: {\n\t\t\t\t\t\tamount: length / 3,\n\t\t\t\t\t\tfrom: \"end\"\n\t\t\t\t\t}\n\t\t\t\t}, 0)\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: this.el.querySelector(\".\" + id),\n\t\t\t\t\tstart: \"50% 100%\",\n\t\t\t\t\tend: \"50% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\ttoggleActions: \"play none none reverse\"\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n\t\t\t\t\ty: 50,\n\t\t\t\t\topacity: 0\n\t\t\t\t}, {\n\t\t\t\t\ty: 0,\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tduration: length,\n\t\t\t\t\tease: \"power3.out\",\n\t\t\t\t\tstagger: length / 3\n\t\t\t\t}, 0)\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: this.el.querySelector(\".\" + id),\n\t\t\t\t\tstart: \"0% 100%\",\n\t\t\t\t\tend: \"0% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\ttoggleActions: \"play none none reverse\"\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tattach(charttitle, node, max) {\n\t\tvar id = node.id\n\t\tvar chart\n\t\tvar title\n\t\tvar text\n\t\tvar anim\n\t\tvar wrapper\n\t\tvar capture\n\t\tvar opacity = 0\n\t\tvar position = max\n\t\tvar zIndex = 0\n\t\tvar hidden = true\n\n\t\tif (node.position <= max) {\n\t\t\thidden = false\n\t\t\tzIndex = position = (node.position - 1)\n\t\t\topacity = 1\n\t\t}\n\n\t\t// Create the box\n\t\tif (!this.next.querySelector(`.${id}`)) {\n\t\t\tchart = document.createElement('div')\n\t\t\tchart.setAttribute('class', 'chart')\n\n\t\t\ttitle = document.createElement('div')\n\t\t\ttitle.classList.add('title')\n\t\t\ttitle.innerHTML = charttitle\n\n\t\t\ttext = document.createElement('div')\n\t\t\ttext.classList.add('text')\n\t\t\ttext.appendChild(chart)\n\t\t\ttext.appendChild(title)\n\n\t\t\tanim = document.createElement('div')\n\t\t\tanim.classList.add('anim')\n\t\t\tanim.appendChild(text)\n\n\t\t\ttext = document.createElement('small')\n\t\t\ttext.innerHTML = \"Capture\"\n\n\t\t\tcapture = document.createElement('div')\n\t\t\tcapture.classList.add('capture')\n\t\t\tcapture.appendChild(text)\n\n\t\t\twrapper = document.createElement('div')\n\t\t\twrapper.classList.add(\"statistics\", \"middle\", \"statistics-wrap\", \"attach\", id)\n\t\t\twrapper.appendChild(anim)\n\t\t\twrapper.appendChild(capture)\n\n\t\t\tthis.el.insertAdjacentElement(\"beforeend\", wrapper)\n\t\t}\n\n\t\t// Add  element\n\t\tif (!hidden && !node.attached) {\n\t\t\tvar maxTop = max / (max - 1) * 100\n\n\t\t\tnode.insertTo(this.el.querySelector(`.${id} .chart`))\n\n\t\t\tgsap.set(node.el, {\n\t\t\t\ttop: maxTop + \"%\",\n\t\t\t\topacity: 0,\n\t\t\t\tzIndex: 0,\n\t\t\t})\n\t\t}\n\t\t// Update position\n\t\tif (!hidden || !node.hidden) {\n\t\t\tvar currentTop = position / (max - 1) * 100\n\t\t\tvar length = reduceMotionFilter(1)\n\n\t\t\tgsap.killTweensOf(node.el)\n\t\t\tgsap.to(node.el, {\n\t\t\t\ttop: currentTop + \"%\",\n\t\t\t\topacity: opacity,\n\t\t\t\tzIndex: zIndex,\n\t\t\t\tduration: length / 2,\n\t\t\t\tease: \"power3.out\",\n\t\t\t\tonComplete: function () {\n\t\t\t\t\tif (hidden) {\n\t\t\t\t\t\tnode.destroy()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tnode.hidden = hidden\n\t\t}\n\n\t\tnode.update()\n\t}\n\n\tasync drawAll(plurks) {\n\t\tvar response_percentage = Math.round((this.plurks_count - this.noresponse_count) / this.plurks_count * 100)\n\n\t\tthis.most.responses.draw(plurks)\n\t\tthis.drawGraph('center graph percentage', response_percentage, 'Around <i>' + response_percentage + '%</i> of my plurks got <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> responses ' + ((response_percentage <= 50) ? '<img src=\"https://api.iconify.design/fluent-emoji:crying-face.svg\" />' : '<img src=\"https://api.iconify.design/fluent-emoji:star-struck.svg\" />'))\n\n\t\tthis.draw('spansmall recievereplurk', this.replurker_count, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + plural(this.replurker_count, 'replurk') + '</i>')\n\t\tthis.most.replurk.draw(plurks)\n\n\t\tthis.most.favorite.draw(plurks)\n\t\tthis.draw('spansmall recievelove', this.favourite_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + plural(this.favourite_count, 'love') + '</i>')\n\n\t\tthis.draw('spansmall privateplurk', this.private_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:lip.svg\" /> ' + plural(this.private_count, 'private plurk') + '</i>')\n\t\tthis.draw('spansmall whisper', this.whispers_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-in-clouds.svg\" /> ' + plural(this.whispers_count, 'whisper') + '</i>')\n\t\tthis.draw('spansmall porn', this.porn_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg\" /> ' + plural(this.porn_count, 'adult plurk') + '</i>')\n\n\t\tthis.draw('span2 responsecount', `${this.plurks_count} &rarr; ${this.response_count}`, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(this.response_count, 'response') + '</i> from <i>' + plural(this.plurks_count, 'plurk') + '</i>')\n\t\tthis.draw('spansmall center coins', this.coins_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:coin.svg\" /> ' + plural(this.coins_count, 'coin') + '</i>')\n\n\t\tif (this.favorite_list.length > 0) this.drawUserList(\"avatar\", \"loved\", 'These Plurkers <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Loved</i> My Posts', this.favorite_list.sort(this.most.sort))\n\t\tif (this.replurker_list.length > 0) this.drawUserList(\"avatar\", \"replurked\", 'These Plurkers likes to <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Replurked</i> My Posts', this.replurker_list.sort(this.most.sort))\n\t}\n}\n\nexport default statistics","\"use strict\";\n\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js';\nimport api from \"../helpers/api.js\";\nimport scroll from \"../helpers/scroll.js\";\nimport darkmode from \"../helpers/darkmode.js\";\nimport animate from \"../helpers/animate.js\";\nimport { _q, _qAll, plural, monthNames, datediff, pluralinwords, reduceMotionFilter } from '../helpers/helper.js';\n\nimport iconLink from \"./icons.js\";\nimport span from \"./span.js\";\nimport element from \"./element.js\";\nimport friends from \"./friends.js\";\nimport statistics from \"./statistics.js\";\n\n/*\n\tReplurk class\n*/\nclass replurk {\n\t// Draw in which element?\n\tnext = document.createElement('div');\n\t// Plurks array\n\tplurks = [];\n\t// Plurker profile object\n\tme = { \"id\": 3203568, \"has_profile_image\": 1, \"timeline_privacy\": 0, \"nick_name\": \"dwan\", \"display_name\": \"Dwan\", \"date_of_birth\": \"Sat, 29 Oct 1983 00:01:00 GMT\", \"avatar\": 41917598, \"gender\": 1, \"karma\": 199.24, \"premium\": true, \"verified_account\": false, \"dateformat\": 3, \"default_lang\": \"en\", \"friend_list_privacy\": \"public\", \"name_color\": \"FFA59A\", \"full_name\": \"Dwan B.\", \"location\": \"Tel Aviv-Yafo, Dan, Israel\", \"timezone\": \"Asia/Jerusalem\", \"phone_verified\": 0, \"bday_privacy\": 1, \"plurks_count\": 14598, \"response_count\": 79484, \"pinned_plurk_id\": 0, \"background_id\": 0, \"show_ads\": false, \"show_location\": 0, \"profile_views\": 36112, \"avatar_small\": \"https://avatars.plurk.com/3203568-small41917598.gif\", \"avatar_medium\": \"https://avatars.plurk.com/3203568-medium41917598.gif\", \"avatar_big\": \"https://avatars.plurk.com/3203568-big41917598.jpg\", \"about\": \"Mr. Goat\\u2019s dad and full-time husband\", \"about_renderred\": \"Mr. Goat\\u2019s dad and full-time husband\", \"page_title\": \"The world revolve around me\", \"recruited\": 14, \"relationship\": \"married\", \"friends_count\": 571, \"fans_count\": 498, \"join_date\": \"Wed, 15 Oct 2008 07:48:05 GMT\", \"privacy\": \"world\", \"accept_private_plurk_from\": \"all\", \"post_anonymous_plurk\": false, \"badges\": [\"10_invites\", \"14\", \"9\", \"10000_views\", \"10000_plurks\", \"50000_comments\", \"upload_profile_image\", \"50_fans\", \"coin\"], \"link_facebook\": false, \"setup_facebook_sync\": false, \"setup_twitter_sync\": false, \"setup_weibo_sync\": false, \"filter\": { \"porn\": 2, \"anonymous\": 0, \"keywords\": null }, \"anniversary\": { \"years\": 13, \"days\": 27 }, \"phone_number\": null, \"creature\": 0, \"creature_url\": null, \"creature_special\": 1, \"creature_special_url\": null };\n\n\t// Friends object\n\tfriends = new friends()\n\n\t// Statistics plurker object renderer\n\tstatistics = new statistics()\n\n\t// Most statistics object renderer\n\tmost = {\n\t\tparent: this,\n\t\tsort: (a, b) => b.count - a.count,\n\t\t// Find and count all based on regex\n\t\tfindregex: function (regex, replace, content, storage) {\n\t\t\tvar result = content.match(regex);\n\n\t\t\tfor (var index in result) {\n\t\t\t\tvar value = replace(result[index]);\n\t\t\t\tvar idx = storage.findIndex(el => el.value == value);\n\n\t\t\t\tif (idx < 0) {\n\t\t\t\t\tstorage.push({\n\t\t\t\t\t\tid: value,\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tcount: 1\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tstorage[idx].count++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\tinit: function () {\n\t\t\tthis.responders.data = [];\n\t\t\tthis.mentions.data = [];\n\t\t\tthis.mentions.dataAll = [];\n\t\t\tthis.myemoticons.data = [];\n\t\t\tthis.hashtags.data = [];\n\t\t\tthis.links.links = [];\n\t\t\tthis.links.pics = [];\n\t\t\tthis.types.words = 0;\n\t\t\tthis.types.chars = 0;\n\t\t},\n\t\tcountAll: async function (data) {\n\t\t\t// Find and count all my emoticons from my post\n\t\t\tif (data.user_id == this.parent.me.id) this.myemoticons.count(data.content);\n\t\t\t// Find and count all mentions from my post\n\t\t\tawait this.mentions.count(data.content_raw);\n\t\t\t// Find and count all hashtags from my post\n\t\t\tif (data.user_id == this.parent.me.id) this.hashtags.count(data.content);\n\t\t\t// Find and count all links and pictures post from my post\n\t\t\tif (data.user_id == this.parent.me.id) this.links.count(data.content, data.plurk_id, data.response_count, data.replurkers_count, data.favorite_count);\n\t\t\t// Find and count characther and words from my post\n\t\t\tif (data.user_id == this.parent.me.id) this.types.count(data.content_raw);\n\t\t},\n\t\tresponders: {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: async function (response) {\n\t\t\t\tvar index = this.data.findIndex(function (el) {\n\t\t\t\t\treturn el.user_id == response.user_id;\n\t\t\t\t});\n\n\t\t\t\tif (index < 0) {\n\t\t\t\t\tlet friends = this.parent.friends\n\t\t\t\t\tvar user = await friends.find(response.user_id);\n\t\t\t\t\tthis.data.push(new element('mostresponders', user, friends.getAvatar(user.id)));\n\t\t\t\t} else {\n\t\t\t\t\tthis.data[index].count++;\n\t\t\t\t}\n\t\t\t\tthis.data.sort(this.parent.most.sort);\n\n\t\t\t\t// Update top 5\n\t\t\t\tvar index = 1;\n\t\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\t\tthis.data[i].position = this.data.length;\n\t\t\t\t\tif (this.data[i].user_id != this.parent.me.id && this.data[i].user_id != 99999) {\n\t\t\t\t\t\tthis.data[i].position = index++;\n\t\t\t\t\t\tthis.parent.statistics.attach('<i>Top <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> Responders</i> <strong>of My Timeline</strong>', this.data[i], 5);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tlet friends = this.parent.friends\n\t\t\t\tvar index = 0;\n\t\t\t\tif (this.data.length > 0) {\n\t\t\t\t\twhile ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n\t\t\t\t\tif (this.data[index]) this.parent.statistics.drawImage(\"avatar\", friends.getAvatar(this.data[index].user_id), 'https://plurk.com/' + this.data[index].user.nick_name, '<i>Most Responder</i>', this.data[index].user.display_name, this.data[index].count);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmentions: {\n\t\t\tdata: [],\n\t\t\tdataAll: [],\n\t\t\tparent: this,\n\t\t\tcount: async function (content) {\n\t\t\t\tvar result = this.parent.most.findregex(/\\@(\\w{1,30})[\\ |\\:]/g, value => value.replace(/\\@|\\ |\\:/g, ''), content, this.data);\n\t\t\t\tvar max = 5;\n\t\t\t\tvar index = 1;\n\n\t\t\t\tif (result) {\n\t\t\t\t\t// Update top 5\n\t\t\t\t\tthis.data.sort(this.parent.most.sort);\n\t\t\t\t\tfor (var idx = 0; idx < this.data.length; idx++) {\n\t\t\t\t\t\tthis.data[idx].position = this.data.length;\n\n\t\t\t\t\t\tif (index <= max) {\n\t\t\t\t\t\t\tlet friends = this.parent.friends\n\t\t\t\t\t\t\tvar user = await friends.findByUsername(this.data[idx].value);\n\n\t\t\t\t\t\t\tif (this.data[idx].el == undefined) {\n\t\t\t\t\t\t\t\tthis.data[idx] = new element('mostmentionedbyme', user, \"\", plurker => {\n\t\t\t\t\t\t\t\t\tplurker.avatar = new span().class(\"avatar\").html(`<img src=\"${friends.getAvatar(plurker.user_id)}\" />`);\n\t\t\t\t\t\t\t\t\tplurker.name = new span().class(\"name\").html(`@${plurker.nick_name}`);\n\t\t\t\t\t\t\t\t\tplurker.counts = new span().class(\"count\").html(plurker.count);\n\t\t\t\t\t\t\t\t\tplurker.el.appendChild(plurker.avatar.el);\n\t\t\t\t\t\t\t\t\tplurker.el.appendChild(plurker.name.el);\n\t\t\t\t\t\t\t\t\tplurker.el.appendChild(plurker.counts.el);\n\t\t\t\t\t\t\t\t\tplurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.nick_name);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (user.id != this.parent.me.id && user.id != 99999) {\n\t\t\t\t\t\t\t\tthis.data[idx].position = index++;\n\t\t\t\t\t\t\t\tthis.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/fluent-emoji:person-raising-hand-light.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.data[idx].el) this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/fluent-emoji:person-raising-hand-light.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tlet friends = this.parent.friends\n\t\t\t\tvar index = 0;\n\t\t\t\tif (this.data.length > 0) {\n\t\t\t\t\twhile ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n\t\t\t\t\tif (this.data[index]) this.parent.statistics.drawImage(\"avatar\", friends.getAvatarByUsername(this.data[index].value), 'https://plurk.com/' + this.data[index].value, '<i>Most Mentioned</i> by me', \"@\" + this.data[index].value, this.data[index].count);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmyemoticons: {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (content) {\n\t\t\t\tthis.parent.most.findregex(/emoticon_my\\\" src=\\\"(.*?)\\\"/g, function (value) {\n\t\t\t\t\treturn value.replace(/emoticon_my\\\" src=\\\"|\\\"/gi, '');\n\t\t\t\t}, content, this.data);\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar html = \"\";\n\t\t\t\tvar max = 7;\n\t\t\t\tthis.data.sort(this.parent.most.sort);\n\t\t\t\tfor (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n\t\t\t\t\tif (this.data[i].count > 1) html += '<div><img src=\"' + this.data[i].value + '\" /> <span class=\"count\">' + this.data[i].count + '</span></div>';\n\t\t\t\tif (html != \"\") this.parent.statistics.drawHTML(\"smallspan grid emoticons\", 'Most Used <i>My Emoticons</i>', html);\n\t\t\t}\n\t\t},\n\t\thashtags: {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (content) {\n\t\t\t\tthis.parent.most.findregex(/hashtag\\\"\\>(.*?)\\</g, function (value) {\n\t\t\t\t\treturn value.replace(/hashtag\\\"\\>\\#|\\.\\<|\\</g, '');\n\t\t\t\t}, content, this.data);\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar html = \"\";\n\t\t\t\tvar max = 5;\n\t\t\t\tthis.data.sort(this.parent.most.sort);\n\t\t\t\tfor (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n\t\t\t\t\tif (this.data[i].count > 1) html += '<div><a href=\"https://plurk.com/search?q=' + this.data[i].value + '\" target=\"_BLANK\" /><span class=\"count\">' + this.data[i].count + '</span> #' + this.data[i].value + '</a></div>';\n\t\t\t\tif (html != \"\") {\n\t\t\t\t\thtml = \"<strong>#</strong>\" + html;\n\t\t\t\t\tthis.parent.statistics.drawHTML(\"hashtags\", 'Most Used <i>Hashtags</i>', html);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tlinks: {\n\t\t\tdata: [],\n\t\t\tlinks: [],\n\t\t\tpics: [],\n\t\t\tparent: this,\n\t\t\tcount: function (content, id, response, replurk, loved) {\n\t\t\t\tvar result = content.match(/href\\=\\\"(.*?)\\\"\\ class=\\\"(.*?)\\\"\\ rel/g);\n\t\t\t\tvar count = 0;\n\t\t\t\tvar pics = [];\n\t\t\t\tvar links = [];\n\n\t\t\t\tif (result) for (var data of result) {\n\t\t\t\t\tif (!this.data[id]) {\n\t\t\t\t\t\tcount = response + (replurk * 250) + (loved * 50);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.includes(\"pictureservices\")) {\n\t\t\t\t\t\tthis.pics.push(data);\n\t\t\t\t\t\tif (count > 0) {\n\t\t\t\t\t\t\tvar pic = data.split('\\\"')\n\t\t\t\t\t\t\tpics.push({\n\t\t\t\t\t\t\t\turl: pic[1],\n\t\t\t\t\t\t\t\tresponse: response,\n\t\t\t\t\t\t\t\treplurk: replurk,\n\t\t\t\t\t\t\t\tloved: loved\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.links.push(data);\n\t\t\t\t\t\tif (count > 0) {\n\t\t\t\t\t\t\tvar link = data.split('\\\"')\n\t\t\t\t\t\t\tlinks.push({\n\t\t\t\t\t\t\t\turl: link[1],\n\t\t\t\t\t\t\t\tresponse: response,\n\t\t\t\t\t\t\t\treplurk: replurk,\n\t\t\t\t\t\t\t\tloved: loved\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (count) this.data.push({\n\t\t\t\t\tid: id,\n\t\t\t\t\tpics: pics,\n\t\t\t\t\tlinks: links,\n\t\t\t\t\tcount: count,\n\t\t\t\t\tcontent: content\n\t\t\t\t});\n\t\t\t},\n\t\t\tdrawLinks: function () {\n\t\t\t\tvar max = 1;\n\t\t\t\tvar index = 0;\n\t\t\t\tvar result = \"\";\n\t\t\t\tthis.data.sort(this.parent.most.sort);\n\t\t\t\twhile (index < this.data.length && max > 0) {\n\t\t\t\t\tif (this.data[index].links.length > 0) {\n\t\t\t\t\t\tvar link = this.data[index].links[0];\n\t\t\t\t\t\tvar url = '<a href=\"https://plurk.com/p/' + this.data[index].id.toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n\t\t\t\t\t\tresult += '<div class=\"post\"><div class=\"info\">' + this.data[index].content + '</div><div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + link.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + link.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + link.loved + '</span>' + url + '</div></div>';\n\t\t\t\t\t\tmax--;\n\t\t\t\t\t}\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\tif (this.links.length > 0) this.parent.statistics.drawDiv('spansmall sharedlinks', \"<div class='title'>I shared <i>🔗 \" + plural(this.links.length, 'link') + '</i> and this is the most popular one</div>' + result);\n\t\t\t},\n\t\t\tdrawPics: function () {\n\t\t\t\tvar max = 1;\n\t\t\t\tvar index = 0;\n\t\t\t\tvar result = \"\";\n\t\t\t\tthis.data.sort(this.parent.most.sort);\n\t\t\t\twhile (index < this.data.length && max > 0) {\n\t\t\t\t\tif (this.data[index].pics.length > 0) {\n\t\t\t\t\t\tvar pics = this.data[index].pics[0];\n\t\t\t\t\t\tvar url = '<a href=\"https://plurk.com/p/' + this.data[index].toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n\t\t\t\t\t\tresult += '<div class=\"box\"><div class=\"image\" style=\"background-image: url(' + api.url + \"?img=\" + pics.url + ')\"></div><div class=\"post\">' + this.data[index].content + '<div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + pics.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + pics.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + pics.loved + '</span>' + url + '</div></div></div>';\n\t\t\t\t\t\tmax--;\n\t\t\t\t\t}\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\n\t\t\t\tif (this.pics.length > 0) this.parent.statistics.draw('spansmall sharedpictures', this.pics.length, 'I shared <i>🖼 ' + plural(this.pics.length, 'image') + '</i>');\n\t\t\t\tif (result != \"\") this.parent.statistics.drawHTML('span2 previewpics', '<i>🖼 Most Popular Image</i>', result);\n\t\t\t}\n\t\t},\n\t\ttypes: {\n\t\t\twords: 0,\n\t\t\tchars: 0,\n\t\t\tparent: this,\n\t\t\tcount: function (content) {\n\t\t\t\tvar words = content.split(\" \");\n\n\t\t\t\tthis.chars += content.length;\n\t\t\t\tthis.words += words.length;\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tif (this.chars > 0) this.parent.statistics.draw('span2 mediumnumber', this.chars, 'I typed more than  <i>' + pluralinwords(this.chars, 'character') + '</i>, around <i>' + pluralinwords(this.words, 'word') + '</i> this year');\n\t\t\t}\n\t\t},\n\t\tresponses: {\n\t\t\tparent: this,\n\t\t\tsort: (a, b) => b.replurkers_count - a.replurkers_count,\n\t\t\tdraw: function (posts) {\n\t\t\t\tvar post\n\t\t\t\tposts.sort(this.sort)\n\t\t\t\tif (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.response_count > 0) {\n\t\t\t\t\tthis.parent.statistics.drawPost('postcontent span2 mostresponded', post.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> Most Responded</i> ' + datediff(post.posted), post.content, post.response_count);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\treplurk: {\n\t\t\tparent: this,\n\t\t\tsort: (a, b) => b.replurkers_count - a.replurkers_count,\n\t\t\tdraw: function (posts) {\n\t\t\t\tvar post\n\t\t\t\tposts.sort(this.sort);\n\t\t\t\tif (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.replurkers_count > 0) {\n\t\t\t\t\tthis.parent.statistics.drawPost('postcontent span2 mostreplurked', post.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Most Replurked</i> ' + datediff(post.posted), post.content, post.replurkers_count);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tfavorite: {\n\t\t\tparent: this,\n\t\t\tsort: (a, b) => b.favorite_count - a.favorite_count,\n\t\t\tdraw: function (posts) {\n\t\t\t\tvar post\n\t\t\t\tposts.sort(this.sort);\n\t\t\t\tif (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.favorite_count > 0) {\n\t\t\t\t\tthis.parent.statistics.drawPost('postcontent span2 mostfavorited', post.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Most Loved</i> ' + datediff(post.posted), post.content, post.favorite_count);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tinteraction: {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (response) {\n\t\t\t\tvar index = this.data.findIndex(function (el) {\n\t\t\t\t\treturn el.id == response.user_id;\n\t\t\t\t});\n\n\t\t\t\tif (index < 0) {\n\t\t\t\t\tthis.data.push({\n\t\t\t\t\t\tid: response.user_id,\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tmultiplier: 1,\n\t\t\t\t\t\tplurk_id: response.plurk_id\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tif (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier++;\n\t\t\t\t\telse this.data[index].multiplier = 1;\n\t\t\t\t\tthis.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n\t\t\t\t}\n\t\t\t\tthis.data.sort(this.parent.most.sort);\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar result = [];\n\t\t\t\tvar length = 0;\n\t\t\t\tvar index = 0;\n\t\t\t\twhile (this.data[index] && length <= 5) {\n\t\t\t\t\tif (this.data[index].id != this.parent.me.id) {\n\t\t\t\t\t\tresult.push(this.data[index]);\n\t\t\t\t\t\tlength++;\n\t\t\t\t\t}\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tif (result.length > 0) this.parent.statistics.drawUserList(\"bubble span2\", \"mostinteraction\", \"Plurkers who really like to <i><img src='https://api.iconify.design/fluent-emoji:speaking-head.svg' /> interact</i> with me\", result);\n\t\t\t\t} catch {\n\t\t\t\t\tconsole.info(\"Error while counting most interacted plurker\");\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmvp: {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (response, type) {\n\t\t\t\tvar index = this.data.findIndex(function (el) {\n\t\t\t\t\treturn el.id == response.user_id;\n\t\t\t\t});\n\n\t\t\t\tif (index < 0) {\n\t\t\t\t\tthis.data.push({\n\t\t\t\t\t\tid: response.user_id,\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tmultiplier: 1,\n\t\t\t\t\t\tplurk_id: response.plurk_id\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tif (type == \"replurk\") {\n\t\t\t\t\t\tthis.data[index].count += (response.count * 250);\n\t\t\t\t\t} else if (type == \"favorite\") {\n\t\t\t\t\t\tthis.data[index].count += (response.count * 50);\n\t\t\t\t\t} else if (response.content_raw.length > 16) {\n\t\t\t\t\t\tif (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier += .5;\n\t\t\t\t\t\telse this.data[index].multiplier = .5;\n\t\t\t\t\t\tthis.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.data.sort(this.parent.most.sort);\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar result = [];\n\t\t\t\tvar length = 0;\n\t\t\t\tvar index = 0;\n\t\t\t\twhile (this.data[index] && length <= 5) {\n\t\t\t\t\tif (this.data[index].id != this.parent.me.id) {\n\t\t\t\t\t\tresult.push(this.data[index]);\n\t\t\t\t\t\tlength++;\n\t\t\t\t\t}\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tif (result.length > 0) this.parent.statistics.drawUserList(\"bubble span3\", \"mvp\", \"My \" + this.parent.year + \" <i><img src='https://api.iconify.design/fluent-emoji:biting-lip.svg' /> MVP</i>\", result);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.info(\"Error while counting my mvp\", error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Inactive plurker object\n\tinactive = {\n\t\tdraw: (data, year) => {\n\t\t\tthis.statistics.draw('inactive', year + \" &#8617;\", 'I\\'ve been inactive since ' + year + ' <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n\t\t\tthis.statistics.drawPost('postcontent span2 inactivemore', data.plurk_id, '<i>My last Plurk</i> ' + datediff(data.posted), data.content, data.response_count);\n\t\t},\n\t\tempty: () => {\n\t\t\tthis.statistics.draw('inactive', '-', 'I didn\\'t post anything at this year <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n\t\t}\n\t}\n\n\t// Loading object\n\tloading = {\n\t\tcount: 0,\n\t\tprev_count: 0,\n\t\tcounts: -1,\n\t\tclean: false,\n\t\tnext: document.createElement('div'),\n\t\tparent: this,\n\t\tisComplete: function () { return this.count == this.counts },\n\t\tinit: function (next) {\n\t\t\tthis.count = 0;\n\t\t\tthis.prev_count = 0;\n\t\t\tthis.counts = -1;\n\t\t\tthis.clean = false;\n\t\t\tthis.next = next;\n\t\t},\n\t\tdraw: function (item) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tvar length = reduceMotionFilter(1);\n\t\t\t\tthis.prev_count = item;\n\n\t\t\t\tif (!this.next.querySelector(\".statistics.statistics-loading\")) {\n\t\t\t\t\tthis.parent.statistics.draw(\"statistics-loading\", item + \"%\", \"<i class='month'>Data from \" + this.year + \"</i>. Loading. <small>As long as you didn't close this browser tab, You can resume later by refreshing this page.</small>\");\n\t\t\t\t}\n\n\t\t\t\t// Animate loading\n\t\t\t\tvar load = { progress: this.prev_count };\n\t\t\t\tgsap.to(load, {\n\t\t\t\t\tprogress: Math.round(item),\n\t\t\t\t\tsnap: \"progress\",\n\t\t\t\t\tease: \"linear\",\n\t\t\t\t\tduration: length / 4,\n\t\t\t\t\tonUpdate: () => {\n\t\t\t\t\t\tvar el = this.next.querySelector(\".statistics-loading .big\");\n\t\t\t\t\t\tif (el) el.innerHTML = load.progress + \"%\";\n\t\t\t\t\t},\n\t\t\t\t\tonComplete: async () => {\n\t\t\t\t\t\tif (this.clean) await this.done();\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tloop: async function (length) {\n\t\t\tthis.clean = true;\n\t\t\tthis.counts = length;\n\t\t\tawait this.draw(0);\n\t\t},\n\t\tupdate: async function (month, value) {\n\t\t\tvar el = this.next.querySelector(\".statistics-loading .month\");\n\t\t\tif (month && el) el.innerHTML = month;\n\n\t\t\tif (this.counts >= 0) {\n\t\t\t\tthis.count = value ? value : this.count + 1;\n\t\t\t\tawait this.draw(Math.round(100 * (this.count / this.counts)));\n\t\t\t}\n\t\t},\n\t\tfakeupdate: async function () {\n\t\t\tif (this.counts >= 0) {\n\t\t\t\tthis.count++;\n\t\t\t\tif (this.count >= (this.counts - 10)) this.count = (this.counts - 10);\n\t\t\t\tawait this.draw(100 * (this.count / this.counts));\n\t\t\t}\n\t\t},\n\t\tforcedone: async function () {\n\t\t\tthis.count = this.counts;\n\t\t\tawait this.draw(100);\n\t\t},\n\t\tdone: function () {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tvar length = reduceMotionFilter(1);\n\n\t\t\t\tif (this.isComplete()) {\n\t\t\t\t\tvar el = this.next.querySelector(\".statistics.statistics-loading\");\n\t\t\t\t\tthis.clean = false;\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\tgsap.to(el, {\n\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\theight: 0,\n\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t\t\tduration: length / 2,\n\t\t\t\t\t\t\tease: \"power3.out\",\n\t\t\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\t\t\tel.remove();\n\t\t\t\t\t\t\t\tscroll.refresh();\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else resolve();\n\t\t\t});\n\t\t}\n\t}\n\n\t// Scroll Animation\n\tscrollAnimate = {\n\t\tcredits: (tl) => {\n\t\t\tvar next = this.next;\n\t\t\tvar length = reduceMotionFilter(1);\n\n\t\t\ttl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation, #credits .made\"), {\n\t\t\t\ty: window.innerHeight * 1 / 8\n\t\t\t}, {\n\t\t\t\ty: 0,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length * 2,\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation\"), {\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tstagger: {\n\t\t\t\t\tfrom: 'end',\n\t\t\t\t\tamount: length / 10\n\t\t\t\t},\n\t\t\t\tduration: length,\n\t\t\t\tease: \"power3.in\"\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#credits .made\"), {\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length,\n\t\t\t\tease: \"power3.in\"\n\t\t\t}, length * 3 / 10);\n\n\t\t\treturn tl;\n\t\t},\n\t\tstatistics: () => {\n\t\t\tvar next = this.next;\n\n\t\t\t// Scroll animate statistics\n\t\t\tscroll.push(tl => this.scrollAnimate.credits(tl), tl => ScrollTrigger.create({\n\t\t\t\ttrigger: next.querySelectorAll(\"#statistics\"),\n\t\t\t\tstart: \"100%-=\" + window.innerHeight + \" 0\",\n\t\t\t\tend: \"100% 0\",\n\t\t\t\tanimation: tl,\n\t\t\t\tscrub: .5\n\t\t\t}));\n\t\t},\n\t\tpermisions: () => {\n\t\t\tvar next = this.next;\n\n\t\t\t// Scroll animation permission section\n\t\t\tscroll.push((tl) => {\n\t\t\t\ttl.fromTo(next.querySelectorAll(\"#permission form\"), {\n\t\t\t\t\ty: 0\n\t\t\t\t}, {\n\t\t\t\t\ty: window.innerHeight * -3 / 4,\n\t\t\t\t\tease: \"linear\"\n\t\t\t\t}, 0);\n\t\t\t\ttl.fromTo(next.querySelectorAll(\"#permission .bgtext sup\"), {\n\t\t\t\t\ty: 0,\n\t\t\t\t\tx: 0,\n\t\t\t\t\trotation: 0\n\t\t\t\t}, {\n\t\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\t\tx: window.innerHeight * -1 / 10,\n\t\t\t\t\trotation: -10,\n\t\t\t\t\tease: \"linear\"\n\t\t\t\t}, 0);\n\t\t\t\ttl.fromTo(next.querySelectorAll(\"#permission .bgtext sub\"), {\n\t\t\t\t\ty: 0,\n\t\t\t\t\tx: 0,\n\t\t\t\t\trotation: 0\n\t\t\t\t}, {\n\t\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\t\tx: window.innerHeight * 1 / 10,\n\t\t\t\t\trotation: 10,\n\t\t\t\t\tease: \"linear\"\n\t\t\t\t}, 0);\n\t\t\t\treturn tl;\n\t\t\t}, (tl) => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: next.querySelectorAll(\"#permission\"),\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 0\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: .5\n\t\t\t\t});\n\t\t\t});\n\t\t\tscroll.push((tl) => {\n\t\t\t\ttl = this.scrollAnimate.credits(tl);\n\t\t\t\treturn tl;\n\t\t\t}, (tl) => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: next.querySelectorAll(\"#permission\"),\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 0\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: .5\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tmenu: () => {\n\t\t\t// Scroll animation menu and logout\n\t\t\tscroll.push(tl => tl, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: 'main',\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 0\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tonUpdate: update => {\n\t\t\t\t\t\tvar el1 = '.logo, .size, .lamp, .switch';\n\t\t\t\t\t\tvar el2 = el1 + \", .footer > *\";\n\n\t\t\t\t\t\tif (update.direction > 0) {\n\t\t\t\t\t\t\tgsap.killTweensOf(_qAll(el2));\n\t\t\t\t\t\t\tgsap.to(_qAll(el1), { y: -100, opacity: 0 });\n\t\t\t\t\t\t\tgsap.to(_qAll('.footer > *'), { y: 100, opacity: 0 });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgsap.to(_qAll(el2), { y: 0, opacity: 1 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tbrowserBar: (login = true) => {\n\t\t\tif (login) {\n\t\t\t\tscroll.push((tl) => {\n\t\t\t\t\treturn tl;\n\t\t\t\t}, (tl) => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: '#hello',\n\t\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: true,\n\t\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\t\tthis.browserColor(\"white\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\t\tthis.browserColor(\"green\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tscroll.push((tl) => {\n\t\t\t\t\treturn tl;\n\t\t\t\t}, (tl) => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: '#statistics',\n\t\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: true,\n\t\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\t\tthis.browserColor(\"yellow\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonEnter: () => {\n\t\t\t\t\t\t\tthis.browserColor(\"white\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\t\tthis.browserColor(\"white\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tscroll.push((tl) => {\n\t\t\t\t\treturn tl;\n\t\t\t\t}, (tl) => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: '#permission',\n\t\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: true,\n\t\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\t\tthis.browserColor(\"yellow\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\t\tthis.browserColor(\"green\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tconstructor(year) {\n\t\t// Which year?\n\t\tthis.year = year;\n\t\tthis.startDate = this.year + '-10-29T09:00:00';\n\t\tthis.endDate = new Date((this.year - 1) + '-10-29T09:00:00');\n\t\tthis.days = 60 * 60 * 24 * 1000;\n\t\tthis.fulldays = 365;\n\t}\n\n\t// Browser color\n\tgetSetStateColor(state) {\n\t\tif (typeof (state) == \"object\" && state.length >= 1) {\n\t\t\tif (state.length == 1) {\n\t\t\t\tdarkmode.browserColorDark = state[0];\n\t\t\t\tdarkmode.browserColorLight = state[0];\n\t\t\t} else {\n\t\t\t\tdarkmode.browserColorDark = state[1];\n\t\t\t\tdarkmode.browserColorLight = state[0];\n\t\t\t}\n\t\t} else if (state == \"green\") {\n\t\t\tdarkmode.browserColorDark = \"#0d4f03\";\n\t\t\tdarkmode.browserColorLight = \"#60e670\";\n\t\t} else if (state == \"yellow\") {\n\t\t\tdarkmode.browserColorDark = \"#705f02\";\n\t\t\tdarkmode.browserColorLight = \"#FFD700\";\n\t\t} else {\n\t\t\tdarkmode.browserColorDark = \"#000000\";\n\t\t\tdarkmode.browserColorLight = \"#FFFFFF\";\n\t\t}\n\n\t\treturn [darkmode.browserColorLight, darkmode.browserColorDark];\n\t}\n\tbrowserColor(state, duration, ease) {\n\t\tthis.getSetStateColor(state);\n\t\tdarkmode.setDarkMode(duration, ease);\n\t}\n\n\t// Show/hide Animations\n\t// Login Pages\n\tshowLoginPage(tl) {\n\t\tvar next = this.next;\n\t\tvar length = reduceMotionFilter(1);\n\n\t\tthis.browserColor(\"green\", 1);\n\t\ttl.fromTo(next.querySelectorAll(\"#permission\"), {\n\t\t\tposition: \"fixed\",\n\t\t\tdisplay: \"\",\n\t\t\topacity: 0,\n\t\t\ttop: 0\n\t\t}, {\n\t\t\topacity: 1,\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\"\n\t\t});\n\t\ttl.fromTo(next.querySelectorAll(\"#permission .bgtext *\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tstagger: length / 5,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\",\n\t\t\tonComplete: () => {\n\t\t\t\tgsap.set(next.querySelectorAll(\"#permission\"), {\n\t\t\t\t\tposition: \"\",\n\t\t\t\t\ttop: \"\"\n\t\t\t\t});\n\t\t\t}\n\t\t}, \">-\" + (length / 2));\n\n\t\treturn tl;\n\t}\n\thideLoginPage(tl) {\n\t\tvar next = this.next;\n\t\tvar length = reduceMotionFilter(1);\n\n\t\ttl.set(next.querySelectorAll(\"#permission\"), {\n\t\t\tposition: \"fixed\",\n\t\t\ttop: 0,\n\t\t});\n\t\ttl.fromTo(next.querySelectorAll(\"#permission .bgtext *, #permission form\"), {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t}, {\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t\tstagger: {\n\t\t\t\tfrom: \"end\",\n\t\t\t\tamount: length / 5\n\t\t\t},\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\",\n\t\t\tonComplete: () => {\n\t\t\t\tthis.browserColor(\"yellow\");\n\t\t\t}\n\t\t});\n\t\ttl.fromTo(next.querySelectorAll(\"#permission\"), {\n\t\t\topacity: 1\n\t\t}, {\n\t\t\topacity: 0,\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\",\n\t\t\tonComplete: () => {\n\t\t\t\tgsap.set(next.querySelectorAll(\"#permission\"), {\n\t\t\t\t\tposition: \"\",\n\t\t\t\t\tdisplay: \"none\",\n\t\t\t\t\ttop: \"\"\n\t\t\t\t}, \">\");\n\t\t\t}\n\t\t}, \">-\" + (length / 4));\n\n\t\treturn tl;\n\t}\n\t// Statistic Pages\n\tshowStatisticPages() {\n\t\treturn new Promise(resolve => {\n\t\t\tvar next = this.next;\n\t\t\tvar length = reduceMotionFilter(1);\n\t\t\tvar tl = gsap.timeline();\n\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tduration: length,\n\t\t\t\tonStart: () => this.browserColor(\"green\", .5)\n\t\t\t}, length / 4);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext > *\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: length / 5,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, length / 2);\n\t\t\ttl.fromTo(next.querySelectorAll(\" #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: length / 5,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, length / 2);\n\t\t\ttl.fromTo(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length / 2,\n\t\t\t\tonComplete: () => resolve()\n\t\t\t}, length / 2);\n\t\t});\n\t}\n\thideStatisticPages() {\n\t\treturn new Promise(async resolve => {\n\t\t\tvar next = this.next;\n\t\t\tvar length = reduceMotionFilter(1);\n\t\t\tvar tl = gsap.timeline();\n\n\t\t\tawait animate.top(next);\n\n\t\t\ttl.fromTo(next.querySelectorAll(\".footer > *, #hello .bgtext > *, #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0\n\t\t\t}, {\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: {\n\t\t\t\t\tfrom: \"end\",\n\t\t\t\t\tamount: length / 5\n\t\t\t\t},\n\t\t\t\tease: \"power3.in\"\n\t\t\t}, length / 5);\n\t\t\ttl.set(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n\t\t\t\topacity: 0\n\t\t\t}, length / 2);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello\"), {\n\t\t\t\topacity: 1\n\t\t\t}, {\n\t\t\t\topacity: 0,\n\t\t\t\tduration: length,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tgsap.set(next.querySelectorAll(\".grant\"), { display: \"none\" });\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}, length / 2);\n\t\t});\n\t}\n\n\t// Login messages\n\tmessage(message, quick) {\n\t\tvar next = this.next;\n\n\t\tvar loginmessage = next.querySelector(\"#login-message\");\n\n\t\tif (quick) {\n\t\t\tloginmessage.innerHTML = message;\n\t\t} else {\n\t\t\tgsap.to(loginmessage, {\n\t\t\t\topacity: 0,\n\t\t\t\tonComplete: function () {\n\t\t\t\t\tloginmessage.innerHTML = message;\n\t\t\t\t\tgsap.to(loginmessage, {\n\t\t\t\t\t\topacity: 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t// Logout\n\tasync requestLogout() {\n\t\tvar tl = gsap.timeline();\n\n\t\tapi.abort();\n\n\t\t// Hide statistic pages\n\t\tawait this.hideStatisticPages(tl);\n\n\t\t// Logout\n\t\tawait api.call(\"?fetch=logout\");\n\t\tthis.statistics.clear();\n\t\tapi.clear();\n\t\tthis.login();\n\n\t\tscroll.refresh();\n\t}\n\n\t// Request token\n\tasync requestToken(text) {\n\t\tvar next = this.next;\n\t\tvar length = reduceMotionFilter(1);\n\t\tvar tokenlink = next.querySelector(\"#tokenurl\");\n\t\ttokenlink.textContent = \"Connecting Plurk...\";\n\n\t\tvar tl = gsap.timeline();\n\t\ttl.fromTo(next.querySelectorAll(\"#permission form\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\"\n\t\t}, length);\n\t\ttl.fromTo(next.querySelectorAll(\"#permission h1, #permission li\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 50,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tstagger: length / 10,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\"\n\t\t}, length);\n\n\t\tapi.call(\"?request=token\").then(data => {\n\t\t\tif (text) {\n\t\t\t\tmessage(text);\n\t\t\t} else {\n\t\t\t\ttokenlink.textContent = \"Grant Access\";\n\t\t\t\ttokenlink.setAttribute(\"href\", api.url + \"?redirect=\" + data.message.url);\n\t\t\t}\n\t\t}, () => {\n\t\t\tmessage(\"Error when requesting verification from Plurk, please reload your browser again.\");\n\t\t});\n\n\t\tif (!text) next.querySelector(\"#permission form\").style.display = \"none\";\n\t}\n\n\t// Display current Plurker data\n\tasync displayPlurkerData() {\n\t\tvar plurker = this.me;\n\t\tvar next = this.next;\n\t\tvar extra = \"\";\n\t\tvar length = reduceMotionFilter(1);\n\n\t\t// plurks_count\n\t\tvar days = (plurker.anniversary.years * 365) + plurker.anniversary.days;\n\t\tvar responses = Math.round(plurker.response_count / days);\n\n\t\tnext.querySelector(\"#hello .thumbs\").innerHTML = \"<img src='\" + plurker.avatar_big + \"' />\";\n\t\tif (this.year == 2021) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>If \" + this.year + \" have been a rough year you, hopefully RePlurk will cheer you by bringing some good memories</p>\";\n\t\telse if (this.year == 2022) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>It's 2020 v2, and this is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\t\telse next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>This is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\n\t\t// Draw statistic\n\t\tthis.statistics.title('All Time', 'alltime');\n\t\tif (plurker.anniversary.years && plurker.anniversary.days) {\n\t\t\tthis.statistics.draw('spansmall center posted', Math.round(plurker.plurks_count / days), 'I posted around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(Math.round(plurker.plurks_count / days), \"plurk\") + \" per day</i>\");\n\n\t\t\t// Responses\n\t\t\tvar oneday = 16;\n\t\t\tif (responses <= oneday) extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday / responses), \"hour\") + '</i>';\n\t\t\telse extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday * 60 / responses), \"minute\") + '</i>';\n\t\t\tthis.statistics.draw('span2 center responded', responses, 'I responded around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(responses, \"time\") + \"</i> per day. \" + extra + \" when I'm not sleeping\");\n\n\t\t\tvar join = new Date(plurker.join_date)\n\t\t\tthis.statistics.draw('spansmall center anniversary', \"<strong><i>\" + monthNames[join.getMonth()] + \"</i> <i>\" + join.getFullYear() + \"</i></strong> <em>\" + join.getDate() + \"</em>\", \"I joined Plurk <i>\" + plural(plurker.anniversary.years, \"year\") + \"</i> and <i>\" + plural(plurker.anniversary.days, \"day\") + \"</i> ago\");\n\t\t\tthis.statistics.draw('spansmall center badges', plurker.badges.length, \"I have <i><img src='https://api.iconify.design/fluent-emoji:shield.svg' /> \" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n\t\t} else {\n\t\t\tthis.statistics.draw('', '-', \"There is no data in my timeline\");\n\t\t\tthis.statistics.draw('', plurker.badges.length, \"But at least I have <i>\" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n\t\t}\n\n\t\t// Scroll animation hello section\n\t\tscroll.push(tl => {\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .text, #hello .thumbs\"), {\n\t\t\t\ty: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -3 / 4,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext sup\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * -1 / 10,\n\t\t\t\trotation: -10,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext sub\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * 1 / 10,\n\t\t\t\trotation: 10,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .arrow-big\"), {\n\t\t\t\ty: 0,\n\t\t\t\topacity: 1\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * 1 / 4,\n\t\t\t\topacity: 0,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length / 4,\n\t\t\t}, 0);\n\t\t\treturn tl;\n\t\t}, tl => ScrollTrigger.create({\n\t\t\ttrigger: next.querySelectorAll(\"#hello\"),\n\t\t\tstart: \"0 0\",\n\t\t\tend: \"100% 0\",\n\t\t\tanimation: tl,\n\t\t\tscrub: true\n\t\t}));\n\t\tscroll.refresh();\n\t}\n\t// Display statistics\n\tasync displayStatistics() {\n\t\tthis.statistics.title('This Year', 'thisyear');\n\t\tthis.statistics.draw(\"statistics-loading thisyearloading\", \"\", \"<i class='month'>Data from December</i>1 of 2. Loading \" + this.year + \" timeline. It can take up to 1 minute.\");\n\n\t\tthis.loading.init(this.next);\n\t\tthis.loading.loop(this.fulldays);\n\n\t\t// Load loop timeline\n\t\tvar getTimeline = async (offset) => {\n\t\t\toffset = (!offset) ? \"\" : \"&offset=\" + offset;\n\n\t\t\tvar data = await api.call(\"?fetch=plurk&filter=my\" + offset, 1);\n\t\t\tif (data.success) {\n\t\t\t\tthis.friends.add(data.message.plurk_users);\n\t\t\t\tthis.plurks = this.plurks.concat(data.message.plurks);\n\n\t\t\t\tif (data.message.plurks.length > 0) {\n\t\t\t\t\tvar lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\n\t\t\t\t\tif (lastposted >= this.endDate) {\n\t\t\t\t\t\tthis.loading.update(\"Data from \" + monthNames[lastposted.getMonth()] + \" \" + lastposted.getFullYear(), this.fulldays - Math.floor((lastposted - this.endDate) / this.days));\n\n\t\t\t\t\t\t// Load next plurks\n\t\t\t\t\t\tawait getTimeline(data.message.offset);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twhile (lastposted < this.endDate && this.plurks.length > 1) {\n\t\t\t\t\t\t\tthis.plurks.pop();\n\t\t\t\t\t\t\tlastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait this.loading.forcedone();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait this.loading.forcedone();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.requestLogout();\n\t\t\t}\n\t\t}\n\t\tawait getTimeline(this.startDate);\n\n\t\t// When loading done\n\t\tvar largest_poll_result = 0;\n\t\tif (this.plurks.length > 1) {\n\t\t\t// Count user statistics\n\t\t\tthis.statistics.plurks_count = 0;\n\t\t\tthis.plurks.forEach(plurk => {\n\t\t\t\t// Calculate the statistics\n\t\t\t\tif (plurk.responded) this.statistics.responded_count++;\n\t\t\t\tif (plurk.owner_id == this.me.id) {\n\t\t\t\t\tthis.statistics.plurks_count++;\n\t\t\t\t\tthis.statistics.replurker_count += plurk.replurkers.length;\n\t\t\t\t\tthis.statistics.replurker_list = this.statistics.listCount(this.statistics.replurker_list, plurk.replurkers);\n\t\t\t\t\tthis.statistics.favourite_count += plurk.favorers.length;\n\t\t\t\t\tthis.statistics.favorite_list = this.statistics.listCount(this.statistics.favorite_list, plurk.favorers);\n\t\t\t\t\tif (plurk.anonymous) this.statistics.whispers_count++;\n\t\t\t\t\tif (plurk.coins) this.statistics.coins_count += plurk.coins;\n\t\t\t\t\tif (plurk.porn) this.statistics.porn_count++;\n\t\t\t\t\tif (!plurk.response_count) this.statistics.noresponse_count++;\n\t\t\t\t\tif (plurk.plurk_type == 3) this.statistics.private_count++;\n\t\t\t\t\tthis.statistics.response_count += plurk.response_count;\n\n\t\t\t\t\tif (plurk.content_raw.includes(\"instagram.com\")) this.statistics.instagrammer_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"facebook.com\")) this.statistics.facebooker_count++;\n\t\t\t\t\telse if (plurk.content_raw.includes(\"fb.watch\")) this.statistics.facebooker_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"twitter.com\")) this.statistics.twitterer_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"reddit.com\")) this.statistics.redditor_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"tiktok.com\")) this.statistics.tiktoker_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"imgur.com\")) this.statistics.imgurer_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"youtube.com\")) this.statistics.youtuber_count++;\n\n\t\t\t\t\t// Calculate polls\n\t\t\t\t\tif (plurk.with_poll) {\n\t\t\t\t\t\tvar response_count = plurk.poll.response.response_count;\n\t\t\t\t\t\tthis.statistics.poll_count++;\n\t\t\t\t\t\tthis.statistics.poll_responder_count += response_count;\n\n\t\t\t\t\t\tif (largest_poll_result < response_count) {\n\t\t\t\t\t\t\tlargest_poll_result = response_count;\n\t\t\t\t\t\t\tthis.statistics.poll_popular_plurk = plurk;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (plurk.responded) this.statistics.responded_other_count++;\n\t\t\t});\n\n\t\t\t// Sort based on date\n\t\t\tthis.plurks.sort((a, b) => new Date(b.posted) - new Date(a.posted));\n\n\t\t\t// Draw statistics\n\t\t\ttry {\n\t\t\t\tawait this.statistics.drawAll(this.plurks);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.info(\"Error while counting statistics\", error);\n\t\t\t}\n\n\t\t\t// Display extended statistics\n\t\t\tthis.displayExtendedStatistics();\n\t\t} else {\n\t\t\tif (this.plurks[0]) {\n\t\t\t\tvar date = new Date(plurk[0].posted);\n\t\t\t\tinactive.draw(plurk[0], date.getFullYear());\n\t\t\t}\n\t\t\telse inactive.empty();\n\t\t}\n\t}\n\t// Display extended statistics\n\tasync displayExtendedStatistics() {\n\t\t// Deeper user statistics\n\t\tthis.statistics.title('Dig Deeper', 'digdeeper');\n\t\tthis.statistics.draw(\"statistics-loading digdeeperloading\", \"\", \"<i class='month'>Data from \" + this.year + \"</i> 2 of 2. Loading all responses. <small>If the loading seems to stop, refresh your browser tab to resume your download. Closing your browser tab will clear all downloaded data.</small>\");\n\n\t\t// Load each post responses and calculate statistics\n\t\tthis.loading.init(this.next);\n\t\tthis.loading.loop(this.plurks.length);\n\n\t\t// Get the responses for each plurks in parallel\n\t\tthis.plurks.sort((a, b) => new Date(a.posted) < new Date(b.posted));\n\t\tfor (var plurk of this.plurks) {\n\t\t\tvar date = new Date(plurk.posted);\n\t\t\tthis.loading.update(\"Data from \" + monthNames[date.getMonth()] + \" \" + date.getFullYear());\n\n\t\t\t// Count all\n\t\t\tawait this.most.countAll(plurk);\n\n\t\t\t// Count responses\n\t\t\tif (plurk.response_count > 0 && (plurk.responded || plurk.owner_id == this.me.id)) {\n\t\t\t\tvar result = await api.call(\"?fetch=response&plurk_ids=\" + plurk.plurk_id);\n\t\t\t\tif (result.success) for (var message of result.message) {\n\t\t\t\t\t// Add friends from response lists\n\t\t\t\t\tthis.friends.add(message.friends);\n\n\t\t\t\t\t// Count the rest of statistics\n\t\t\t\t\tfor (var response of message.responses) {\n\t\t\t\t\t\t// Find and count all responders\n\t\t\t\t\t\tawait this.most.responders.count(response);\n\t\t\t\t\t\tthis.most.interaction.count(response);\n\t\t\t\t\t\tthis.most.mvp.count(response, \"response\");\n\t\t\t\t\t\t// Count all\n\t\t\t\t\t\tawait this.most.countAll(response);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.requestLogout();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Display How Many Links\n\t\tthis.most.links.drawLinks();\n\t\t// Display How Many Pictures\n\t\tthis.most.links.drawPics();\n\n\t\t// Draw Results\n\t\t// Display Most Responder\n\t\t// this.most.responders.draw();\n\n\t\t// Display Most Interaction\n\t\tthis.most.interaction.draw();\n\n\t\t// Display Most Mentioned by me\n\t\t// this.most.mentions.draw();\n\n\t\t// Display How Many Words-Characters\n\t\tthis.most.types.draw();\n\n\t\t// Display Most hashtags by me\n\t\tthis.most.hashtags.draw();\n\n\t\t// Display Most My Emoticons\n\t\tthis.most.myemoticons.draw();\n\n\t\t// Display MVP\n\t\tthis.statistics.replurker_list.forEach(value => {\n\t\t\tthis.most.mvp.count({ user_id: value.id, count: value.count }, \"replurk\");\n\t\t});\n\t\tthis.statistics.favorite_list.forEach(value => {\n\t\t\tthis.most.mvp.count({ user_id: value.id, count: value.count }, \"favorite\");\n\t\t});\n\t\tthis.most.mvp.draw();\n\n\t\t// Replurk Badges\n\t\tvar gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Leader\";\n\t\tif (this.me.gender == 1) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> King\";\n\t\tif (this.me.gender == 0) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Queen\";\n\n\t\tvar tiktok = \"<img src='https://api.iconify.design/fluent-emoji:mirror-ball.svg' />\";\n\t\tif (this.me.gender == 1) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:man-dancing-medium-dark-skin-tone.svg' />\";\n\t\tif (this.me.gender == 0) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:woman-dancing-medium-dark-skin-tone.svg' />\";\n\n\t\tvar facebook = \"<img src='https://api.iconify.design/fluent-emoji:older-person.svg' />\";\n\t\tif (this.me.gender == 1) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-man.svg' />\";\n\t\tif (this.me.gender == 0) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-woman.svg' />\";\n\n\t\tvar plurker = \"<img src='https://api.iconify.design/fluent-emoji:person-bowing.svg' />\";\n\t\tif (this.me.gender == 1) plurker = \"<img src='https://api.iconify.design/fluent-emoji:man-bowing.svg' />\";\n\t\tif (this.me.gender == 0) plurker = \"<img src='https://api.iconify.design/fluent-emoji:woman-bowing.svg' />\";\n\n\t\tthis.statistics.title('RePlurk Badges', 'replurkbadges');\n\t\tthis.statistics.body(`\\\n\t\t\t<h4>What are RePlurk Badges consist of?</h4>\\\n\t\t\t<p>They are badges based on your activities in Plurk. Currently there are 16 badges in total, for activities such as:</p>\\\n\t\t\t<ol>\\\n\t\t\t\t<li>Creating lots of polls (Polling ${gender})</li>\\\n\t\t\t\t<li>Receiving lots of coins (Plurk Coins Billionaire)</li>\\\n\t\t\t\t<li>Writing lots of posts (Novelist and Keyboard Warrior)</li>\\\n\t\t\t\t<li>Sharing lots of pictures and links (Meme Lord & Missing Link)</li>\\\n\t\t\t\t<li>Sharing social medias urls (there are 7 badges)</li>\\\n\t\t\t\t<li>Posting lots of adult posts (Adult-er)</li>\\\n\t\t\t\t<li>Getting lots of replurks (Trendsetter)</li>\\\n\t\t\t\t<li>and, Constantly posting in Plurk almost everyday (Active Plurker)</li>\\\n\t\t\t</ol>\\\n\t\t\t`, `replurkbadges description`);\n\t\tif (this.statistics.poll_count >= 5) this.statistics.draw('spansmall spanhalf center badges pollbadges', \"<img src='https://api.iconify.design/fluent-emoji:ballot-box-with-ballot.svg' />\", \"<strong>Polling \" + gender + \"</strong>\");\n\t\tif (this.statistics.coins_count >= 5) this.statistics.draw('spansmall spanhalf center badges coinbadges', \"<img src='https://api.iconify.design/fluent-emoji:coin.svg' />\", \"<strong>Plurk Coins Billionaire</strong>\");\n\t\tif (this.most.types.words >= 50000) this.statistics.draw('spansmall spanhalf center badges novelistbadges', \"<img src='https://api.iconify.design/fluent-emoji:orange-book.svg' />\", \"<strong>Novelist</strong>\");\n\t\tif (this.most.types.chars >= 1000000) this.statistics.draw('spansmall spanhalf center badges keyboardbadges', \"<img src='https://api.iconify.design/fluent-emoji:keyboard.svg' />\", \"<strong>Keyboard Warrior</strong>\");\n\t\tif (this.most.links.pics.length >= 356) this.statistics.draw('spansmall spanhalf center badges memebadges', \"<img src='https://api.iconify.design/fluent-emoji:cat.svg' />\", \"<strong>Meme Lord</strong>\");\n\t\tif (this.most.links.links.length >= 356 / 2) this.statistics.draw('spansmall spanhalf center badges missingbadges', \"<img src='https://api.iconify.design/fluent-emoji:orangutan.svg' />\", \"<strong>The Missing Link</strong>\");\n\t\tif (this.statistics.instagrammer_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:camera.svg' />\", \"<strong>Instagrammer</strong>\");\n\t\tif (this.statistics.facebooker_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', facebook, \"<strong>Facebooker</strong>\");\n\t\tif (this.statistics.twitterer_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:hatching-chick.svg' />\", \"<strong>The Real Chief Twit</strong>\");\n\t\tif (this.statistics.redditor_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:robot.svg' />\", \"<strong>/r</strong>\");\n\t\tif (this.statistics.tiktoker_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', tiktok, \"<strong>Tiktoker</strong>\");\n\t\tif (this.statistics.imgurer_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:framed-picture.svg' />\", \"<strong>Imgur-er</strong>\");\n\t\tif (this.statistics.youtuber_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:movie-camera.svg' />\", \"<strong>Youtuber <img src='https://api.iconify.design/fluent-emoji:sleepy-face.svg' /></strong>\");\n\t\tif (this.statistics.porn_count >= 10) this.statistics.draw('spansmall spanhalf center badges adultbadges', \"<img src='https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg' />\", \"<strong>Adult-er</strong>\");\n\t\tif (this.statistics.replurker_count >= 50) this.statistics.draw('spansmall spanhalf center badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:trophy.svg' />\", \"<strong>Trendsetter</strong>\");\n\t\tif (this.statistics.plurks_count >= 356 * 1.5) this.statistics.draw('spansmall spanhalf center badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:military-medal.svg' />\", \"<strong>Active Plurker \" + plurker + \"</strong>\");\n\n\t\tthis.logSessionStrorageSize();\n\t}\n\n\t// Display LocalStorage stats\n\tlogSessionStrorageSize() {\n\t\tfunction getSessionStorageSize() {\n\t\t\tvar totalBytes = 0;\n\n\t\t\tfor (var key in sessionStorage) {\n\t\t\t\tif (sessionStorage.hasOwnProperty(key)) {\n\t\t\t\t\tvar itemValue = sessionStorage.getItem(key);\n\t\t\t\t\ttotalBytes += itemValue.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Convert bytes to Megabytes\n\t\t\tvar totalMegabytes = Math.round((totalBytes / 1024 / 1024) * 100) / 100;\n\n\t\t\treturn totalMegabytes;\n\t\t}\n\n\t\t// Usage\n\t\tvar sessionStorageSize = getSessionStorageSize();\n\t\tconsole.info('SessionStorage Size: ' + sessionStorageSize + ' MB');\n\t}\n\n\t// Check login status\n\tasync login(clear) {\n\t\tvar next = this.next;\n\n\t\tthis.me = { id: 0 };\n\t\tthis.friends = new friends()\n\t\tthis.statistics = new statistics(next, this.friends, this.most, this.year)\n\t\tthis.most.init();\n\t\tthis.plurks = [];\n\n\t\tscroll.destroy();\n\n\t\twindow.scrollTo(0, 0);\n\t\tthis.browserColor(\"yellow\");\n\n\t\t// Scroll animation menu and logout\n\t\tthis.scrollAnimate.menu();\n\n\t\t// Check is server have open session\n\t\tvar tl = gsap.timeline();\n\t\ttl.set(next.querySelector(\"#hello .arrow-big\"), {\n\t\t\topacity: 0\n\t\t});\n\n\t\tvar data = await api.call(\"?\");\n\t\tvar interval = null;\n\t\tif (data.success) {\n\t\t\tthis.me = data.message;\n\n\t\t\t// Initial Plurk statistics\n\t\t\tawait this.displayPlurkerData();\n\n\t\t\t// Display the rest of the statistics\n\t\t\tthis.displayStatistics();\n\n\t\t\t// Scroll top top\n\t\t\tawait animate.top(next);\n\n\t\t\t// Hide login page\n\t\t\tif (clear) next.querySelector(\"#permission\").style.display = \"none\";\n\t\t\telse tl = this.hideLoginPage(tl);\n\n\t\t\t// Show statistic pages\n\t\t\tawait this.showStatisticPages(tl);\n\n\t\t\t// Add logout event\n\t\t\tnext.querySelector(\"#logout\").onclick = () => this.requestLogout();\n\n\t\t\t// Scroll animate statistics\n\t\t\tthis.scrollAnimate.statistics();\n\t\t\t// Scroll browser bar\n\t\t\tthis.scrollAnimate.browserBar();\n\n\t\t\tscroll.refresh();\n\t\t} else {\n\t\t\t// Hide statistic pages\n\t\t\tif (clear) next.querySelectorAll(\".grant\").forEach(function (el) { el.style.display = \"none\"; });\n\t\t\t// Show login page\n\t\t\tthis.showLoginPage(tl);\n\t\t\t// Request token\n\t\t\tthis.requestToken();\n\n\t\t\t// Scroll animation permission section\n\t\t\tthis.scrollAnimate.permisions();\n\t\t\t// Scroll browser bar\n\t\t\tthis.scrollAnimate.browserBar(false);\n\n\t\t\tscroll.refresh();\n\n\t\t\t// Automatic login\n\t\t\tinterval = setInterval(async () => {\n\t\t\t\tvar data = await api.call(\"?\");\n\n\t\t\t\tif (data.success) {\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tthis.login();\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\t// Snap\n\t\tnext.querySelectorAll(\"section.snap\").forEach(el => scroll.snap(el));\n\t\tnext.querySelectorAll(\"section.snap-bottom\").forEach(el => scroll.snap(el, \"bottom\"));\n\t}\n\n\t// Run the API call\n\trun(el) {\n\t\treturn new Promise(resolve => {\n\t\t\tvar length = reduceMotionFilter(1);\n\t\t\tthis.next = el;\n\t\t\tthis.browserColor(\"yellow\");\n\n\t\t\t// Run the login\n\t\t\tgsap.fromTo(this.next.querySelectorAll('#credits'), {\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tonComplete: async () => {\n\t\t\t\t\t// Change color\n\t\t\t\t\tthis.browserColor(\"yellow\", 0);\n\n\t\t\t\t\t// Display login\n\t\t\t\t\tawait this.login(true);\n\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default replurk;"],"names":["constructor","this","el","document","createElement","classname","classList","add","html","innerHTML","update","text","textContent","id","data","avatarurl","customcreate","user","user_id","value","nick_name","attached","hidden","count","position","created","counts","class","create","setAttribute","avatar","name","display_name","appendChild","insertTo","element","insertAdjacentElement","destroy","remove","unavailable","new_friends","Object","assign","find","findIndex","result","api","call","success","temp","message","user_info","push","findByUsername","index","toLowerCase","getAvatar","has_profile_image","getAvatarByUsername","user_name","oldcolor","randomcolors","allColorArrays","arrayIndex","Math","floor","Date","now","length","colors","getRandomColor","color","gsap","utils","shuffle","slice","pop","next","friends","most","year","whispers_count","poll_count","poll_responder_count","coins_count","porn_count","noresponse_count","private_count","replurker_count","replurker_list","favourite_count","favorite_list","response_count","responded_count","responded_other_count","responded_other_list","plurks_count","querySelector","MutationObserver","mutationsList","forEach","mutation","addedNodes","afterDraw","observe","attributes","childList","subtree","clear","listCount","list","collection","title","style","loading","span","insertAdjacentHTML","body","anim","set","background","to","opacity","duration","ease","screen","matchMedia","tl","fromTo","children","y","window","innerHeight","ScrollTrigger","trigger","start","end","animation","scrub","number","Number","load","progress","snap","onUpdate","toggleActions","querySelectorAll","x","height","getAttribute","capture","refresh","onclick","async","generating","cursor","canvas","html2canvas","backgroundColor","logging","proxy","url","useCORS","link","display","download","href","toDataURL","click","removeChild","setTimeout","wrapper","draw","drawDiv","drawGraph","drawImage","image","badge","drawHTML","drawLink","drawPost","toString","drawUserList","users","max","friend","plurker","outerHTML","scale","stagger","amount","from","attach","charttitle","node","chart","zIndex","maxTop","top","currentTop","killTweensOf","onComplete","drawAll","plurks","response_percentage","round","responses","replurk","favorite","sort","me","statistics","parent","a","b","findregex","regex","replace","content","storage","match","idx","init","responders","mentions","dataAll","myemoticons","hashtags","links","pics","types","words","chars","countAll","content_raw","plurk_id","replurkers_count","favorite_count","response","i","undefined","loved","includes","pic","split","drawLinks","drawPics","posts","post","owner_id","plurk_type","posted","interaction","multiplier","console","info","mvp","type","error","inactive","empty","prev_count","clean","isComplete","item","Promise","resolve","done","loop","month","fakeupdate","forcedone","width","padding","margin","overflow","scrollAnimate","credits","permisions","rotation","menu","el1","el2","direction","browserBar","login","onLeave","browserColor","onEnterBack","onEnter","startDate","endDate","days","fulldays","getSetStateColor","state","darkmode","browserColorDark","browserColorLight","setDarkMode","showLoginPage","hideLoginPage","showStatisticPages","timeline","onStart","hideStatisticPages","animate","quick","loginmessage","requestLogout","abort","requestToken","tokenlink","then","displayPlurkerData","extra","anniversary","years","avatar_big","oneday","join","join_date","getMonth","getFullYear","getDate","badges","displayStatistics","getTimeline","offset","plurk_users","concat","lastposted","largest_poll_result","plurk","responded","replurkers","favorers","anonymous","coins","porn","instagrammer_count","facebooker_count","twitterer_count","redditor_count","tiktoker_count","imgurer_count","youtuber_count","with_poll","poll","poll_popular_plurk","displayExtendedStatistics","date","gender","tiktok","facebook","logSessionStrorageSize","sessionStorageSize","totalBytes","key","sessionStorage","hasOwnProperty","getItem","getSessionStorageSize","scrollTo","interval","setInterval","clearInterval","run"],"sourceRoot":""}