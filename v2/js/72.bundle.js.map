{"version":3,"file":"72.bundle.js","mappings":"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","sources":["webpack://dwaan/./src/js/replurk/icons.js","webpack://dwaan/./src/js/replurk/span.js","webpack://dwaan/./src/js/replurk/colors.js","webpack://dwaan/./src/js/replurk/element.js","webpack://dwaan/./src/js/replurk/friends.js","webpack://dwaan/./src/js/replurk/main.js"],"sourcesContent":["\"use strict\";\n\nvar iconLink = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\"><path id=\"right\" d=\"M19.188,12.001c0,1.1-0.891,2.015-1.988,2.015l-4.195-0.015C13.543,15.089,13.968,16,15.002,16h3C19.658,16,21,13.657,21,12s-1.342-4-2.998-4h-3c-1.034,0-1.459,0.911-1.998,1.999l4.195-0.015C18.297,9.984,19.188,10.901,19.188,12.001z\"/><path id=\"center\" d=\"M8,12c0,0.535,0.42,1,0.938,1h6.109c0.518,0,0.938-0.465,0.938-1c0-0.534-0.42-1-0.938-1H8.938C8.42,11,8,11.466,8,12z\"/><path id=\"left\" d=\"M4.816,11.999c0-1.1,0.891-2.015,1.988-2.015L11,9.999C10.461,8.911,10.036,8,9.002,8h-3c-1.656,0-2.998,2.343-2.998,4s1.342,4,2.998,4h3c1.034,0,1.459-0.911,1.998-1.999l-4.195,0.015C5.707,14.016,4.816,13.099,4.816,11.999z\"/></svg>';\n\nexport default iconLink;","\"use strict\"\n\nimport { _q, _qAll, animateNumber } from '../helpers/helper.js'\n\n/*\n    Simple span element object:\n\n    1. update(text): Update the content with text value, and animate it if it's number.\n    2. html(html): Update the content with html value.\n    3. class(classname): Add class name to span.\n*/\n\nclass span {\n    constructor() {\n        this.el = document.createElement('span')\n        return this\n    }\n\n    class(classname) {\n        this.el.setAttribute(\"class\", classname)\n        return this\n    }\n\n    html(html) {\n        this.el.innerHTML = html\n        return this\n    }\n\n    update(text) {\n        animateNumber(this.el.textContent, text, (text) => {\n            this.el.textContent = text\n        })\n        return this\n    }\n}\n\nexport default span","\"use strict\";\n\nimport { gsap } from 'gsap';\n\n/*\n    Color randomizer\n\n    1. colors: array of colors value\n    2. getRandomColor(): get the randomized color from colors list\n*/\n\nclass colors {\n    constructor() {\n        this.oldcolor = \"\";\n        this.randomcolors = [];\n\n        const allColorArrays = [\n            [\n                'rgb(63,94,251)',     // Dodger Blue\n                'rgb(252,70,107)',    // Radical Red\n                'rgb(34,193,195)',    // Light Sea Green\n                'rgb(253,187,45)',    // Goldenrod\n                'rgb(195,34,190)',    // Deep Pink\n                'rgb(219,158,0)',     // Golden Yellow\n                'rgb(75,231,152)',    // Medium Spring Green\n                'rgb(195,34,103)',    // Cerise\n                'rgb(45,182,253)'     // Dodger Blue (Lighter)\n            ]\n        ];\n\n        const seconds = Math.floor(Date.now() / 1000); // Get current time in seconds\n        const arrayIndex = seconds % allColorArrays.length; // Use seconds to determine the index\n        this.colors = allColorArrays[arrayIndex];\n    }\n\n    getRandomColor() {\n        var color;\n        do {\n            this.randomcolors = gsap.utils.shuffle(this.colors).slice();\n        } while (this.oldcolor == (color = this.randomcolors.pop()));\n        this.oldcolor = color;\n        return color;\n    }\n}\n\nexport default colors;","\"use strict\"\n\nimport span from \"./span.js\"\n\n/*\n    Plurk element object spesification:\n\n    1. id: contain the id name\n    2. user: contain user object\n    3. attached: status of element is attached in DOM or not\n    4. create(): create the DOM element\n    4. destroy(): remove the DOM element\n    4. update(): update the DOM element based on it's current value\n    5. insertTo(element): insert DOM element to spesific element, also will check if it's already created or not\n*/\n\nclass element {\n    constructor(id, data, avatarurl, customcreate) {\n        this.id = id\n        this.user = data\n        this.user_id = data.id\n        this.value = data.nick_name\n        this.nick_name = data.nick_name\n        this.attached = false\n        this.hidden = true\n        this.count = 1\n        this.position = 0\n        this.customcreate = customcreate\n        this.el = document.createElement('a')\n        this.created = false\n        this.avatarurl = avatarurl\n        this.counts = new span().class(\"count\").html(this.count)\n    }\n\n    create() {\n        this.created = true\n\n        this.el.setAttribute(\"id\", this.id + this.user_id)\n        this.el.setAttribute(\"class\", 'plurkers')\n        this.el.setAttribute(\"href\", 'https://plurk.com/' + this.user.nick_name)\n        this.el.setAttribute(\"target\", '_BLANK')\n\n        if (!this.customcreate) {\n            this.avatar = new span()\n                .class(\"avatar\")\n                .html(`<img src=\"${this.avatarurl}\" />`)\n            this.name = new span()\n                .class(\"name\")\n                .html(`${this.user.display_name}`)\n            this.counts = new span()\n                .class('count')\n                .html(this.count)\n            this.el.appendChild(this.avatar.el)\n            this.el.appendChild(this.name.el)\n            this.el.appendChild(this.counts.el)\n        } else {\n            this.customcreate(this)\n        }\n    }\n\n    insertTo(element) {\n        if (!this.created) this.create()\n\n        this.attached = true\n        element.insertAdjacentElement(\"beforeend\", this.el)\n    }\n\n    destroy() {\n        this.attached = false\n\n        if (this.el) {\n            this.el.remove()\n            return true\n        } else {\n            return false\n        }\n    }\n\n    update() {\n        // Only update when it's attached\n        if (this.attached) {\n            this.counts.update(`${this.count}`)\n        }\n    }\n}\n\nexport default element","\"use strict\"\n\nimport api from \"../helpers/api.js\"\n\n/*\n\tFriends object spesification:\n\n\t1. data: contains all the friends collection data\n\t2. add(data): add friend to friends collection data\n\t3. find(user_id): return friend data based on their id\n\t4. findByUsername(nick_name): return friend data based on their nick name\n\t5. getAvatar(user_id): return avatar url based on their id for from friends collection data\n\t6. getAvatarByUsername(user_id): return avatar url based on their nick name for from friends collection data\n*/\n\nclass friends {\n\tconstructor () {\n\t\tthis.data = {}\n\t\tthis.unavailable = []\n\t}\n\n  /**\n   * Add JSON object as a friends data\n   *\n   * ```js\n   * friends.add({});\n   * ```\n   *\n   * @param {new_friends}: New friends JSON from /APP/Profile/getPublicProfile\n   * @memberof friends\n   * @link https://www.plurk.com/API/2/\n   */\n\tadd(new_friends) {\n\t\tObject.assign(this.data, new_friends)\n\t}\n\n\tasync find(user_id) {\n\t\tif (this.unavailable.findIndex(el => el == user_id) >= 0) return false\n\n\t\tif (this.data && this.data[user_id]) {\n\t\t\treturn this.data[user_id]\n\t\t} else {\n\t\t\tvar result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&user_id=\" + user_id)\n\n\t\t\tif (result.success) {\n\t\t\t\tvar temp = {}\n\t\t\t\ttemp[result.message.user_info.id] = result.message.user_info\n\t\t\t\tthis.add(temp)\n\t\t\t\treturn result.message.user_info\n\t\t\t} else {\n\t\t\t\tthis.unavailable.push(user_id)\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\n\tasync findByUsername (nick_name) {\n\t\tvar user_id = false\n\n\t\tif (this.unavailable.findIndex(el => el == nick_name) >= 0) return false\n\n\t\tfor (var index in this.data) {\n\t\t\tif (this.data[index].nick_name.toLowerCase() == nick_name.toLowerCase()) {\n\t\t\t\tuser_id = index\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif (user_id) {\n\t\t\treturn this.data[user_id]\n\t\t} else {\n\t\t\tvar result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&nick_name=\" + nick_name)\n\n\t\t\tif (result.success) {\n\t\t\t\tvar temp = {}\n\t\t\t\ttemp[result.message.user_info.id] = result.message.user_info\n\t\t\t\tthis.add(temp)\n\t\t\t\treturn result.message.user_info\n\t\t\t} else {\n\t\t\t\tthis.unavailable.push(nick_name)\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\n\tgetAvatar(user_id) {\n\t\tif (user_id && this.data && this.data[user_id]) {\n\t\t\tif (this.data[user_id].has_profile_image) {\n\t\t\t\tvar avatar = \"\"\n\t\t\t\tif (this.data[user_id].avatar) avatar = this.data[user_id].avatar\n\t\t\t\treturn 'https://avatars.plurk.com/' + user_id + '-big' + avatar + '.jpg'\n\t\t\t}\n\t\t}\n\t\treturn 'https://plurk.com/static/default_big.jpg'\n\t}\n\n\tgetAvatarByUsername(user_name) {\n\t\tvar user_id = false\n\n\t\tif (user_name) {\n\t\t\tfor (var index in this.data) {\n\t\t\t\tif (this.data[index].nick_name.toLowerCase() == user_name.toLowerCase()) {\n\t\t\t\t\tuser_id = index\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.getAvatar(user_id)\n\t}\n}\n\nexport default friends","\"use strict\";\n\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js';\nimport api from \"../helpers/api.js\";\nimport scroll from \"../helpers/scroll.js\";\nimport darkmode from \"../helpers/darkmode.js\";\nimport animate from \"../helpers/animate.js\";\nimport html2canvas from \"html2canvas\";\nimport { _q, _qAll, hasClass, plural, monthNames, animateNumber, datediff, pluralinwords, reduceMotionFilter, waitForImg } from '../helpers/helper.js';\n\nimport iconLink from \"./icons.js\";\nimport span from \"./span.js\";\nimport colors from \"./colors.js\";\nimport element from \"./element.js\";\nimport friends from \"./friends.js\";\n\n/*\n    Replurk class\n*/\nclass replurk {\n    // Draw in which element?\n    next = document.createElement('div');\n    // Plurks array\n    plurks = [];\n    // Plurker profile object\n    me = { \"id\": 3203568, \"has_profile_image\": 1, \"timeline_privacy\": 0, \"nick_name\": \"dwan\", \"display_name\": \"Dwan\", \"date_of_birth\": \"Sat, 29 Oct 1983 00:01:00 GMT\", \"avatar\": 41917598, \"gender\": 1, \"karma\": 199.24, \"premium\": true, \"verified_account\": false, \"dateformat\": 3, \"default_lang\": \"en\", \"friend_list_privacy\": \"public\", \"name_color\": \"FFA59A\", \"full_name\": \"Dwan B.\", \"location\": \"Tel Aviv-Yafo, Dan, Israel\", \"timezone\": \"Asia/Jerusalem\", \"phone_verified\": 0, \"bday_privacy\": 1, \"plurks_count\": 14598, \"response_count\": 79484, \"pinned_plurk_id\": 0, \"background_id\": 0, \"show_ads\": false, \"show_location\": 0, \"profile_views\": 36112, \"avatar_small\": \"https://avatars.plurk.com/3203568-small41917598.gif\", \"avatar_medium\": \"https://avatars.plurk.com/3203568-medium41917598.gif\", \"avatar_big\": \"https://avatars.plurk.com/3203568-big41917598.jpg\", \"about\": \"Mr. Goat\\u2019s dad and full-time husband\", \"about_renderred\": \"Mr. Goat\\u2019s dad and full-time husband\", \"page_title\": \"The world revolve around me\", \"recruited\": 14, \"relationship\": \"married\", \"friends_count\": 571, \"fans_count\": 498, \"join_date\": \"Wed, 15 Oct 2008 07:48:05 GMT\", \"privacy\": \"world\", \"accept_private_plurk_from\": \"all\", \"post_anonymous_plurk\": false, \"badges\": [\"10_invites\", \"14\", \"9\", \"10000_views\", \"10000_plurks\", \"50000_comments\", \"upload_profile_image\", \"50_fans\", \"coin\"], \"link_facebook\": false, \"setup_facebook_sync\": false, \"setup_twitter_sync\": false, \"setup_weibo_sync\": false, \"filter\": { \"porn\": 2, \"anonymous\": 0, \"keywords\": null }, \"anniversary\": { \"years\": 13, \"days\": 27 }, \"phone_number\": null, \"creature\": 0, \"creature_url\": null, \"creature_special\": 1, \"creature_special_url\": null };\n\n    // Friends object\n    friends = new friends()\n\n    // Statistics plurker object renderer\n    statistics = {\n        // Storage\n        whispers_count: 0,\n        coins_count: 0,\n        porn_count: 0,\n        noresponse_count: 0,\n        private_count: 0,\n        replurker_count: 0,\n        replurker_list: [],\n        favourite_count: 0,\n        favorite_list: [],\n        response_count: 0,\n        responded_count: 0,\n        responded_other_count: 0,\n        responded_other_list: [],\n        plurks_count: 0,\n        poll_count: 0,\n        poll_responder_count: 0,\n        poll_popular_plurk: {},\n        redditor_count: 0,\n        tiktoker_count: 0,\n        instagrammer_count: 0,\n        imgurer_count: 0,\n        facebooker_count: 0,\n        twitterer_count: 0,\n        youtuber_count: 0,\n        id: 0,\n        // Other\n        next: document.createElement('div'),\n        el: document.createElement('div'),\n        randomcolors: [],\n        parent: this,\n        init: function (next) {\n            this.whispers_count = 0;\n            this.coins_count = 0;\n            this.porn_count = 0;\n            this.noresponse_count = 0;\n            this.private_count = 0;\n            this.replurker_count = 0;\n            this.replurker_list = [];\n            this.favourite_count = 0;\n            this.favorite_list = [];\n            this.response_count = 0;\n            this.responded_count = 0;\n            this.responded_other_count = 0;\n            this.responded_other_list = [];\n            this.plurks_count = 0;\n            this.id = 0;\n            this.next = next;\n            this.randomcolors = [];\n\n            this.el = this.next.querySelector(\"#statistics\");\n\n            // Obverse when element is added to DOM\n            var observer = new MutationObserver((mutationsList) => {\n                mutationsList.forEach(mutation => {\n                    mutation.addedNodes.forEach(el => {\n                        this.afterDraw(el);\n                    });\n                });\n            });\n            observer.observe(this.el, {\n                attributes: true,\n                childList: true,\n                subtree: false\n            });\n        },\n        clear: function () {\n            this.el.innerHTML = \"\";\n        },\n        listCount: function (list, collection) {\n            if (collection.length > 0) {\n                collection.forEach(value => {\n                    var index = list.findIndex(el => el.id == value)\n\n                    if (index < 0) list.push({ id: value, count: 1 });\n                    else list[index].count++;\n                });\n            }\n\n            return list;\n        },\n        title: function (text, style = \"\", loading = false) {\n            if (loading) this.el.insertAdjacentHTML('beforeend', `<div class=\"statistics middle statistics-title ${style}\"><h3><span>${text}</span><span class=\"loading\"><i/></span></h3></div>`);\n            else this.el.insertAdjacentHTML('beforeend', `<div class=\"statistics middle statistics-title ${style}\"><h3><span>${text}</span><span class=\"line\"><i/></span></h3></div>`);\n        },\n        body: function (text, style = \"\") {\n            this.el.insertAdjacentHTML('beforeend', `<div class=\"statistics middle statistics-title ${style}\"><div class=\"body\">${text}</div></div>`);\n        },\n        afterDraw: function (el) {\n            var length = reduceMotionFilter(1);\n\n            if (hasClass(el, 'statistics-wrap')) {\n                var color = new colors();\n                var randomcolors = [color.getRandomColor(), color.getRandomColor()]\n                var anim = el.querySelector(\".anim\");\n\n                gsap.set(anim, {\n                    background: 'radial-gradient(at 10% 10%, ' + randomcolors[0] + ' 0%, ' + randomcolors[1] + ' 100%)'\n                });\n\n                gsap.to(anim, {\n                    opacity: 1,\n                    duration: length / 2,\n                    ease: \"power3.out\"\n                }, 0);\n\n                // Scroll animation wrap section\n                var screen = gsap.matchMedia();\n                screen.add(\"(min-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: window.innerHeight * 1 / 5\n                        }, {\n                            y: 0,\n                            ease: \"ease.out\"\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"0 100%-=100px\",\n                            animation: tl,\n                            scrub: 2\n                        });\n                    });\n                });\n                screen.add(\"(max-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: 0\n                        }, {\n                            y: 0\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"100px 100%-=100px\",\n                            animation: tl,\n                            scrub: 1\n                        });\n                    });\n                });\n\n                scroll.push(function (tl) {\n                    if (el.querySelector(\".big\")) {\n                        var number = Number(el.querySelector(\".big\").textContent);\n                        if (number > 0) {\n                            var load = { progress: 0 };\n                            var duration = 1;\n                            if (number >= 500 && number < 1000) duration = 2;\n                            else if (number >= 1000 && number < 99999) duration = 3;\n                            else if (number >= 99999) duration = 4;\n                            tl.to(load, {\n                                progress: number,\n                                snap: \"progress\",\n                                ease: \"power3.out\",\n                                duration: duration,\n                                onUpdate: () => {\n                                    el.querySelector(\".big\").textContent = plural(load.progress);\n                                }\n                            }, 0);\n                        }\n                    }\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"0 100%-=100px\",\n                        end: \"100px 100%-=100px\",\n                        animation: tl,\n                        toggleActions: \"play none none none\"\n                    });\n                });\n            } else {\n                // Scroll animation line section\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelectorAll(\"i\"), {\n                        x: \"-100%\"\n                    }, {\n                        x: \"0%\",\n                        ease: \"ease.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"100% 100%\",\n                        end: \"100% 0\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'drawgraph')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".graph\"), {\n                        y: 100\n                    }, {\n                        y: 0\n                    }, 0);\n\n                    tl.fromTo(el.querySelector(\".graph i\"), {\n                        height: \"0%\"\n                    }, {\n                        height: el.querySelector(\".graph i\").getAttribute(\"data-number\") + \"%\"\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'coins')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".big\"), {\n                        y: \"50%\"\n                    }, {\n                        y: 0,\n                        ease: \"power3.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 2\n                    });\n                });\n            }\n\n            // Capture function\n            this.capture(el);\n\n            scroll.refresh();\n        },\n        capture: (el) => {\n            var capture = el.querySelector(\".capture small\");\n            if (!capture) return;\n\n            capture.onclick = async () => {\n                if (capture.generating) return;\n\n                var imgs = el.querySelectorAll(\"img\");\n\n                // Informing user the process is starting\n                capture.generating = true;\n                document.body.style.cursor = \"wait\";\n\n                // Proxying images\n                imgs.forEach(img => {\n                    if (!img.getAttribute(\"src\").includes(\"http\") || img.localUrl) return;\n\n                    img.localUrl = true;\n                    img.setAttribute(\"src\", api.url + \"?img=\" + img.getAttribute(\"src\"));\n                });\n                // Load and cache image\n                await waitForImg(imgs, (_, progress) => {\n                    capture.innerHTML = \"Downloading images... (\" + Math.round(progress) + \"%)\";\n                });\n\n                // HTML to Canvas magic\n                capture.innerHTML = \"Processing...\";\n                var canvas = await html2canvas(el.querySelector(\".anim\"), {\n                    backgroundColor: null,\n                    logging: false,\n                });\n\n                // Download the output\n                var link = document.createElement(\"a\");\n                link.style.display = \"none\";\n                link.download = \"replurk\" + this.year + \"-\" + Date.now() + \".png\";\n                link.href = canvas.toDataURL();\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n                link.remove();\n\n                // Reset button after 3s\n                capture.innerHTML = \"Done\";\n                document.body.style.cursor = \"default\";\n                setTimeout(() => {\n                    capture.innerHTML = \"Recapture\";\n                    capture.generating = false;\n                }, 3000);\n            }\n        },\n        wrapper: function (style, text, background) {\n            if (!background) return '<div class=\"statistics middle statistics-wrap ' + style + '\"><div class=\"anim\">' + text + '</div><div class=\"capture\"><small>Capture</small></div></div>';\n            else return '<div class=\"statistics middle statistics-wrap ' + style + '\"><div class=\"anim\" style=\"background-images:url(' + background + ')\">' + text + '</div><div class=\"capture\"><small>Capture</small></div></div>';\n        },\n        draw: function (style, number, text, background) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"big\">' + number + '</span>\\\n\t\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'), background);\n            }\n        },\n        drawDiv: function (style, text) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '<div class=\"box\">' + text + '</div>'));\n        },\n        drawGraph: function (style, number, text) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawgraph movetitle\", '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"graph\"><i data-number=\"' + number + '\"></i></span>\\\n\t\t\t\t\t\t<span class=\"info\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'));\n            }\n        },\n        drawImage: function (style, image, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawimage\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span class=\"avatar\"><img src=\"' + image + '\" /></span>\\\n\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawHTML: function (style, title, html) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawhtml\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<div class=\"htmlcontent\">' + html + '</div>\\\n\t\t\t\t\t<div class=\"title\">' + title + '</div>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawLink: function (style, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawlink\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span>' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawPost: function (style, id, title, text, badge) {\n            var url = \"\";\n            if (id) url = 'https://plurk.com/p/' + id.toString(36);\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawpost\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<a href=\"' + url + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<p class=\"post\">' + text + '</p>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawUserList: async function (style, id, title, users) {\n            var html = \"\";\n            var max = users.length >= 5 ? 5 : users.length;\n            var length = reduceMotionFilter(1);\n\n            this.drawHTML(`${style} drawuserlist movetitle ${id}`, title, \"<span class='info'>Downloading user data</span>\");\n            for (var index = 0; index < max; index++) {\n                let user = users[index];\n                let friends = this.parent.friends\n                let friend = await friends.find(user.id);\n                if (friend) {\n                    var plurker = new element(user.id, friend, \"\", plurker => {\n                        plurker.avatar = new span()\n                            .class(\"avatar\")\n                            .html(`<img src=\"${friends.getAvatar(plurker.user.id)}\" />`);\n                        plurker.name = new span()\n                            .class(\"name\")\n                            .html(`${plurker.user.display_name}`);\n                        plurker.counts = new span()\n                            .class(\"count\")\n                            .html(`${user.count}`);\n                        plurker.el\n                            .appendChild(plurker.avatar.el)\n                            .appendChild(plurker.name.el)\n                            .appendChild(plurker.counts.el)\n                            .setAttribute(\"href\", `https://plurk.com/${plurker.user.nick_name}`);\n                    });\n                    plurker.create();\n                    html += plurker.el.outerHTML;\n                } else {\n                    max++;\n                }\n            }\n            this.el.querySelector(`.${id} .htmlcontent`).innerHTML = html;\n\n            // Stagger animation\n            if (id == 'mostinteraction' || id == 'mvp') {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        scale: .3,\n                        opacity: 0\n                    }, {\n                        scale: 1,\n                        opacity: 1,\n                        ease: \"elastic.out(1.2, 0.5)\",\n                        duration: length * 3 / 4,\n                        stagger: {\n                            amount: length / 3,\n                            from: \"end\"\n                        }\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"50% 100%\",\n                        end: \"50% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            } else {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        y: 50,\n                        opacity: 0\n                    }, {\n                        y: 0,\n                        opacity: 1,\n                        duration: length,\n                        ease: \"power3.out\",\n                        stagger: length / 3\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"0% 100%\",\n                        end: \"0% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            }\n        },\n        attach: function (charttitle, node, max) {\n            var id = node.id\n            var chart\n            var title\n            var text\n            var anim\n            var wrapper\n            var capture\n            var opacity = 0\n            var position = max\n            var zIndex = 0\n            var hidden = true\n\n            if (node.position <= max) {\n                hidden = false\n                zIndex = position = (node.position - 1)\n                opacity = 1\n            }\n\n            // Create the box\n            if (!this.next.querySelector(`.${id}`)) {\n                chart = document.createElement('div')\n                chart.setAttribute('class', 'chart')\n\n                title = document.createElement('div')\n                title.classList.add('title')\n                title.innerHTML = charttitle\n\n                text = document.createElement('div')\n                text.classList.add('text')\n                text.appendChild(chart)\n                text.appendChild(title)\n\n                anim = document.createElement('div')\n                anim.classList.add('anim')\n                anim.appendChild(text)\n\n                text = document.createElement('small')\n                text.innerHTML = \"Capture\"\n\n                capture = document.createElement('div')\n                capture.classList.add('capture')\n                capture.appendChild(text)\n\n                wrapper = document.createElement('div')\n                wrapper.classList.add(\"statistics\", \"middle\", \"statistics-wrap\", \"attach\", id)\n                wrapper.appendChild(anim)\n                wrapper.appendChild(capture)\n\n                this.el.insertAdjacentElement(\"beforeend\", wrapper)\n            }\n\n            // Add  element\n            if (!hidden && !node.attached) {\n                var maxTop = max / (max - 1) * 100\n\n                node.insertTo(this.el.querySelector(`.${id} .chart`))\n\n                gsap.set(node.el, {\n                    top: maxTop + \"%\",\n                    opacity: 0,\n                    zIndex: 0,\n                })\n            }\n            // Update position\n            if (!hidden || !node.hidden) {\n                var currentTop = position / (max - 1) * 100\n                var length = reduceMotionFilter(1)\n\n                gsap.killTweensOf(node.el)\n                gsap.to(node.el, {\n                    top: currentTop + \"%\",\n                    opacity: opacity,\n                    zIndex: zIndex,\n                    duration: length / 2,\n                    ease: \"power3.out\",\n                    onComplete: function () {\n                        if (hidden) {\n                            node.destroy();\n                        }\n                    }\n                })\n                node.hidden = hidden\n            }\n\n            node.update()\n        },\n        drawAll: async function (plurks) {\n            var response_percentage = Math.round((this.plurks_count - this.noresponse_count) / this.plurks_count * 100);\n\n            this.parent.most.responses.draw(plurks);\n            this.drawGraph('center graph percentage', response_percentage, 'Around <i>' + response_percentage + '%</i> of my plurks got <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> responses ' + ((response_percentage <= 50) ? '<img src=\"https://api.iconify.design/fluent-emoji:crying-face.svg\" />' : '<img src=\"https://api.iconify.design/fluent-emoji:star-struck.svg\" />'));\n\n            this.draw('spansmall recievereplurk', this.replurker_count, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + plural(this.replurker_count, 'replurk') + '</i>');\n            this.parent.most.replurk.draw(plurks);\n\n            this.parent.most.favorite.draw(plurks);\n            this.draw('spansmall recievelove', this.favourite_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + plural(this.favourite_count, 'love') + '</i>');\n\n            this.draw('spansmall privateplurk', this.private_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:lip.svg\" /> ' + plural(this.private_count, 'private plurk') + '</i>');\n            this.draw('spansmall whisper', this.whispers_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-in-clouds.svg\" /> ' + plural(this.whispers_count, 'whisper') + '</i>');\n            this.draw('spansmall porn', this.porn_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg\" /> ' + plural(this.porn_count, 'adult plurk') + '</i>');\n\n            this.draw('span2 responsecount', this.plurks_count + \" &rarr; \" + this.response_count, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(this.response_count, 'response') + '</i> from <i>' + plural(this.plurks_count, 'plurk') + '</i>');\n            this.draw('spansmall center coins', this.coins_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:coin.svg\" /> ' + plural(this.coins_count, 'coin') + '</i>');\n\n            if (this.favorite_list.length > 0) this.drawUserList(\"avatar\", \"loved\", 'These Plurkers <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Loved</i> My Posts', this.favorite_list.sort(this.parent.most.sort));\n            if (this.replurker_list.length > 0) this.drawUserList(\"avatar\", \"replurked\", 'These Plurkers likes to <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Replurked</i> My Posts', this.replurker_list.sort(this.parent.most.sort));\n        }\n    };\n\n    // Most statistics object renderer\n    most = {\n        parent: this,\n        sort: (a, b) => b.count - a.count,\n        // Find and count all based on regex\n        findregex: function (regex, replace, content, storage) {\n            var result = content.match(regex);\n\n            for (var index in result) {\n                var value = replace(result[index]);\n                var idx = storage.findIndex(el => el.value == value);\n\n                if (idx < 0) {\n                    storage.push({\n                        id: value,\n                        value: value,\n                        count: 1\n                    });\n                } else {\n                    storage[idx].count++;\n                }\n            }\n\n            return result;\n        },\n        init: function () {\n            this.responders.data = [];\n            this.mentions.data = [];\n            this.mentions.dataAll = [];\n            this.myemoticons.data = [];\n            this.hashtags.data = [];\n            this.links.links = [];\n            this.links.pics = [];\n            this.types.words = 0;\n            this.types.chars = 0;\n        },\n        countAll: async function (data) {\n            // Find and count all my emoticons from my post\n            if (data.user_id == this.parent.me.id) this.myemoticons.count(data.content);\n            // Find and count all mentions from my post\n            await this.mentions.count(data.content_raw);\n            // Find and count all hashtags from my post\n            if (data.user_id == this.parent.me.id) this.hashtags.count(data.content);\n            // Find and count all links and pictures post from my post\n            if (data.user_id == this.parent.me.id) this.links.count(data.content, data.plurk_id, data.response_count, data.replurkers_count, data.favorite_count);\n            // Find and count characther and words from my post\n            if (data.user_id == this.parent.me.id) this.types.count(data.content_raw);\n        },\n        responders: {\n            data: [],\n            parent: this,\n            count: async function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.user_id == response.user_id;\n                });\n\n                if (index < 0) {\n                    let friends = this.parent.friends\n                    var user = await friends.find(response.user_id);\n                    this.data.push(new element('mostresponders', user, friends.getAvatar(user.id)));\n                } else {\n                    this.data[index].count++;\n                }\n                this.data.sort(this.parent.most.sort);\n\n                // Update top 5\n                var index = 1;\n                for (var i = 0; i < this.data.length; i++) {\n                    this.data[i].position = this.data.length;\n                    if (this.data[i].user_id != this.parent.me.id && this.data[i].user_id != 99999) {\n                        this.data[i].position = index++;\n                        this.parent.statistics.attach('<i>Top <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> Responders</i> <strong>of My Timeline</strong>', this.data[i], 5);\n                    }\n                }\n            },\n            draw: function () {\n                let friends = this.parent.friends\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", friends.getAvatar(this.data[index].user_id), 'https://plurk.com/' + this.data[index].user.nick_name, '<i>Most Responder</i>', this.data[index].user.display_name, this.data[index].count);\n                }\n            }\n        },\n        mentions: {\n            data: [],\n            dataAll: [],\n            parent: this,\n            count: async function (content) {\n                var result = this.parent.most.findregex(/\\@(\\w{1,30})[\\ |\\:]/g, value => value.replace(/\\@|\\ |\\:/g, ''), content, this.data);\n                var max = 5;\n                var index = 1;\n\n                if (result) {\n                    // Update top 5\n                    this.data.sort(this.parent.most.sort);\n                    for (var idx = 0; idx < this.data.length; idx++) {\n                        this.data[idx].position = this.data.length;\n\n                        if (index <= max) {\n                            let friends = this.parent.friends\n                            var user = await friends.findByUsername(this.data[idx].value);\n\n                            if (this.data[idx].el == undefined) {\n                                this.data[idx] = new element('mostmentionedbyme', user, \"\", plurker => {\n                                    plurker.avatar = new span().class(\"avatar\").html(`<img src=\"${friends.getAvatar(plurker.user_id)}\" />`);\n                                    plurker.name = new span().class(\"name\").html(`@${plurker.nick_name}`);\n                                    plurker.counts = new span().class(\"count\").html(plurker.count);\n                                    plurker.el.appendChild(plurker.avatar.el);\n                                    plurker.el.appendChild(plurker.name.el);\n                                    plurker.el.appendChild(plurker.counts.el);\n                                    plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.nick_name);\n                                });\n                            }\n\n                            if (user.id != this.parent.me.id && user.id != 99999) {\n                                this.data[idx].position = index++;\n                                this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/fluent-emoji:person-raising-hand-light.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                            }\n                        }\n\n                        if (this.data[idx].el) this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/fluent-emoji:person-raising-hand-light.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                    }\n                }\n            },\n            draw: function () {\n                let friends = this.parent.friends\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", friends.getAvatarByUsername(this.data[index].value), 'https://plurk.com/' + this.data[index].value, '<i>Most Mentioned</i> by me', \"@\" + this.data[index].value, this.data[index].count);\n                }\n            }\n        },\n        myemoticons: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/emoticon_my\\\" src=\\\"(.*?)\\\"/g, function (value) {\n                    return value.replace(/emoticon_my\\\" src=\\\"|\\\"/gi, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 7;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><img src=\"' + this.data[i].value + '\" /> <span class=\"count\">' + this.data[i].count + '</span></div>';\n                if (html != \"\") this.parent.statistics.drawHTML(\"smallspan grid emoticons\", 'Most Used <i>My Emoticons</i>', html);\n            }\n        },\n        hashtags: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/hashtag\\\"\\>(.*?)\\</g, function (value) {\n                    return value.replace(/hashtag\\\"\\>\\#|\\.\\<|\\</g, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 5;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><a href=\"https://plurk.com/search?q=' + this.data[i].value + '\" target=\"_BLANK\" /><span class=\"count\">' + this.data[i].count + '</span> #' + this.data[i].value + '</a></div>';\n                if (html != \"\") {\n                    html = \"<strong>#</strong>\" + html;\n                    this.parent.statistics.drawHTML(\"hashtags\", 'Most Used <i>Hashtags</i>', html);\n                }\n            }\n        },\n        links: {\n            data: [],\n            links: [],\n            pics: [],\n            parent: this,\n            count: function (content, id, response, replurk, loved) {\n                var result = content.match(/href\\=\\\"(.*?)\\\"\\ class=\\\"(.*?)\\\"\\ rel/g);\n                var count = 0;\n                var pics = [];\n                var links = [];\n\n                if (result) for (var data of result) {\n                    if (!this.data[id]) {\n                        count = response + (replurk * 250) + (loved * 50);\n                    }\n\n                    if (data.includes(\"pictureservices\")) {\n                        this.pics.push(data);\n                        if (count > 0) {\n                            var pic = data.split('\\\"')\n                            pics.push({\n                                url: pic[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n                    }\n                    else {\n                        this.links.push(data);\n                        if (count > 0) {\n                            var link = data.split('\\\"')\n                            links.push({\n                                url: link[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n\n                    }\n                }\n\n                if (count) this.data.push({\n                    id: id,\n                    pics: pics,\n                    links: links,\n                    count: count,\n                    content: content\n                });\n            },\n            drawLinks: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].links.length > 0) {\n                        var link = this.data[index].links[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].id.toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"post\"><div class=\"info\">' + this.data[index].content + '</div><div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + link.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + link.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + link.loved + '</span>' + url + '</div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n                if (this.links.length > 0) this.parent.statistics.drawDiv('spansmall sharedlinks', \"<div class='title'>I shared <i>🔗 \" + plural(this.links.length, 'link') + '</i> and this is the most popular one</div>' + result);\n            },\n            drawPics: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].pics.length > 0) {\n                        var pics = this.data[index].pics[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"box\"><div class=\"image\" style=\"background-image: url(' + api.url + \"?img=\" + pics.url + ')\"></div><div class=\"post\">' + this.data[index].content + '<div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + pics.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + pics.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + pics.loved + '</span>' + url + '</div></div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n\n                if (this.pics.length > 0) this.parent.statistics.draw('spansmall sharedpictures', this.pics.length, 'I shared <i>🖼 ' + plural(this.pics.length, 'image') + '</i>');\n                if (result != \"\") this.parent.statistics.drawHTML('span2 previewpics', '<i>🖼 Most Popular Image</i>', result);\n            }\n        },\n        types: {\n            words: 0,\n            chars: 0,\n            parent: this,\n            count: function (content) {\n                var words = content.split(\" \");\n\n                this.chars += content.length;\n                this.words += words.length;\n            },\n            draw: function () {\n                if (this.chars > 0) this.parent.statistics.draw('span2 mediumnumber', this.chars, 'I typed more than  <i>' + pluralinwords(this.chars, 'character') + '</i>, around <i>' + pluralinwords(this.words, 'word') + '</i> this year');\n            }\n        },\n        responses: {\n            parent: this,\n            sort: (a, b) => b.replurkers_count - a.replurkers_count,\n            draw: function (posts) {\n                var post\n                posts.sort(this.sort)\n                if (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.response_count > 0) {\n                    this.parent.statistics.drawPost('postcontent span2 mostresponded', post.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> Most Responded</i> ' + datediff(post.posted), post.content, post.response_count);\n                }\n            }\n        },\n        replurk: {\n            parent: this,\n            sort: (a, b) => b.replurkers_count - a.replurkers_count,\n            draw: function (posts) {\n                var post\n                posts.sort(this.sort);\n                if (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.replurkers_count > 0) {\n                    this.parent.statistics.drawPost('postcontent span2 mostreplurked', post.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Most Replurked</i> ' + datediff(post.posted), post.content, post.replurkers_count);\n                }\n            }\n        },\n        favorite: {\n            parent: this,\n            sort: (a, b) => b.favorite_count - a.favorite_count,\n            draw: function (posts) {\n                var post\n                posts.sort(this.sort);\n                if (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.favorite_count > 0) {\n                    this.parent.statistics.drawPost('postcontent span2 mostfavorited', post.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Most Loved</i> ' + datediff(post.posted), post.content, post.favorite_count);\n                }\n            }\n        },\n        interaction: {\n            data: [],\n            parent: this,\n            count: function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier++;\n                    else this.data[index].multiplier = 1;\n                    this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span2\", \"mostinteraction\", \"Plurkers who really like to <i><img src='https://api.iconify.design/fluent-emoji:speaking-head.svg' /> interact</i> with me\", result);\n                } catch {\n                    console.info(\"Error while counting most interacted plurker\");\n                }\n            }\n        },\n        mvp: {\n            data: [],\n            parent: this,\n            count: function (response, type) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (type == \"replurk\") {\n                        this.data[index].count += (response.count * 250);\n                    } else if (type == \"favorite\") {\n                        this.data[index].count += (response.count * 50);\n                    } else if (response.content_raw.length > 16) {\n                        if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier += .5;\n                        else this.data[index].multiplier = .5;\n                        this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                    }\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span3\", \"mvp\", \"My \" + this.parent.year + \" <i><img src='https://api.iconify.design/fluent-emoji:biting-lip.svg' /> MVP</i>\", result);\n                } catch (error) {\n                    console.info(\"Error while counting my mvp\", error);\n                }\n            }\n        }\n    };\n\n    // Inactive plurker object\n    inactive = {\n        draw: (data, year) => {\n            this.statistics.draw('inactive', year + \" &#8617;\", 'I\\'ve been inactive since ' + year + ' <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n            this.statistics.drawPost('postcontent span2 inactivemore', data.plurk_id, '<i>My last Plurk</i> ' + datediff(data.posted), data.content, data.response_count);\n        },\n        empty: () => {\n            this.statistics.draw('inactive', '-', 'I didn\\'t post anything at this year <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n        }\n    }\n\n    // Loading object\n    loading = {\n        count: 0,\n        prev_count: 0,\n        counts: -1,\n        clean: false,\n        next: document.createElement('div'),\n        parent: this,\n        isComplete: function () { return this.count == this.counts },\n        init: function (next) {\n            this.count = 0;\n            this.prev_count = 0;\n            this.counts = -1;\n            this.clean = false;\n            this.next = next;\n        },\n        draw: function (item) {\n            return new Promise(resolve => {\n                var length = reduceMotionFilter(1);\n                this.prev_count = item;\n\n                if (!this.next.querySelector(\".statistics.statistics-loading\")) {\n                    this.parent.statistics.draw(\"statistics-loading\", item + \"%\", \"<i class='month'>Data from \" + this.year + \"</i>. Loading. <small>As long as you didn't close this browser tab, You can resume later by refreshing this page.</small>\");\n                }\n\n                // Animate loading\n                var load = { progress: this.prev_count };\n                gsap.to(load, {\n                    progress: Math.round(item),\n                    snap: \"progress\",\n                    ease: \"linear\",\n                    duration: length / 4,\n                    onUpdate: () => {\n                        var el = this.next.querySelector(\".statistics-loading .big\");\n                        if (el) el.innerHTML = load.progress + \"%\";\n                    },\n                    onComplete: async () => {\n                        if (this.clean) await this.done();\n                        resolve();\n                    }\n                });\n            });\n        },\n        loop: async function (length) {\n            this.clean = true;\n            this.counts = length;\n            await this.draw(0);\n        },\n        update: async function (month, value) {\n            var el = this.next.querySelector(\".statistics-loading .month\");\n            if (month && el) el.innerHTML = month;\n\n            if (this.counts >= 0) {\n                this.count = value ? value : this.count + 1;\n                await this.draw(Math.round(100 * (this.count / this.counts)));\n            }\n        },\n        fakeupdate: async function () {\n            if (this.counts >= 0) {\n                this.count++;\n                if (this.count >= (this.counts - 10)) this.count = (this.counts - 10);\n                await this.draw(100 * (this.count / this.counts));\n            }\n        },\n        forcedone: async function () {\n            this.count = this.counts;\n            await this.draw(100);\n        },\n        done: function () {\n            return new Promise(resolve => {\n                var length = reduceMotionFilter(1);\n\n                if (this.isComplete()) {\n                    var el = this.next.querySelector(\".statistics.statistics-loading\");\n                    this.clean = false;\n                    if (el) {\n                        gsap.to(el, {\n                            opacity: 0,\n                            width: 0,\n                            height: 0,\n                            padding: 0,\n                            margin: 0,\n                            overflow: \"hidden\",\n                            duration: length / 2,\n                            ease: \"power3.out\",\n                            onComplete: () => {\n                                el.remove();\n                                scroll.refresh();\n                                resolve();\n                            }\n                        });\n                    }\n                } else resolve();\n            });\n        }\n    }\n\n    // Scroll Animation\n    scrollAnimate = {\n        credits: (tl) => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation, #credits .made\"), {\n                y: window.innerHeight * 1 / 8\n            }, {\n                y: 0,\n                ease: \"linear\",\n                duration: length * 2,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                stagger: {\n                    from: 'end',\n                    amount: length / 10\n                },\n                duration: length,\n                ease: \"power3.in\"\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .made\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length,\n                ease: \"power3.in\"\n            }, length * 3 / 10);\n\n            return tl;\n        },\n        statistics: () => {\n            var next = this.next;\n\n            // Scroll animate statistics\n            scroll.push(tl => this.scrollAnimate.credits(tl), tl => ScrollTrigger.create({\n                trigger: next.querySelectorAll(\"#statistics\"),\n                start: \"100%-=\" + window.innerHeight + \" 0\",\n                end: \"100% 0\",\n                animation: tl,\n                scrub: .5\n            }));\n        },\n        permisions: () => {\n            var next = this.next;\n\n            // Scroll animation permission section\n            scroll.push((tl) => {\n                tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n                    y: 0\n                }, {\n                    y: window.innerHeight * -3 / 4,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sup\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * -1 / 10,\n                    rotation: -10,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sub\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * 1 / 10,\n                    rotation: 10,\n                    ease: \"linear\"\n                }, 0);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n            scroll.push((tl) => {\n                tl = this.scrollAnimate.credits(tl);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n        },\n        menu: () => {\n            // Scroll animation menu and logout\n            scroll.push(tl => tl, tl => {\n                return ScrollTrigger.create({\n                    trigger: 'main',\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    onUpdate: update => {\n                        var el1 = '.logo, .size, .lamp, .switch';\n                        var el2 = el1 + \", .footer > *\";\n\n                        if (update.direction > 0) {\n                            gsap.killTweensOf(_qAll(el2));\n                            gsap.to(_qAll(el1), { y: -100, opacity: 0 });\n                            gsap.to(_qAll('.footer > *'), { y: 100, opacity: 0 });\n                        } else {\n                            gsap.to(_qAll(el2), { y: 0, opacity: 1 });\n                        }\n                    }\n                });\n            });\n        },\n        browserBar: (login = true) => {\n            if (login) {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#hello',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#statistics',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnter: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"white\");\n                        }\n                    });\n                });\n            } else {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#permission',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n            }\n        }\n    }\n\n    constructor(year) {\n        // Which year?\n        this.year = year;\n        this.startDate = this.year + '-10-29T09:00:00';\n        this.endDate = new Date((this.year - 1) + '-10-29T09:00:00');\n        this.days = 60 * 60 * 24 * 1000;\n        this.fulldays = 365;\n    }\n\n    // Browser color\n    getSetStateColor(state) {\n        if (typeof (state) == \"object\" && state.length >= 1) {\n            if (state.length == 1) {\n                darkmode.browserColorDark = state[0];\n                darkmode.browserColorLight = state[0];\n            } else {\n                darkmode.browserColorDark = state[1];\n                darkmode.browserColorLight = state[0];\n            }\n        } else if (state == \"green\") {\n            darkmode.browserColorDark = \"#0d4f03\";\n            darkmode.browserColorLight = \"#60e670\";\n        } else if (state == \"yellow\") {\n            darkmode.browserColorDark = \"#705f02\";\n            darkmode.browserColorLight = \"#FFD700\";\n        } else {\n            darkmode.browserColorDark = \"#000000\";\n            darkmode.browserColorLight = \"#FFFFFF\";\n        }\n\n        return [darkmode.browserColorLight, darkmode.browserColorDark];\n    }\n    browserColor(state, duration, ease) {\n        this.getSetStateColor(state);\n        darkmode.setDarkMode(duration, ease);\n    }\n\n    // Show/hide Animations\n    // Login Pages\n    showLoginPage(tl) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n\n        this.browserColor(\"green\", 1);\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            display: \"\",\n            opacity: 0,\n            top: 0\n        }, {\n            opacity: 1,\n            duration: length,\n            ease: \"power3.in\"\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: length / 5,\n            duration: length,\n            ease: \"power3.out\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    top: \"\"\n                });\n            }\n        }, \">-\" + (length / 2));\n\n        return tl;\n    }\n    hideLoginPage(tl) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n\n        tl.set(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            top: 0,\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *, #permission form\"), {\n            y: 0,\n            opacity: 1,\n        }, {\n            y: 200,\n            opacity: 0,\n            stagger: {\n                from: \"end\",\n                amount: length / 5\n            },\n            duration: length,\n            ease: \"power3.in\",\n            onComplete: () => {\n                this.browserColor(\"yellow\");\n            }\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            opacity: 1\n        }, {\n            opacity: 0,\n            duration: length,\n            ease: \"power3.in\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    display: \"none\",\n                    top: \"\"\n                }, \">\");\n            }\n        }, \">-\" + (length / 4));\n\n        return tl;\n    }\n    // Statistic Pages\n    showStatisticPages() {\n        return new Promise(resolve => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n            var tl = gsap.timeline();\n\n            tl.fromTo(next.querySelectorAll(\"#hello\"), {\n                display: \"\",\n                opacity: 0\n            }, {\n                opacity: 1,\n                ease: \"power3.in\",\n                duration: length,\n                onStart: () => this.browserColor(\"green\", .5)\n            }, length / 4);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext > *\"), {\n                display: \"\",\n                opacity: 0,\n                y: 200\n            }, {\n                opacity: 1,\n                y: 0,\n                duration: length,\n                stagger: length / 5,\n                ease: \"power3.out\"\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\" #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n                display: \"\",\n                opacity: 0,\n                y: 200\n            }, {\n                opacity: 1,\n                y: 0,\n                duration: length,\n                stagger: length / 5,\n                ease: \"power3.out\"\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n                display: \"\",\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length / 2,\n                onComplete: () => resolve()\n            }, length / 2);\n        });\n    }\n    hideStatisticPages() {\n        return new Promise(async resolve => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n            var tl = gsap.timeline();\n\n            await animate.top(next);\n\n            tl.fromTo(next.querySelectorAll(\".footer > *, #hello .bgtext > *, #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n                opacity: 1,\n                y: 0\n            }, {\n                opacity: 0,\n                y: 200,\n                duration: length,\n                stagger: {\n                    from: \"end\",\n                    amount: length / 5\n                },\n                ease: \"power3.in\"\n            }, length / 5);\n            tl.set(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n                opacity: 0\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\"#hello\"), {\n                opacity: 1\n            }, {\n                opacity: 0,\n                duration: length,\n                ease: \"power3.in\",\n                onComplete: () => {\n                    gsap.set(next.querySelectorAll(\".grant\"), { display: \"none\" });\n                    resolve();\n                }\n            }, length / 2);\n        });\n    }\n\n    // Login messages\n    message(message, quick) {\n        var next = this.next;\n\n        var loginmessage = next.querySelector(\"#login-message\");\n\n        if (quick) {\n            loginmessage.innerHTML = message;\n        } else {\n            gsap.to(loginmessage, {\n                opacity: 0,\n                onComplete: function () {\n                    loginmessage.innerHTML = message;\n                    gsap.to(loginmessage, {\n                        opacity: 1\n                    });\n                }\n            });\n        }\n    }\n\n    // Logout\n    async requestLogout() {\n        var tl = gsap.timeline();\n\n        api.abort();\n\n        // Hide statistic pages\n        await this.hideStatisticPages(tl);\n\n        // Logout\n        await api.call(\"?fetch=logout\");\n        this.statistics.clear();\n        api.clear();\n        this.login();\n\n        scroll.refresh();\n    }\n\n    // Request token\n    async requestToken(text) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n        var tokenlink = next.querySelector(\"#tokenurl\");\n        tokenlink.textContent = \"Connecting Plurk...\";\n\n        var tl = gsap.timeline();\n        tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            duration: length,\n            ease: \"power3.out\"\n        }, length);\n        tl.fromTo(next.querySelectorAll(\"#permission h1, #permission li\"), {\n            display: \"\",\n            y: 50,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: length / 10,\n            duration: length,\n            ease: \"power3.out\"\n        }, length);\n\n        api.call(\"?request=token\").then(data => {\n            if (text) {\n                message(text);\n            } else {\n                tokenlink.textContent = \"Grant Access\";\n                tokenlink.setAttribute(\"href\", api.url + \"?redirect=\" + data.message.url);\n            }\n        }, () => {\n            message(\"Error when requesting verification from Plurk, please reload your browser again.\");\n        });\n\n        if (!text) next.querySelector(\"#permission form\").style.display = \"none\";\n    }\n\n    // Display current Plurker data\n    async displayPlurkerData() {\n        var plurker = this.me;\n        var next = this.next;\n        var extra = \"\";\n        var length = reduceMotionFilter(1);\n\n        // plurks_count\n        var days = (plurker.anniversary.years * 365) + plurker.anniversary.days;\n        var responses = Math.round(plurker.response_count / days);\n\n        next.querySelector(\"#hello .thumbs\").innerHTML = \"<img src='\" + plurker.avatar_big + \"' />\";\n        if (this.year == 2021) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>If \" + this.year + \" have been a rough year you, hopefully RePlurk will cheer you by bringing some good memories</p>\";\n        else if (this.year == 2022) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>It's 2020 v2, and this is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n        else next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>This is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\n        // Draw statistic\n        this.statistics.title('All Time', 'alltime');\n        if (plurker.anniversary.years && plurker.anniversary.days) {\n            this.statistics.draw('spansmall center posted', Math.round(plurker.plurks_count / days), 'I posted around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(Math.round(plurker.plurks_count / days), \"plurk\") + \" per day</i>\");\n\n            // Responses\n            var oneday = 16;\n            if (responses <= oneday) extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday / responses), \"hour\") + '</i>';\n            else extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday * 60 / responses), \"minute\") + '</i>';\n            this.statistics.draw('span2 center responded', responses, 'I responded around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(responses, \"time\") + \"</i> per day. \" + extra + \" when I'm not sleeping\");\n\n            var join = new Date(plurker.join_date)\n            this.statistics.draw('spansmall center anniversary', \"<strong><i>\" + monthNames[join.getMonth()] + \"</i> <i>\" + join.getFullYear() + \"</i></strong> <em>\" + join.getDate() + \"</em>\", \"I joined Plurk <i>\" + plural(plurker.anniversary.years, \"year\") + \"</i> and <i>\" + plural(plurker.anniversary.days, \"day\") + \"</i> ago\");\n            this.statistics.draw('spansmall center badges', plurker.badges.length, \"I have <i><img src='https://api.iconify.design/fluent-emoji:shield.svg' /> \" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        } else {\n            this.statistics.draw('', '-', \"There is no data in my timeline\");\n            this.statistics.draw('', plurker.badges.length, \"But at least I have <i>\" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        }\n\n        // Scroll animation hello section\n        scroll.push(tl => {\n            tl.fromTo(next.querySelectorAll(\"#hello .text, #hello .thumbs\"), {\n                y: 0\n            }, {\n                y: window.innerHeight * -3 / 4,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sup\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * -1 / 10,\n                rotation: -10,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sub\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * 1 / 10,\n                rotation: 10,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .arrow-big\"), {\n                y: 0,\n                opacity: 1\n            }, {\n                y: window.innerHeight * 1 / 4,\n                opacity: 0,\n                ease: \"linear\",\n                duration: length / 4,\n            }, 0);\n            return tl;\n        }, tl => ScrollTrigger.create({\n            trigger: next.querySelectorAll(\"#hello\"),\n            start: \"0 0\",\n            end: \"100% 0\",\n            animation: tl,\n            scrub: true\n        }));\n        scroll.refresh();\n    }\n    // Display statistics\n    async displayStatistics() {\n        this.statistics.title('This Year', 'thisyear');\n        this.statistics.draw(\"statistics-loading thisyearloading\", \"\", \"<i class='month'>Data from December</i>1 of 2. Loading \" + this.year + \" timeline. It can take up to 1 minute.\");\n\n        this.loading.init(this.next);\n        this.loading.loop(this.fulldays);\n\n        // Load loop timeline\n        var getTimeline = async (offset) => {\n            offset = (!offset) ? \"\" : \"&offset=\" + offset;\n\n            var data = await api.call(\"?fetch=plurk&filter=my\" + offset, 1);\n            if (data.success) {\n                this.friends.add(data.message.plurk_users);\n                this.plurks = this.plurks.concat(data.message.plurks);\n\n                if (data.message.plurks.length > 0) {\n                    var lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\n                    if (lastposted >= this.endDate) {\n                        this.loading.update(\"Data from \" + monthNames[lastposted.getMonth()] + \" \" + lastposted.getFullYear(), this.fulldays - Math.floor((lastposted - this.endDate) / this.days));\n\n                        // Load next plurks\n                        await getTimeline(data.message.offset);\n                    } else {\n                        while (lastposted < this.endDate && this.plurks.length > 1) {\n                            this.plurks.pop();\n                            lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n                        }\n                        await this.loading.forcedone();\n                    }\n                } else {\n                    await this.loading.forcedone();\n                }\n            } else {\n                this.requestLogout();\n            }\n        }\n        await getTimeline(this.startDate);\n\n        // When loading done\n        var largest_poll_result = 0;\n        if (this.plurks.length > 1) {\n            // Count user statistics\n            this.statistics.plurks_count = 0;\n            this.plurks.forEach(plurk => {\n                // Calculate the statistics\n                if (plurk.responded) this.statistics.responded_count++;\n                if (plurk.owner_id == this.me.id) {\n                    this.statistics.plurks_count++;\n                    this.statistics.replurker_count += plurk.replurkers.length;\n                    this.statistics.replurker_list = this.statistics.listCount(this.statistics.replurker_list, plurk.replurkers);\n                    this.statistics.favourite_count += plurk.favorers.length;\n                    this.statistics.favorite_list = this.statistics.listCount(this.statistics.favorite_list, plurk.favorers);\n                    if (plurk.anonymous) this.statistics.whispers_count++;\n                    if (plurk.coins) this.statistics.coins_count += plurk.coins;\n                    if (plurk.porn) this.statistics.porn_count++;\n                    if (!plurk.response_count) this.statistics.noresponse_count++;\n                    if (plurk.plurk_type == 3) this.statistics.private_count++;\n                    this.statistics.response_count += plurk.response_count;\n\n                    if (plurk.content_raw.includes(\"instagram.com\")) this.statistics.instagrammer_count++;\n                    if (plurk.content_raw.includes(\"facebook.com\")) this.statistics.facebooker_count++;\n                    else if (plurk.content_raw.includes(\"fb.watch\")) this.statistics.facebooker_count++;\n                    if (plurk.content_raw.includes(\"twitter.com\")) this.statistics.twitterer_count++;\n                    if (plurk.content_raw.includes(\"reddit.com\")) this.statistics.redditor_count++;\n                    if (plurk.content_raw.includes(\"tiktok.com\")) this.statistics.tiktoker_count++;\n                    if (plurk.content_raw.includes(\"imgur.com\")) this.statistics.imgurer_count++;\n                    if (plurk.content_raw.includes(\"youtube.com\")) this.statistics.youtuber_count++;\n\n                    // Calculate polls\n                    if (plurk.with_poll) {\n                        var response_count = plurk.poll.response.response_count;\n                        this.statistics.poll_count++;\n                        this.statistics.poll_responder_count += response_count;\n\n                        if (largest_poll_result < response_count) {\n                            largest_poll_result = response_count;\n                            this.statistics.poll_popular_plurk = plurk;\n                        }\n                    }\n                } else if (plurk.responded) this.statistics.responded_other_count++;\n            });\n\n            // Sort based on date\n            this.plurks.sort((a, b) => new Date(b.posted) - new Date(a.posted));\n\n            // Draw statistics\n            try {\n                await this.statistics.drawAll(this.plurks);\n            } catch (error) {\n                console.info(\"Error while counting statistics\", error);\n            }\n\n            // Display extended statistics\n            this.displayExtendedStatistics();\n        } else {\n            if (this.plurks[0]) {\n                var date = new Date(plurk[0].posted);\n                inactive.draw(plurk[0], date.getFullYear());\n            }\n            else inactive.empty();\n        }\n    }\n    // Display extended statistics\n    async displayExtendedStatistics() {\n        // Deeper user statistics\n        this.statistics.title('Dig Deeper', 'digdeeper');\n        this.statistics.draw(\"statistics-loading digdeeperloading\", \"\", \"<i class='month'>Data from \" + this.year + \"</i> 2 of 2. Loading all responses. <small>If the loading seems to stop, refresh your browser tab to resume your download. Closing your browser tab will clear all downloaded data.</small>\");\n\n        // Load each post responses and calculate statistics\n        this.loading.init(this.next);\n        this.loading.loop(this.plurks.length);\n\n        // Get the responses for each plurks in parallel\n        this.plurks.sort((a, b) => new Date(a.posted) < new Date(b.posted));\n        for (var plurk of this.plurks) {\n            var date = new Date(plurk.posted);\n            this.loading.update(\"Data from \" + monthNames[date.getMonth()] + \" \" + date.getFullYear());\n\n            // Count all\n            await this.most.countAll(plurk);\n\n            // Count responses\n            if (plurk.response_count > 0 && (plurk.responded || plurk.owner_id == this.me.id)) {\n                var result = await api.call(\"?fetch=response&plurk_ids=\" + plurk.plurk_id);\n                if (result.success) for (var message of result.message) {\n                    // Add friends from response lists\n                    this.friends.add(message.friends);\n\n                    // Count the rest of statistics\n                    for (var response of message.responses) {\n                        // Find and count all responders\n                        await this.most.responders.count(response);\n                        this.most.interaction.count(response);\n                        this.most.mvp.count(response, \"response\");\n                        // Count all\n                        await this.most.countAll(response);\n                    }\n                } else {\n                    this.requestLogout();\n                    break;\n                }\n            }\n        }\n\n        // Display How Many Links\n        this.most.links.drawLinks();\n        // Display How Many Pictures\n        this.most.links.drawPics();\n\n        // Draw Results\n        // Display Most Responder\n        // this.most.responders.draw();\n\n        // Display Most Interaction\n        this.most.interaction.draw();\n\n        // Display Most Mentioned by me\n        // this.most.mentions.draw();\n\n        // Display How Many Words-Characters\n        this.most.types.draw();\n\n        // Display Most hashtags by me\n        this.most.hashtags.draw();\n\n        // Display Most My Emoticons\n        this.most.myemoticons.draw();\n\n        // Display MVP\n        this.statistics.replurker_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"replurk\");\n        });\n        this.statistics.favorite_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"favorite\");\n        });\n        this.most.mvp.draw();\n\n        // Replurk Badges\n        var gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Leader\";\n        if (this.me.gender == 1) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> King\";\n        if (this.me.gender == 0) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Queen\";\n\n        var tiktok = \"<img src='https://api.iconify.design/fluent-emoji:mirror-ball.svg' />\";\n        if (this.me.gender == 1) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:man-dancing-medium-dark-skin-tone.svg' />\";\n        if (this.me.gender == 0) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:woman-dancing-medium-dark-skin-tone.svg' />\";\n\n        var facebook = \"<img src='https://api.iconify.design/fluent-emoji:older-person.svg' />\";\n        if (this.me.gender == 1) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-man.svg' />\";\n        if (this.me.gender == 0) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-woman.svg' />\";\n\n        var plurker = \"<img src='https://api.iconify.design/fluent-emoji:person-bowing.svg' />\";\n        if (this.me.gender == 1) plurker = \"<img src='https://api.iconify.design/fluent-emoji:man-bowing.svg' />\";\n        if (this.me.gender == 0) plurker = \"<img src='https://api.iconify.design/fluent-emoji:woman-bowing.svg' />\";\n\n        this.statistics.title('RePlurk Badges', 'replurkbadges');\n        this.statistics.body(`\\\n            <h4>What are RePlurk Badges consist of?</h4>\\\n            <p>They are badges based on your activities in Plurk. Currently there are 16 badges in total, for activities such as:</p>\\\n            <ol>\\\n                <li>Creating lots of polls (Polling ${gender})</li>\\\n                <li>Receiving lots of coins (Plurk Coins Billionaire)</li>\\\n                <li>Writing lots of posts (Novelist and Keyboard Warrior)</li>\\\n                <li>Sharing lots of pictures and links (Meme Lord & Missing Link)</li>\\\n                <li>Sharing social medias urls (there are 7 badges)</li>\\\n                <li>Posting lots of adult posts (Adult-er)</li>\\\n                <li>Getting lots of replurks (Trendsetter)</li>\\\n                <li>and, Constantly posting in Plurk almost everyday (Active Plurker)</li>\\\n            </ol>\\\n            `, `replurkbadges description`);\n        if (this.statistics.poll_count >= 5) this.statistics.draw('spansmall spanhalf center badges pollbadges', \"<img src='https://api.iconify.design/fluent-emoji:ballot-box-with-ballot.svg' />\", \"<strong>Polling \" + gender + \"</strong>\");\n        if (this.statistics.coins_count >= 5) this.statistics.draw('spansmall spanhalf center badges coinbadges', \"<img src='https://api.iconify.design/fluent-emoji:coin.svg' />\", \"<strong>Plurk Coins Billionaire</strong>\");\n        if (this.most.types.words >= 50000) this.statistics.draw('spansmall spanhalf center badges novelistbadges', \"<img src='https://api.iconify.design/fluent-emoji:orange-book.svg' />\", \"<strong>Novelist</strong>\");\n        if (this.most.types.chars >= 1000000) this.statistics.draw('spansmall spanhalf center badges keyboardbadges', \"<img src='https://api.iconify.design/fluent-emoji:keyboard.svg' />\", \"<strong>Keyboard Warrior</strong>\");\n        if (this.most.links.pics.length >= 356) this.statistics.draw('spansmall spanhalf center badges memebadges', \"<img src='https://api.iconify.design/fluent-emoji:cat.svg' />\", \"<strong>Meme Lord</strong>\");\n        if (this.most.links.links.length >= 356 / 2) this.statistics.draw('spansmall spanhalf center badges missingbadges', \"<img src='https://api.iconify.design/fluent-emoji:orangutan.svg' />\", \"<strong>The Missing Link</strong>\");\n        if (this.statistics.instagrammer_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:camera.svg' />\", \"<strong>Instagrammer</strong>\");\n        if (this.statistics.facebooker_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', facebook, \"<strong>Facebooker</strong>\");\n        if (this.statistics.twitterer_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:hatching-chick.svg' />\", \"<strong>The Real Chief Twit</strong>\");\n        if (this.statistics.redditor_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:robot.svg' />\", \"<strong>/r</strong>\");\n        if (this.statistics.tiktoker_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', tiktok, \"<strong>Tiktoker</strong>\");\n        if (this.statistics.imgurer_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:framed-picture.svg' />\", \"<strong>Imgur-er</strong>\");\n        if (this.statistics.youtuber_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:movie-camera.svg' />\", \"<strong>Youtuber <img src='https://api.iconify.design/fluent-emoji:sleepy-face.svg' /></strong>\");\n        if (this.statistics.porn_count >= 10) this.statistics.draw('spansmall spanhalf center badges adultbadges', \"<img src='https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg' />\", \"<strong>Adult-er</strong>\");\n        if (this.statistics.replurker_count >= 50) this.statistics.draw('spansmall spanhalf center badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:trophy.svg' />\", \"<strong>Trendsetter</strong>\");\n        if (this.statistics.plurks_count >= 356 * 1.5) this.statistics.draw('spansmall spanhalf center badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:military-medal.svg' />\", \"<strong>Active Plurker \" + plurker + \"</strong>\");\n\n        this.logSessionStrorageSize();\n    }\n\n    // Display LocalStorage stats\n    logSessionStrorageSize() {\n        function getSessionStorageSize() {\n            var totalBytes = 0;\n\n            for (var key in sessionStorage) {\n                if (sessionStorage.hasOwnProperty(key)) {\n                    var itemValue = sessionStorage.getItem(key);\n                    totalBytes += itemValue.length;\n                }\n            }\n\n            // Convert bytes to Megabytes\n            var totalMegabytes = Math.round((totalBytes / 1024 / 1024) * 100) / 100;\n\n            return totalMegabytes;\n        }\n\n        // Usage\n        var sessionStorageSize = getSessionStorageSize();\n        console.info('SessionStorage Size: ' + sessionStorageSize + ' MB');\n    }\n\n    // Check login status\n    async login(clear) {\n        var next = this.next;\n\n        this.me = { id: 0 };\n        this.friends = new friends()\n        this.statistics.init(next);\n        this.most.init();\n        this.plurks = [];\n\n        scroll.destroy();\n\n        window.scrollTo(0, 0);\n        this.browserColor(\"yellow\");\n\n        // Scroll animation menu and logout\n        this.scrollAnimate.menu();\n\n        // Check is server have open session\n        var tl = gsap.timeline();\n        tl.set(next.querySelector(\"#hello .arrow-big\"), {\n            opacity: 0\n        });\n\n        var data = await api.call(\"?\");\n        var interval = null;\n        if (data.success) {\n            this.me = data.message;\n\n            // Initial Plurk statistics\n            await this.displayPlurkerData();\n\n            // Display the rest of the statistics\n            this.displayStatistics();\n\n            // Scroll top top\n            await animate.top(next);\n\n            // Hide login page\n            if (clear) next.querySelector(\"#permission\").style.display = \"none\";\n            else tl = this.hideLoginPage(tl);\n\n            // Show statistic pages\n            await this.showStatisticPages(tl);\n\n            // Add logout event\n            next.querySelector(\"#logout\").onclick = () => this.requestLogout();\n\n            // Scroll animate statistics\n            this.scrollAnimate.statistics();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar();\n\n            scroll.refresh();\n        } else {\n            // Hide statistic pages\n            if (clear) next.querySelectorAll(\".grant\").forEach(function (el) { el.style.display = \"none\"; });\n            // Show login page\n            this.showLoginPage(tl);\n            // Request token\n            this.requestToken();\n\n            // Scroll animation permission section\n            this.scrollAnimate.permisions();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar(false);\n\n            scroll.refresh();\n\n            // Automatic login\n            interval = setInterval(async () => {\n                var data = await api.call(\"?\");\n\n                if (data.success) {\n                    clearInterval(interval);\n                    this.login();\n                }\n            }, 3000);\n        }\n\n        // Snap\n        next.querySelectorAll(\"section.snap\").forEach(el => scroll.snap(el));\n        next.querySelectorAll(\"section.snap-bottom\").forEach(el => scroll.snap(el, \"bottom\"));\n    }\n\n    // Run the API call\n    run(el) {\n        return new Promise(resolve => {\n            var length = reduceMotionFilter(1);\n            this.next = el;\n            this.browserColor(\"yellow\");\n\n            // Run the login\n            gsap.fromTo(this.next.querySelectorAll('#credits'), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length,\n                ease: \"power3.in\",\n                onComplete: async () => {\n                    // Change color\n                    this.browserColor(\"yellow\", 0);\n\n                    // Display login\n                    await this.login(true);\n\n                    resolve();\n                }\n            });\n        });\n    }\n}\n\nexport default replurk;"],"names":["constructor","this","el","document","createElement","classname","setAttribute","html","innerHTML","update","text","textContent","oldcolor","randomcolors","allColorArrays","arrayIndex","Math","floor","Date","now","length","colors","getRandomColor","color","gsap","utils","shuffle","slice","pop","id","data","avatarurl","customcreate","user","user_id","value","nick_name","attached","hidden","count","position","created","counts","class","create","avatar","name","display_name","appendChild","insertTo","element","insertAdjacentElement","destroy","remove","unavailable","add","new_friends","Object","assign","find","findIndex","result","api","call","success","temp","message","user_info","push","findByUsername","index","toLowerCase","getAvatar","has_profile_image","getAvatarByUsername","user_name","next","plurks","me","friends","statistics","whispers_count","coins_count","porn_count","noresponse_count","private_count","replurker_count","replurker_list","favourite_count","favorite_list","response_count","responded_count","responded_other_count","responded_other_list","plurks_count","poll_count","poll_responder_count","poll_popular_plurk","redditor_count","tiktoker_count","instagrammer_count","imgurer_count","facebooker_count","twitterer_count","youtuber_count","parent","init","querySelector","MutationObserver","mutationsList","forEach","mutation","addedNodes","afterDraw","observe","attributes","childList","subtree","clear","listCount","list","collection","title","style","loading","insertAdjacentHTML","body","anim","set","background","to","opacity","duration","ease","screen","matchMedia","tl","fromTo","children","y","window","innerHeight","ScrollTrigger","trigger","start","end","animation","scrub","number","Number","load","progress","snap","onUpdate","toggleActions","querySelectorAll","x","height","getAttribute","capture","refresh","onclick","async","generating","imgs","cursor","img","includes","localUrl","url","_","round","canvas","html2canvas","backgroundColor","logging","link","display","download","year","href","toDataURL","click","removeChild","setTimeout","wrapper","draw","drawDiv","drawGraph","drawImage","image","badge","drawHTML","drawLink","drawPost","toString","drawUserList","users","max","friend","plurker","outerHTML","scale","stagger","amount","from","attach","charttitle","node","chart","zIndex","classList","maxTop","top","currentTop","killTweensOf","onComplete","drawAll","response_percentage","most","responses","replurk","favorite","sort","a","b","findregex","regex","replace","content","storage","match","idx","responders","mentions","dataAll","myemoticons","hashtags","links","pics","types","words","chars","countAll","content_raw","plurk_id","replurkers_count","favorite_count","response","i","undefined","loved","pic","split","drawLinks","drawPics","posts","post","owner_id","plurk_type","posted","interaction","multiplier","console","info","mvp","type","error","inactive","empty","prev_count","clean","isComplete","item","Promise","resolve","done","loop","month","fakeupdate","forcedone","width","padding","margin","overflow","scrollAnimate","credits","permisions","rotation","menu","el1","el2","direction","browserBar","login","onLeave","browserColor","onEnterBack","onEnter","startDate","endDate","days","fulldays","getSetStateColor","state","darkmode","browserColorDark","browserColorLight","setDarkMode","showLoginPage","hideLoginPage","showStatisticPages","timeline","onStart","hideStatisticPages","animate","quick","loginmessage","requestLogout","abort","requestToken","tokenlink","then","displayPlurkerData","extra","anniversary","years","avatar_big","oneday","join","join_date","getMonth","getFullYear","getDate","badges","displayStatistics","getTimeline","offset","plurk_users","concat","lastposted","largest_poll_result","plurk","responded","replurkers","favorers","anonymous","coins","porn","with_poll","poll","displayExtendedStatistics","date","gender","tiktok","facebook","logSessionStrorageSize","sessionStorageSize","totalBytes","key","sessionStorage","hasOwnProperty","getItem","getSessionStorageSize","scrollTo","interval","setInterval","clearInterval","run"],"sourceRoot":""}