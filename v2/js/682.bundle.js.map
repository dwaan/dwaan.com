{"version":3,"file":"682.bundle.js","mappings":"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","sources":["webpack://dwaan/./src/v2/js/replurk/friends.js","webpack://dwaan/./src/v2/js/replurk/loading.js","webpack://dwaan/./src/v2/js/replurk/scrolls.js","webpack://dwaan/./src/v2/js/replurk/icons.js","webpack://dwaan/./src/v2/js/replurk/span.js","webpack://dwaan/./src/v2/js/replurk/colors.js","webpack://dwaan/./src/v2/js/replurk/element.js","webpack://dwaan/./src/v2/js/replurk/most.js","webpack://dwaan/./src/v2/js/replurk/inactive.js","webpack://dwaan/./src/v2/js/replurk/statistics.js","webpack://dwaan/./src/v2/js/replurk/main.js"],"sourcesContent":["\"use strict\"\n\nimport api from \"./api.js\"\n\n/*\n\tFriends object spesification:\n\n\t1. data: contains all the friends collection data\n\t2. add(data): add friend to friends collection data\n\t3. find(user_id): return friend data based on their id\n\t4. findByUsername(nick_name): return friend data based on their nick name\n\t5. getAvatar(user_id): return avatar url based on their id for from friends collection data\n\t6. getAvatarByUsername(user_id): return avatar url based on their nick name for from friends collection data\n*/\n\nclass friends {\n\tconstructor() {\n\t\tthis.data = {}\n\t\tthis.unavailable = []\n\t}\n\n\t/**\n\t * Add JSON object as a friends data\n\t *\n\t * ```js\n\t * friends.add({});\n\t * ```\n\t *\n\t * @param {new_friends}: New friends JSON from /APP/Profile/getPublicProfile\n\t * @memberof friends\n\t * @link https://www.plurk.com/API/2/\n\t */\n\tadd(new_friends) {\n\t\tObject.assign(this.data, new_friends)\n\t}\n\n\tasync find(user_id) {\n\t\tif (this.unavailable.findIndex(el => el == user_id) >= 0) return false\n\n\t\tif (this.data && this.data[user_id]) {\n\t\t\treturn this.data[user_id]\n\t\t} else {\n\t\t\tvar result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&user_id=\" + user_id)\n\n\t\t\tif (result.success) {\n\t\t\t\tvar temp = {}\n\t\t\t\ttemp[result.message.user_info.id] = result.message.user_info\n\t\t\t\tthis.add(temp)\n\t\t\t\treturn result.message.user_info\n\t\t\t} else {\n\t\t\t\tthis.unavailable.push(user_id)\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\n\tasync findByUsername(nick_name) {\n\t\tvar user_id = false\n\n\t\tif (this.unavailable.findIndex(el => el == nick_name) >= 0) return false\n\n\t\tfor (var index in this.data) {\n\t\t\tif (this.data[index].nick_name.toLowerCase() == nick_name.toLowerCase()) {\n\t\t\t\tuser_id = index\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif (user_id) {\n\t\t\treturn this.data[user_id]\n\t\t} else {\n\t\t\tvar result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&nick_name=\" + nick_name)\n\n\t\t\tif (result.success) {\n\t\t\t\tvar temp = {}\n\t\t\t\ttemp[result.message.user_info.id] = result.message.user_info\n\t\t\t\tthis.add(temp)\n\t\t\t\treturn result.message.user_info\n\t\t\t} else {\n\t\t\t\tthis.unavailable.push(nick_name)\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\n\tgetAvatar(user_id) {\n\t\tif (user_id && this.data && this.data[user_id]) {\n\t\t\tif (this.data[user_id].has_profile_image) {\n\t\t\t\tvar avatar = \"\"\n\t\t\t\tif (this.data[user_id].avatar) avatar = this.data[user_id].avatar\n\t\t\t\treturn 'https://avatars.plurk.com/' + user_id + '-big' + avatar + '.jpg'\n\t\t\t}\n\t\t}\n\t\treturn 'https://plurk.com/static/default_big.jpg'\n\t}\n\n\tgetAvatarByUsername(user_name) {\n\t\tvar user_id = false\n\n\t\tif (user_name) {\n\t\t\tfor (var index in this.data) {\n\t\t\t\tif (this.data[index].nick_name.toLowerCase() == user_name.toLowerCase()) {\n\t\t\t\t\tuser_id = index\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.getAvatar(user_id)\n\t}\n}\n\nexport default friends","\"use strict\"\n\nimport { gsap } from 'gsap'\n\nimport scroll from \"../helpers/scroll.js\"\nimport { reduceMotionFilter } from '../helpers/helper.js'\n\nclass loading {\n\tconstructor(next) {\n\t\tthis.count = 0\n\t\tthis.prev_count = 0\n\t\tthis.counts = -1\n\t\tthis.clean = false\n\t\tthis.next = next\n\t\tthis.parent = this\n\t\tthis.isComplete = function () { return this.count == this.counts }\n\t}\n\n\tdraw(item) {\n\t\treturn new Promise(resolve => {\n\t\t\tvar length = reduceMotionFilter(1)\n\t\t\tthis.prev_count = item\n\n\t\t\tif (!this.next.querySelector(\".statistics.statistics-loading\")) {\n\t\t\t\tthis.parent.statistics.draw(\"statistics-loading\", item + \"%\", \"<i class='month'>Data from \" + this.year + \"</i>. Loading. <small>As long as you didn't close this browser tab, You can resume later by refreshing this page.</small>\")\n\t\t\t}\n\n\t\t\t// Animate loading\n\t\t\tvar load = { progress: this.prev_count }\n\t\t\tgsap.to(load, {\n\t\t\t\tprogress: Math.round(item),\n\t\t\t\tsnap: \"progress\",\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length / 4,\n\t\t\t\tonUpdate: () => {\n\t\t\t\t\tvar el = this.next.querySelector(\".statistics-loading .big\")\n\t\t\t\t\tif (el) el.innerHTML = load.progress + \"%\"\n\t\t\t\t},\n\t\t\t\tonComplete: async () => {\n\t\t\t\t\tif (this.clean) await this.done()\n\t\t\t\t\tresolve()\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\n\tasync loop(length) {\n\t\tthis.clean = true\n\t\tthis.counts = length\n\t\tawait this.draw(0)\n\t}\n\n\tasync update(month, value) {\n\t\tvar el = this.next.querySelector(\".statistics-loading .month\")\n\t\tif (month && el) el.innerHTML = month\n\n\t\tif (this.counts >= 0) {\n\t\t\tthis.count = value ? value : this.count + 1\n\t\t\tawait this.draw(Math.round(100 * (this.count / this.counts)))\n\t\t}\n\t}\n\n\tasync fakeupdate() {\n\t\tif (this.counts >= 0) {\n\t\t\tthis.count++\n\t\t\tif (this.count >= (this.counts - 10)) this.count = (this.counts - 10)\n\t\t\tawait this.draw(100 * (this.count / this.counts))\n\t\t}\n\t}\n\n\tasync forcedone() {\n\t\tthis.count = this.counts\n\t\tawait this.draw(100)\n\t}\n\n\tdone() {\n\t\treturn new Promise(resolve => {\n\t\t\tvar length = reduceMotionFilter(1)\n\n\t\t\tif (this.isComplete()) {\n\t\t\t\tvar el = this.next.querySelector(\".statistics.statistics-loading\")\n\t\t\t\tthis.clean = false\n\t\t\t\tif (el) {\n\t\t\t\t\tgsap.to(el, {\n\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\theight: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t\tduration: length / 2,\n\t\t\t\t\t\tease: \"power3.out\",\n\t\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\t\tel.remove()\n\t\t\t\t\t\t\tscroll.refresh()\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} else resolve()\n\t\t})\n\t}\n}\n\nexport default loading","\"use strict\";\n\nimport gsap from 'gsap'\nimport ScrollTrigger from 'gsap/ScrollTrigger.js'\n\nimport scroll from \"../helpers/scroll.js\"\nimport { _qAll, reduceMotionFilter } from '../helpers/helper.js'\n\nimport browser from './browser.js'\n\n// Scroll Animation\nclass scrolls {\n\tconstructor(next) {\n\t\tthis.next = next\n\t}\n\n\tcredits(tl) {\n\t\tvar length = reduceMotionFilter(1)\n\n\t\ttl.fromTo(this.next.querySelectorAll(\"#credits .like, #credits .noaffiliation, #credits .made\"), {\n\t\t\ty: window.innerHeight * 1 / 8\n\t\t}, {\n\t\t\ty: 0,\n\t\t\tease: \"linear\",\n\t\t\tduration: length * 2,\n\t\t}, 0)\n\t\ttl.fromTo(this.next.querySelectorAll(\"#credits .like, #credits .noaffiliation\"), {\n\t\t\topacity: 0\n\t\t}, {\n\t\t\topacity: 1,\n\t\t\tstagger: {\n\t\t\t\tfrom: 'end',\n\t\t\t\tamount: length / 10\n\t\t\t},\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\"\n\t\t}, 0)\n\t\ttl.fromTo(this.next.querySelectorAll(\"#credits .made\"), {\n\t\t\topacity: 0\n\t\t}, {\n\t\t\topacity: 1,\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\"\n\t\t}, length * 3 / 10)\n\n\t\treturn tl\n\t}\n\n\tstatistics() {\n\t\t// Scroll animate statistics\n\t\tscroll.push(tl => this.credits(tl), tl => ScrollTrigger.create({\n\t\t\ttrigger: this.next.querySelectorAll(\"#statistics\"),\n\t\t\tstart: \"100%-=\" + window.innerHeight + \" 0\",\n\t\t\tend: \"100% 0\",\n\t\t\tanimation: tl,\n\t\t\tscrub: .5\n\t\t}))\n\t}\n\n\tpermisions() {\n\t\t// Scroll animation permission section\n\t\tscroll.push((tl) => {\n\t\t\ttl.fromTo(this.next.querySelectorAll(\"#permission form\"), {\n\t\t\t\ty: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -3 / 4,\n\t\t\t\tease: \"linear\"\n\t\t\t}, 0)\n\n\t\t\ttl.fromTo(this.next.querySelectorAll(\"#permission .bgtext sup\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * -1 / 10,\n\t\t\t\trotation: -10,\n\t\t\t\tease: \"linear\"\n\t\t\t}, 0)\n\n\t\t\ttl.fromTo(this.next.querySelectorAll(\"#permission .bgtext sub\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * 1 / 10,\n\t\t\t\trotation: 10,\n\t\t\t\tease: \"linear\"\n\t\t\t}, 0)\n\n\t\t\treturn tl\n\t\t}, (tl) => {\n\t\t\treturn ScrollTrigger.create({\n\t\t\t\ttrigger: this.next.querySelectorAll(\"#permission\"),\n\t\t\t\tstart: \"0 0\",\n\t\t\t\tend: \"0 -100%\",\n\t\t\t\tanimation: tl,\n\t\t\t\tscrub: .5\n\t\t\t})\n\t\t})\n\n\t\tscroll.push((tl) => {\n\t\t\ttl = this.credits(tl)\n\n\t\t\treturn tl\n\t\t}, (tl) => {\n\t\t\treturn ScrollTrigger.create({\n\t\t\t\ttrigger: this.next.querySelectorAll(\"#permission\"),\n\t\t\t\tstart: \"0 0\",\n\t\t\t\tend: \"100% 0\",\n\t\t\t\tanimation: tl,\n\t\t\t\tscrub: .5\n\t\t\t})\n\t\t})\n\t}\n\n\tmenu() {\n\t\t// Scroll animation menu and logout\n\t\tscroll.push(tl => tl, tl => {\n\t\t\treturn ScrollTrigger.create({\n\t\t\t\ttrigger: 'main',\n\t\t\t\tstart: \"0 0\",\n\t\t\t\tend: \"100% 0\",\n\t\t\t\tanimation: tl,\n\t\t\t\tonUpdate: update => {\n\t\t\t\t\tvar el1 = '.logo, .size, .lamp, .switch'\n\t\t\t\t\tvar el2 = el1 + \", .footer > *\"\n\n\t\t\t\t\tif (update.direction > 0) {\n\t\t\t\t\t\tgsap.killTweensOf(_qAll(el2))\n\t\t\t\t\t\tgsap.to(_qAll(el1), { y: -100, opacity: 0 })\n\t\t\t\t\t\tgsap.to(_qAll('.footer > *'), { y: 100, opacity: 0 })\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgsap.to(_qAll(el2), { y: 0, opacity: 1 })\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\n\tbrowserBar(login = true) {\n\t\tif (login) {\n\t\t\tscroll.push((tl) => {\n\t\t\t\treturn tl\n\t\t\t}, (tl) => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: '#hello',\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: true,\n\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\tbrowser.set()\n\t\t\t\t\t},\n\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\tbrowser.set(\"green\")\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tscroll.push((tl) => {\n\t\t\t\treturn tl\n\t\t\t}, (tl) => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: '#statistics',\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: true,\n\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\tbrowser.set(\"yellow\")\n\t\t\t\t\t},\n\t\t\t\t\tonEnter: () => {\n\t\t\t\t\t\tbrowser.set()\n\t\t\t\t\t},\n\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\tbrowser.set()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\tscroll.push((tl) => {\n\t\t\t\treturn tl\n\t\t\t}, (tl) => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: '#permission',\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: true,\n\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\tbrowser.set(\"yellow\")\n\t\t\t\t\t},\n\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\tbrowser.set(\"green\")\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n}\n\nexport default scrolls","\"use strict\";\n\nvar icons = {\n\tlink: '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\"><path id=\"right\" d=\"M19.188,12.001c0,1.1-0.891,2.015-1.988,2.015l-4.195-0.015C13.543,15.089,13.968,16,15.002,16h3C19.658,16,21,13.657,21,12s-1.342-4-2.998-4h-3c-1.034,0-1.459,0.911-1.998,1.999l4.195-0.015C18.297,9.984,19.188,10.901,19.188,12.001z\"/><path id=\"center\" d=\"M8,12c0,0.535,0.42,1,0.938,1h6.109c0.518,0,0.938-0.465,0.938-1c0-0.534-0.42-1-0.938-1H8.938C8.42,11,8,11.466,8,12z\"/><path id=\"left\" d=\"M4.816,11.999c0-1.1,0.891-2.015,1.988-2.015L11,9.999C10.461,8.911,10.036,8,9.002,8h-3c-1.656,0-2.998,2.343-2.998,4s1.342,4,2.998,4h3c1.034,0,1.459-0.911,1.998-1.999l-4.195,0.015C5.707,14.016,4.816,13.099,4.816,11.999z\"/></svg>',\n\tdraw: function (title, flat = false) {\n\t\tif (flat) {\n\t\t\treturn `<img src=\"https://api.iconify.design/fluent-emoji-high-contrast/${title}.svg?color=%2388888888\" />`\n\t\t} else {\n\t\t\treturn `<img src=\"https://api.iconify.design/fluent-emoji/${title}.svg\" />`\n\t\t}\n\t}\n}\n\nexport default icons;","\"use strict\"\n\nimport { _q, _qAll, animateNumber } from '../helpers/helper.js'\n\n/*\n    Simple span element object:\n\n    1. update(text): Update the content with text value, and animate it if it's number.\n    2. html(html): Update the content with html value.\n    3. class(classname): Add class name to span.\n*/\n\nclass span {\n    constructor() {\n        this.el = document.createElement('span')\n        return this\n    }\n\n    class(...classname) {\n        this.el.classList.add(...classname)\n        return this\n    }\n\n    html(html) {\n        this.el.innerHTML = html\n        return this\n    }\n\n    update(text) {\n        animateNumber(this.el.textContent, text, (text) => {\n            this.el.textContent = text\n        })\n        return this\n    }\n}\n\nexport default span","\"use strict\";\n\nimport { gsap } from 'gsap';\n\n/*\n    Color randomizer\n\n    1. colors: array of colors value\n    2. getRandomColor(): get the randomized color from colors list\n*/\n\nclass colors {\n    constructor() {\n        this.oldcolor = \"\";\n        this.randomcolors = [];\n\n        const allColorArrays = [\n            [\n                'rgb(63,94,251)',     // Dodger Blue\n                'rgb(252,70,107)',    // Radical Red\n                'rgb(34,193,195)',    // Light Sea Green\n                'rgb(253,187,45)',    // Goldenrod\n                'rgb(195,34,190)',    // Deep Pink\n                'rgb(219,158,0)',     // Golden Yellow\n                'rgb(75,231,152)',    // Medium Spring Green\n                'rgb(195,34,103)',    // Cerise\n                'rgb(45,182,253)'     // Dodger Blue (Lighter)\n            ]\n        ];\n\n        const seconds = Math.floor(Date.now() / 1000); // Get current time in seconds\n        const arrayIndex = seconds % allColorArrays.length; // Use seconds to determine the index\n        this.colors = allColorArrays[arrayIndex];\n    }\n\n    getRandomColor() {\n        var color;\n        do {\n            this.randomcolors = gsap.utils.shuffle(this.colors).slice();\n        } while (this.oldcolor == (color = this.randomcolors.pop()));\n        this.oldcolor = color;\n        return color;\n    }\n}\n\nexport default colors;","\"use strict\"\n\nimport span from \"./span.js\"\n\n/*\n    Plurk element object spesification:\n\n    1. id: contain the id name\n    2. user: contain user object\n    3. attached: status of element is attached in DOM or not\n    4. create(): create the DOM element\n    4. destroy(): remove the DOM element\n    4. update(): update the DOM element based on it's current value\n    5. insertTo(element): insert DOM element to spesific element, also will check if it's already created or not\n*/\n\nclass element {\n    constructor(id, data, avatarurl, customcreate) {\n        this.id = id\n        this.user = data\n        this.user_id = data.id\n        this.value = data.nick_name\n        this.nick_name = data.nick_name\n        this.attached = false\n        this.hidden = true\n        this.count = 1\n        this.position = 0\n        this.customcreate = customcreate\n        this.el = document.createElement('a')\n        this.created = false\n        this.avatarurl = avatarurl\n        this.counts = new span().class(\"count\").html(this.count)\n    }\n\n    create() {\n        this.created = true\n\n        this.el.setAttribute(\"id\", this.id + this.user_id)\n        this.el.setAttribute(\"class\", 'plurkers')\n        this.el.setAttribute(\"href\", 'https://plurk.com/' + this.user.nick_name)\n        this.el.setAttribute(\"target\", '_BLANK')\n\n        if (!this.customcreate) {\n            this.avatar = new span()\n                .class(\"avatar\")\n                .html(`<img src=\"${this.avatarurl}\" />`)\n            this.name = new span()\n                .class(\"name\")\n                .html(`${this.user.display_name}`)\n            this.counts = new span()\n                .class('count')\n                .html(this.count)\n            this.el.appendChild(this.avatar.el)\n            this.el.appendChild(this.name.el)\n            this.el.appendChild(this.counts.el)\n        } else {\n            this.customcreate(this)\n        }\n    }\n\n    insertTo(element) {\n        if (!this.created) this.create()\n\n        this.attached = true\n        element.insertAdjacentElement(\"beforeend\", this.el)\n    }\n\n    destroy() {\n        this.attached = false\n\n        if (this.el) {\n            this.el.remove()\n            return true\n        } else {\n            return false\n        }\n    }\n\n    update() {\n        // Only update when it's attached\n        if (this.attached) {\n            this.counts.update(`${this.count}`)\n        }\n    }\n}\n\nexport default element","\"use strict\"\n\nimport api from \"./api.js\"\nimport { plural, datediff, pluralinwords } from '../helpers/helper.js'\n\nimport span from \"./span.js\"\nimport icons from \"./icons.js\"\nimport element from \"./element.js\"\n\nclass most {\n\tconstructor(statistics) {\n\t\tif (!statistics) return\n\n\t\tthis.me = statistics.me\n\t\tthis.friends = statistics.friends\n\t\tthis.year = statistics.year\n\t\tthis.statistics = statistics\n\n\t\tthis.responders = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: async function (response) {\n\t\t\t\tvar index = this.data.findIndex(function (el) {\n\t\t\t\t\treturn el.user_id == response.user_id\n\t\t\t\t})\n\n\t\t\t\tif (index < 0) {\n\t\t\t\t\tvar user = await this.parent.friends.find(response.user_id)\n\t\t\t\t\tthis.data.push(new element('mostresponders', user, this.parent.friends.getAvatar(user.id)))\n\t\t\t\t} else {\n\t\t\t\t\tthis.data[index].count++\n\t\t\t\t}\n\t\t\t\tthis.data.sort(this.parent.sort)\n\n\t\t\t\t// Update top 5\n\t\t\t\tvar index = 1\n\t\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\t\tthis.data[i].position = this.data.length\n\t\t\t\t\tif (this.data[i].user_id != this.parent.me.id && this.data[i].user_id != 99999) {\n\t\t\t\t\t\tthis.data[i].position = index++\n\t\t\t\t\t\tthis.parent.statistics.attach(`<i>Top ${icons.draw(\"left-speech-bubble\")} Responders</i> <strong>of My Timeline</strong>`, this.data[i], 5)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar index = 0\n\t\t\t\tif (this.data.length > 0) {\n\t\t\t\t\twhile ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++\n\t\t\t\t\tif (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatar(this.data[index].user_id), 'https://plurk.com/' + this.data[index].user.nick_name, '<i>Most Responder</i>', this.data[index].user.display_name, this.data[index].count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.mentions = {\n\t\t\tdata: [],\n\t\t\tdataAll: [],\n\t\t\tparent: this,\n\t\t\tcount: async function (content) {\n\t\t\t\tvar result = this.parent.findregex(/\\@(\\w{1,30})[\\ |\\:]/g, value => value.replace(/\\@|\\ |\\:/g, ''), content, this.data)\n\t\t\t\tvar max = 5\n\t\t\t\tvar index = 1\n\n\t\t\t\tif (result) {\n\t\t\t\t\t// Update top 5\n\t\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\t\tfor (var idx = 0; idx < this.data.length; idx++) {\n\t\t\t\t\t\tthis.data[idx].position = this.data.length\n\n\t\t\t\t\t\tif (index <= max) {\n\t\t\t\t\t\t\tvar user = await this.parent.friends.findByUsername(this.data[idx].value)\n\n\t\t\t\t\t\t\tif (this.data[idx].el == undefined) {\n\t\t\t\t\t\t\t\tthis.data[idx] = new element('mostmentionedbyme', user, \"\", plurker => {\n\t\t\t\t\t\t\t\t\tplurker.avatar = new span().class(\"avatar\").html(`<img src=\"${this.parent.friends.getAvatar(plurker.user_id)}\" />`)\n\t\t\t\t\t\t\t\t\tplurker.name = new span().class(\"name\").html(`@${plurker.nick_name}`)\n\t\t\t\t\t\t\t\t\tplurker.counts = new span().class(\"count\").html(plurker.count)\n\t\t\t\t\t\t\t\t\tplurker.el.appendChild(plurker.avatar.el)\n\t\t\t\t\t\t\t\t\tplurker.el.appendChild(plurker.name.el)\n\t\t\t\t\t\t\t\t\tplurker.el.appendChild(plurker.counts.el)\n\t\t\t\t\t\t\t\t\tplurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.nick_name)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (user.id != this.parent.me.id && user.id != 99999) {\n\t\t\t\t\t\t\t\tthis.data[idx].position = index++\n\t\t\t\t\t\t\t\tthis.parent.statistics.attach(`<i>Most ${icons.draw(\"person-raising-hand-light\")} Mentioned</i> <strong>in My Timeline</strong>`, this.data[idx], max)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.data[idx].el) this.parent.statistics.attach(`<i>Most ${icons.draw(\"person-raising-hand-light\")} Mentioned</i> <strong>in My Timeline</strong>`, this.data[idx], max)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar index = 0\n\t\t\t\tif (this.data.length > 0) {\n\t\t\t\t\twhile ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++\n\t\t\t\t\tif (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatarByUsername(this.data[index].value), 'https://plurk.com/' + this.data[index].value, '<i>Most Mentioned</i> by me', \"@\" + this.data[index].value, this.data[index].count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.myemoticons = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (content) {\n\t\t\t\tthis.parent.findregex(/emoticon_my\\\" src=\\\"(.*?)\\\"/g, function (value) {\n\t\t\t\t\treturn value.replace(/emoticon_my\\\" src=\\\"|\\\"/gi, '')\n\t\t\t\t}, content, this.data)\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar html = \"\"\n\t\t\t\tvar max = 9\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\tfor (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n\t\t\t\t\tif (this.data[i].count > 1) html += '<div><img src=\"' + this.data[i].value + '\" /> <span class=\"count\">' + this.data[i].count + '</span></div>'\n\t\t\t\tif (html != \"\") this.parent.statistics.drawHTML(\"grid emoticons\", `Most Used <i>${icons.draw(\"beaming-face-with-smiling-eyes\")} My Emoticons</i>`, html)\n\t\t\t}\n\t\t}\n\n\t\tthis.hashtags = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (content) {\n\t\t\t\tthis.parent.findregex(/hashtag\\\"\\>(.*?)\\</g, function (value) {\n\t\t\t\t\treturn value.replace(/hashtag\\\"\\>\\#|\\.\\<|\\</g, '')\n\t\t\t\t}, content, this.data)\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar html = \"\"\n\t\t\t\tvar max = 5\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\tfor (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n\t\t\t\t\tif (this.data[i].count > 1) html += '<div><a href=\"https://plurk.com/search?q=' + this.data[i].value + '\" target=\"_BLANK\" /><span class=\"count\">' + this.data[i].count + '</span> #' + this.data[i].value + '</a></div>'\n\t\t\t\tif (html != \"\") {\n\t\t\t\t\thtml = \"<strong>#</strong>\" + html\n\t\t\t\t\tthis.parent.statistics.drawHTML(\"hashtags\", `Most Used <i>${icons.draw(\"keycap-hashtag\")} Hashtags</i>`, html)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.links = {\n\t\t\tdata: [],\n\t\t\tlinks: [],\n\t\t\tpics: [],\n\t\t\tparent: this,\n\t\t\tcount: function (content, id, response, replurk, loved) {\n\t\t\t\tvar result = content.match(/href\\=\\\"(.*?)\\\"\\ class=\\\"(.*?)\\\"\\ rel/g)\n\t\t\t\tvar count = 0\n\t\t\t\tvar pics = []\n\t\t\t\tvar links = []\n\n\t\t\t\tif (result) for (var data of result) {\n\t\t\t\t\tif (!this.data[id]) {\n\t\t\t\t\t\tcount = response + (replurk * 250) + (loved * 50)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.includes(\"pictureservices\")) {\n\t\t\t\t\t\tthis.pics.push(data)\n\t\t\t\t\t\tif (count > 0) {\n\t\t\t\t\t\t\tvar pic = data.split('\\\"')\n\t\t\t\t\t\t\tpics.push({\n\t\t\t\t\t\t\t\turl: pic[1],\n\t\t\t\t\t\t\t\tresponse: response,\n\t\t\t\t\t\t\t\treplurk: replurk,\n\t\t\t\t\t\t\t\tloved: loved\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.links.push(data)\n\t\t\t\t\t\tif (count > 0) {\n\t\t\t\t\t\t\tvar link = data.split('\\\"')\n\t\t\t\t\t\t\tlinks.push({\n\t\t\t\t\t\t\t\turl: link[1],\n\t\t\t\t\t\t\t\tresponse: response,\n\t\t\t\t\t\t\t\treplurk: replurk,\n\t\t\t\t\t\t\t\tloved: loved\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (count) this.data.push({\n\t\t\t\t\tid: id,\n\t\t\t\t\tpics: pics,\n\t\t\t\t\tlinks: links,\n\t\t\t\t\tcount: count,\n\t\t\t\t\tcontent: content\n\t\t\t\t})\n\t\t\t},\n\t\t\tdrawMeta: function (link, id) {\n\t\t\t\treturn `<div class=\"meta\">\\\n\t\t\t\t\t<span class=\"response\">${icons.draw(\"left-speech-bubble\")} ${link.response}</span>\\\n\t\t\t\t\t<span class=\"replurk\">${icons.draw(\"megaphone\")} ${link.replurk}</span>\\\n\t\t\t\t\t<span class=\"loved\">${icons.draw(\"red-heart\")} ${link.loved}</span>\\\n\t\t\t\t\t<a href=\"https://plurk.com/p/${id.toString(36)}\" class=\"link\" target=\"_BLANK\">${icons.link}</a>\\\n\t\t\t\t</div>`\n\t\t\t},\n\t\t\tdrawLinks: function () {\n\t\t\t\tvar max = 1\n\t\t\t\tvar index = 0\n\t\t\t\tvar result = \"\"\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\twhile (index < this.data.length && max > 0) {\n\t\t\t\t\tif (this.data[index].links.length > 0) {\n\t\t\t\t\t\tvar link = this.data[index].links[0]\n\t\t\t\t\t\tresult += `<div class=\"post\">\\\n\t\t\t\t\t\t\t<div class=\"info\">${this.data[index].content}</div>\n\t\t\t\t\t\t\t${this.drawMeta(link, this.data[index].id)}\n\t\t\t\t\t\t</div>`\n\t\t\t\t\t\tmax--\n\t\t\t\t\t}\n\t\t\t\t\tindex++\n\t\t\t\t}\n\t\t\t\tif (this.links.length > 0) this.parent.statistics.drawDiv('sharedlinks', \"<div class='title'>I shared <i>🔗 \" + plural(this.links.length, 'link') + '</i> and this is the most popular one</div>' + result)\n\t\t\t},\n\t\t\tdrawPics: function () {\n\t\t\t\tvar max = 1\n\t\t\t\tvar index = 0\n\t\t\t\tvar result = \"\"\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\twhile (index < this.data.length && max > 0) {\n\t\t\t\t\tif (this.data[index].pics.length > 0) {\n\t\t\t\t\t\tvar pics = this.data[index].pics[0]\n\t\t\t\t\t\tresult += `<div class=\"box\">\\\n\t\t\t\t\t\t\t<div class=\"image\" style=\"background-image: url(${api.url}?img=${pics.url})\"></div>\\\n\t\t\t\t\t\t\t<div class=\"post\">\\\n\t\t\t\t\t\t\t\t<div class=\"text\">${this.data[index].content}</div>\\\n\t\t\t\t\t\t\t\t${this.drawMeta(pics, this.data[index].id)}\n\t\t\t\t\t\t\t</div>\\\n\t\t\t\t\t\t</div>`\n\t\t\t\t\t\tmax--\n\t\t\t\t\t}\n\t\t\t\t\tindex++\n\t\t\t\t}\n\n\t\t\t\tif (this.pics.length > 0) this.parent.statistics.draw('sharedpictures', this.pics.length, `I shared <i>${icons.draw(\"framed-picture\")} ${plural(this.pics.length, 'image')}</i>`)\n\t\t\t\tif (result != \"\") this.parent.statistics.drawHTML('span2 previewpics', `<i>${icons.draw(\"framed-picture\")} Most Popular Image</i>`, result)\n\t\t\t}\n\t\t}\n\n\t\tthis.types = {\n\t\t\twords: 0,\n\t\t\tchars: 0,\n\t\t\tparent: this,\n\t\t\tcount: function (content) {\n\t\t\t\tvar words = content.split(\" \")\n\n\t\t\t\tthis.chars += content.length\n\t\t\t\tthis.words += words.length\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tif (this.chars > 0) this.parent.statistics.draw('span2 typed mediumnumber', this.chars, 'I typed more than  <i>' + pluralinwords(this.chars, 'character') + '</i>, around <i>' + pluralinwords(this.words, 'word') + '</i> this year')\n\t\t\t}\n\t\t}\n\n\t\tthis.responses = {\n\t\t\tparent: this,\n\t\t\tsort: (a, b) => b.response_count - a.response_count,\n\t\t\tdraw: function (posts) {\n\t\t\t\tvar post\n\t\t\t\tposts.sort(this.sort)\n\t\t\t\tif (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.response_count > 0) {\n\t\t\t\t\tthis.parent.statistics.drawPost('postcontent span2 mostresponded', post.plurk_id, `<i>${icons.draw(\"left-speech-bubble\")} Most Responded</i> ${datediff(post.posted)}`, post.content, post.response_count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.replurk = {\n\t\t\tparent: this,\n\t\t\tsort: (a, b) => b.replurkers_count - a.replurkers_count,\n\t\t\tdraw: function (posts) {\n\t\t\t\tvar post\n\t\t\t\tposts.sort(this.sort)\n\t\t\t\tif (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.replurkers_count > 0) {\n\t\t\t\t\tthis.parent.statistics.drawPost('postcontent span2 mostreplurked', post.plurk_id, `<i>${icons.draw(\"megaphone\")} Most Replurked</i> ${datediff(post.posted)}`, post.content, post.replurkers_count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.favorite = {\n\t\t\tparent: this,\n\t\t\tsort: (a, b) => b.favorite_count - a.favorite_count,\n\t\t\tdraw: function (posts) {\n\t\t\t\tvar post\n\t\t\t\tposts.sort(this.sort)\n\t\t\t\tif (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.favorite_count > 0) {\n\t\t\t\t\tthis.parent.statistics.drawPost('postcontent span2 mostfavorited', post.plurk_id, `<i>${icons.draw(\"red-heart\")} Most Loved</i> ${datediff(post.posted)}`, post.content, post.favorite_count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.interaction = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (response) {\n\t\t\t\tvar index = this.data.findIndex(function (el) {\n\t\t\t\t\treturn el.id == response.user_id\n\t\t\t\t})\n\n\t\t\t\tif (index < 0) {\n\t\t\t\t\tthis.data.push({\n\t\t\t\t\t\tid: response.user_id,\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tmultiplier: 1,\n\t\t\t\t\t\tplurk_id: response.plurk_id\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tif (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier++\n\t\t\t\t\telse this.data[index].multiplier = 1\n\t\t\t\t\tthis.data[index].count += (this.data[index].multiplier * response.content_raw.length)\n\t\t\t\t}\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar result = []\n\t\t\t\tvar length = 0\n\t\t\t\tvar index = 0\n\t\t\t\twhile (this.data[index] && length <= 5) {\n\t\t\t\t\tif (this.data[index].id != this.parent.me.id) {\n\t\t\t\t\t\tresult.push(this.data[index])\n\t\t\t\t\t\tlength++\n\t\t\t\t\t}\n\t\t\t\t\tindex++\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tif (result.length > 0) this.parent.statistics.drawUserList(\"bubble span2\", \"mostinteraction\", `Plurkers who really like to <i>${icons.draw(\"handshake\")} interact</i> with me`, result)\n\t\t\t\t} catch {\n\t\t\t\t\tconsole.info(\"Error while counting most interacted plurker\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.mvp = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (response, type) {\n\t\t\t\tvar index = this.data.findIndex(function (el) {\n\t\t\t\t\treturn el.id == response.user_id\n\t\t\t\t})\n\n\t\t\t\tif (index < 0) {\n\t\t\t\t\tthis.data.push({\n\t\t\t\t\t\tid: response.user_id,\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tmultiplier: 1,\n\t\t\t\t\t\tplurk_id: response.plurk_id\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tif (type == \"replurk\") {\n\t\t\t\t\t\tthis.data[index].count += (response.count * 250)\n\t\t\t\t\t} else if (type == \"favorite\") {\n\t\t\t\t\t\tthis.data[index].count += (response.count * 50)\n\t\t\t\t\t} else if (response.content_raw.length > 16) {\n\t\t\t\t\t\tif (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier += .5\n\t\t\t\t\t\telse this.data[index].multiplier = .5\n\t\t\t\t\t\tthis.data[index].count += (this.data[index].multiplier * response.content_raw.length)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar result = []\n\t\t\t\tvar length = 0\n\t\t\t\tvar index = 0\n\t\t\t\twhile (this.data[index] && length <= 5) {\n\t\t\t\t\tif (this.data[index].id != this.parent.me.id) {\n\t\t\t\t\t\tresult.push(this.data[index])\n\t\t\t\t\t\tlength++\n\t\t\t\t\t}\n\t\t\t\t\tindex++\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tif (result.length > 0) this.parent.statistics.drawUserList(\"bubble span3\", \"mvp\", `My ${this.parent.year} <i>${icons.draw(\"biting-lip\")} MVP</i>, Most Valuable Plurker!`, result, true)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.info(\"Error while counting my mvp\", error)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tsort(a, b) {\n\t\treturn b.count - a.count\n\t}\n\n\t// Find and count all based on regex\n\tfindregex(regex, replace, content, storage) {\n\t\tvar result = content.match(regex)\n\n\t\tfor (var index in result) {\n\t\t\tvar value = replace(result[index])\n\t\t\tvar idx = storage.findIndex(el => el.value == value)\n\n\t\t\tif (idx < 0) {\n\t\t\t\tstorage.push({\n\t\t\t\t\tid: value,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tcount: 1\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tstorage[idx].count++\n\t\t\t}\n\t\t}\n\n\t\treturn result\n\t}\n\n\tasync countAll(data) {\n\t\t// Find and count all my emoticons from my post\n\t\tif (data.user_id == this.me.id) this.myemoticons.count(data.content)\n\t\t// Find and count all mentions from my post\n\t\tawait this.mentions.count(data.content_raw)\n\t\t// Find and count all hashtags from my post\n\t\tif (data.user_id == this.me.id) this.hashtags.count(data.content)\n\t\t// Find and count all links and pictures post from my post\n\t\tif (data.user_id == this.me.id) this.links.count(data.content, data.plurk_id, data.response_count, data.replurkers_count, data.favorite_count)\n\t\t// Find and count characther and words from my post\n\t\tif (data.user_id == this.me.id) this.types.count(data.content_raw)\n\t}\n}\n\nexport default most","// Inactive plurker object\nclass inactive {\n\tconstructor(statistics) {\n\t\tthis.statistics = statistics\n\t\tthis.year = statistics.year\n\t}\n\n\tdraw(data) {\n\t\tthis.statistics.draw('inactive', this.year + \" &#8617;\", 'I\\'ve been inactive since ' + year + ' <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n\t\tthis.statistics.drawPost('postcontent span2 inactivemore', data.plurk_id, '<i>My last Plurk</i> ' + datediff(data.posted), data.content, data.response_count);\n\t}\n\n\tempty() {\n\t\tthis.statistics.draw('inactive', '-', 'I didn\\'t post anything at this year <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n\t}\n}\n\nexport default inactive","\"use strict\"\n\nimport { gsap } from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js'\nimport html2canvas from \"html2canvas\"\n\nimport api from \"./api.js\"\nimport scroll from \"../helpers/scroll.js\"\nimport { addClass, hasClass, plural, reduceMotionFilter, removeClass, waitForImg } from '../helpers/helper.js'\n\nimport span from \"./span.js\"\nimport colors from \"./colors.js\"\nimport icons from \"./icons.js\"\nimport element from \"./element.js\"\nimport most from \"./most.js\"\nimport inactive from \"./inactive.js\"\n\nclass statistics {\n\tconstructor(next, me, friends, year) {\n\t\tif (!next || !me || !friends || !year) return\n\n\t\tthis.whispers_count = 0\n\t\tthis.poll_count = 0\n\t\tthis.poll_responder_count = 0\n\t\tthis.coins_count = 0\n\t\tthis.porn_count = 0\n\t\tthis.noresponse_count = 0\n\t\tthis.private_count = 0\n\t\tthis.replurker_count = 0\n\t\tthis.replurker_list = []\n\t\tthis.favourite_count = 0\n\t\tthis.favorite_list = []\n\t\tthis.response_count = 0\n\t\tthis.responded_count = 0\n\t\tthis.responded_other_count = 0\n\t\tthis.responded_other_list = []\n\t\tthis.plurks_count = 0\n\t\tthis.id = 0\n\t\tthis.randomcolors = []\n\n\t\tthis.next = next\n\t\tthis.me = me\n\t\tthis.friends = friends\n\t\tthis.year = year\n\n\t\t// Most statistics object renderer\n\t\tthis.most = new most(this)\n\n\t\t// Inactive timeline\n\t\tthis.inactive = new inactive(this)\n\n\t\tthis.el = this.next.querySelector(\"#statistics\")\n\n\t\t// Obverse when element is added to DOM\n\t\tvar observer = new MutationObserver((mutationsList) => {\n\t\t\tmutationsList.forEach(mutation => {\n\t\t\t\tmutation.addedNodes.forEach(el => {\n\t\t\t\t\tif (hasClass(el, \"statistics\")) this.afterDraw(el)\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t\tobserver.observe(this.el, {\n\t\t\tattributes: true,\n\t\t\tchildList: true,\n\t\t\tsubtree: false\n\t\t})\n\t}\n\n\tclear() {\n\t\tthis.el.innerHTML = \"\"\n\t}\n\n\tlistCount(list, collection) {\n\t\tif (collection.length > 0) {\n\t\t\tcollection.forEach(value => {\n\t\t\t\tvar index = list.findIndex(el => el.id == value)\n\n\t\t\t\tif (index < 0) list.push({ id: value, count: 1 })\n\t\t\t\telse list[index].count++\n\t\t\t})\n\t\t}\n\n\t\treturn list\n\t}\n\n\ttitle(text, style = \"\", loading = false) {\n\t\tlet span = loading ? `<span class=\"loading\"><i/>` : `<span class=\"line\"><i></i></span>`\n\t\tthis.el.insertAdjacentHTML('beforeend', `\\\n\t\t\t<div class=\"statistics statistics-title ${style}\">\\\n\t\t\t\t<h3><span>${text}</span>${span}</h3>\\\n\t\t\t</div>`)\n\t}\n\n\tbody(text, style = \"\") {\n\t\tthis.el.insertAdjacentHTML('beforeend', `\\\n\t\t\t<div class=\"statistics statistics-title ${style}\">\\\n\t\t\t\t<div class=\"body\">${text}</div>\\\n\t\t\t</div>`)\n\t}\n\n\twrapper(style, text, background) {\n\t\treturn `<div class=\"statistics statistics-wrap ${style}\">\\\n\t\t\t<div class=\"content\" ${background ? `style=\"background-images:url(${background})\"` : ``}>${text}</div>\\\n\t\t</div>`\n\t}\n\n\t// Drawing functions\n\n\tdraw(style, number, text, background) {\n\t\tif (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n\t\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style, `\\\n\t\t\t\t<p>\\\n\t\t\t\t\t<span class=\"big\">${number}</span>\\\n\t\t\t\t\t<span class=\"text\">${text}</span>\\\n\t\t\t\t</p>\\\n\t\t\t`), background)\n\t\t}\n\t}\n\n\tdrawBadge(condition, style, icon, text, textempty) {\n\t\tstyle = `span1 badges badgesmall ${style}`\n\n\t\tif (condition) {\n\t\t\tthis.draw(style, icons.draw(icon, false), text)\n\t\t\treturn 1\n\t\t} else {\n\t\t\tthis.draw(`${style} nobackground`, icons.draw(icon, true), textempty ? textempty : \"\")\n\t\t\treturn 0\n\t\t}\n\t}\n\n\tdrawDiv(style, text) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style, '<div class=\"box\">' + text + '</div>'))\n\t}\n\n\tdrawGraph(style, number, text) {\n\t\tif (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n\t\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawgraph\", '\\\n\t\t\t\t<p>\\\n\t\t\t\t\t<span class=\"graph\"><i data-number=\"' + number + '\"></i></span>\\\n\t\t\t\t\t<span class=\"info\">' + text + '</span>\\\n\t\t\t\t</p>\\\n\t\t\t'))\n\t\t}\n\t}\n\n\tdrawImage(style, image, link, title, text, badge) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawimage\", '\\\n\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t<span class=\"avatar\"><img src=\"' + image + '\" /></span>\\\n\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t</a>\\\n\t\t'))\n\t}\n\n\tdrawHTML(style, title, html) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawhtml\", '\\\n\t\t\t<div>\\\n\t\t\t\t<div class=\"html\">' + html + '</div>\\\n\t\t\t\t<div class=\"title\">' + title + '</div>\\\n\t\t\t</div>\\\n\t\t'))\n\t}\n\n\tdrawLink(style, link, title, text, badge) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawlink\", '\\\n\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t<span>' + text + '</span>\\\n\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t</a>\\\n\t\t'))\n\t}\n\n\tdrawPost(style, id, title, text, badge) {\n\t\tvar url = \"\"\n\t\tif (id) url = 'https://plurk.com/p/' + id.toString(36)\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawpost\", `\\\n\t\t\t<div>\\\n\t\t\t\t<a href=\"${url}\" class=\"link\" target=\"_BLANK\">${icons.link}</a>\\\n\t\t\t\t<span class=\"big\">${badge}</span>\\\n\t\t\t\t<p class=\"post\">${text}</p>\\\n\t\t\t\t<span class=\"title\">${title}</span>\\\n\t\t\t</div>\\\n\t\t`))\n\t}\n\n\tasync drawUserList(style, id, title, users, number = false) {\n\t\tvar html = \"\"\n\t\tvar max = users.length >= 5 ? 5 : users.length\n\t\tvar length = reduceMotionFilter(1)\n\n\t\tthis.drawHTML(`${style} userlist ${id}`, title, \"<span class='info'>Downloading user data</span>\")\n\t\tfor (var index = 0; index < max; index++) {\n\t\t\tlet user = users[index]\n\t\t\tlet friend = await this.friends.find(user.id)\n\t\t\tif (friend) {\n\t\t\t\tvar plurker = new element(user.id, friend, \"\", plurker => {\n\t\t\t\t\tplurker.avatar = new span()\n\t\t\t\t\t\t.class(\"avatar\")\n\t\t\t\t\t\t.html(`<img src=\"${this.friends.getAvatar(plurker.user.id)}\" />`)\n\t\t\t\t\tif (number) {\n\t\t\t\t\t\tvar medal = `sports-medal`\n\t\t\t\t\t\tif (index == 0) medal = `1st-place-medal`\n\t\t\t\t\t\telse if (index == 1) medal = `2nd-place-medal`\n\t\t\t\t\t\telse if (index == 2) medal = `3rd-place-medal`\n\n\t\t\t\t\t\tplurker.badge = new span()\n\t\t\t\t\t\t\t.class(\"medal\")\n\t\t\t\t\t\t\t.html(icons.draw(medal))\n\t\t\t\t\t\tplurker.avatar.el.appendChild(plurker.badge.el)\n\t\t\t\t\t}\n\t\t\t\t\tplurker.name = new span()\n\t\t\t\t\t\t.class(\"name\")\n\t\t\t\t\t\t.html(`${plurker.user.display_name}`)\n\t\t\t\t\tplurker.counts = new span()\n\t\t\t\t\t\t.class(\"count\")\n\t\t\t\t\t\t.html(`${user.count}`)\n\n\t\t\t\t\tplurker.el.appendChild(plurker.avatar.el)\n\t\t\t\t\tplurker.el.appendChild(plurker.name.el)\n\t\t\t\t\tplurker.el.appendChild(plurker.counts.el)\n\t\t\t\t\tplurker.el.setAttribute(\"href\", `https://plurk.com/${plurker.user.nick_name}`)\n\t\t\t\t})\n\t\t\t\tplurker.create()\n\t\t\t\thtml += plurker.el.outerHTML\n\t\t\t} else {\n\t\t\t\tmax++\n\t\t\t}\n\t\t}\n\t\tthis.el.querySelector(`.${id} .html`).innerHTML = html\n\n\t\t// Stagger animation\n\t\tif (id == 'mostinteraction' || id == 'mvp') {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n\t\t\t\t\tscale: .3,\n\t\t\t\t\topacity: 0\n\t\t\t\t}, {\n\t\t\t\t\tscale: 1,\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tduration: length,\n\t\t\t\t\tease: \"elastic(1.2, 0.5)\",\n\t\t\t\t\tstagger: {\n\t\t\t\t\t\tamount: length / 3,\n\t\t\t\t\t\tfrom: \"end\"\n\t\t\t\t\t}\n\t\t\t\t}, 0)\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: this.el.querySelector(\".\" + id),\n\t\t\t\t\tstart: \"0% 75%\",\n\t\t\t\t\tend: \"100% 75%\",\n\t\t\t\t\tscrub: 2,\n\t\t\t\t\tanimation: tl\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n\t\t\t\t\ty: 50,\n\t\t\t\t\topacity: 0\n\t\t\t\t}, {\n\t\t\t\t\ty: 0,\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tduration: length,\n\t\t\t\t\tstagger: length / 3\n\t\t\t\t}, 0)\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: this.el.querySelector(\".\" + id),\n\t\t\t\t\tstart: \"0% 100%\",\n\t\t\t\t\tend: \"100% 100%\",\n\t\t\t\t\tscrub: 1,\n\t\t\t\t\tanimation: tl\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tasync drawAll(plurks) {\n\t\tvar response_percentage = Math.round((this.plurks_count - this.noresponse_count) / this.plurks_count * 100)\n\n\t\tthis.most.responses.draw(plurks)\n\t\tthis.drawGraph('center graph percentage', response_percentage, `Around <i>${response_percentage}%</i> of my plurks got ${icons.draw(\"left-speech-bubble\")} responses ${(response_percentage <= 50) ? `${icons.draw(\"crying-face\")}` : `${icons.draw(\"star-struck\")}`}`)\n\n\t\tthis.draw('recievereplurk', this.replurker_count, `I received <i>${icons.draw(\"megaphone\")} ${plural(this.replurker_count, 'replurk')}</i>`)\n\t\tthis.most.replurk.draw(plurks)\n\n\t\tthis.most.favorite.draw(plurks)\n\t\tthis.draw('recievelove', this.favourite_count, `I recieved <i>${icons.draw(\"red-heart\")} ${plural(this.favourite_count, 'love')}</i>`)\n\n\t\tthis.draw('privateplurk', this.private_count, `I posted <i>${icons.draw(\"lip\")} ${plural(this.private_count, 'private plurk')}</i>`)\n\t\tthis.draw('whisper', this.whispers_count, `I posted <i>${icons.draw(\"face-in-clouds\")} ${plural(this.whispers_count, 'whisper')}</i>`)\n\t\tthis.draw('porn', this.porn_count, `I posted <i>${icons.draw(\"face-with-peeking-eye\")} ${plural(this.porn_count, 'adult plurk')}</i>`)\n\n\t\tthis.draw('span2 responsecount', `${this.plurks_count} &rarr; ${this.response_count}`, `I received <i>${icons.draw(\"left-speech-bubble\")} ${plural(this.response_count, 'response')}</i> from <i>${plural(this.plurks_count, 'plurk')}</i>`)\n\t\tthis.draw('center coins', this.coins_count, `I recieved <i>${icons.draw(\"coin\")} ${plural(this.coins_count, 'coin')}</i>`)\n\n\t\tif (this.favorite_list.length > 0) this.drawUserList(\"users\", \"loved\", `These Plurkers <i>${icons.draw(\"red-heart\")} Loved</i> My Posts`, this.favorite_list.sort(this.most.sort))\n\t\tif (this.replurker_list.length > 0) this.drawUserList(\"users\", \"replurked\", `These Plurkers likes to <i>${icons.draw(\"megaphone\")} Replurked</i> My Posts`, this.replurker_list.sort(this.most.sort))\n\t}\n\n\t// For animating user chart\n\n\tattach(charttitle, node, max) {\n\t\tvar id = node.id\n\t\tvar chart\n\t\tvar title\n\t\tvar text\n\t\tvar content\n\t\tvar wrapper\n\t\tvar opacity = 0\n\t\tvar position = max\n\t\tvar zIndex = 0\n\t\tvar hidden = true\n\n\t\tif (node.position <= max) {\n\t\t\thidden = false\n\t\t\tzIndex = position = (node.position - 1)\n\t\t\topacity = 1\n\t\t}\n\n\t\t// Create the box\n\t\tif (!this.next.querySelector(`.${id}`)) {\n\t\t\tchart = document.createElement('div')\n\t\t\tchart.setAttribute('class', 'chart')\n\n\t\t\ttitle = document.createElement('div')\n\t\t\ttitle.classList.add('title')\n\t\t\ttitle.innerHTML = charttitle\n\n\t\t\ttext = document.createElement('div')\n\t\t\ttext.classList.add('text')\n\t\t\ttext.appendChild(chart)\n\t\t\ttext.appendChild(title)\n\n\t\t\tcontent = document.createElement('div')\n\t\t\tcontent.classList.add('content')\n\t\t\tcontent.appendChild(text)\n\n\t\t\twrapper = document.createElement('div')\n\t\t\twrapper.classList.add(\"statistics\", \"statistics-wrap\", \"attach\", id)\n\t\t\twrapper.appendChild(content)\n\n\t\t\tthis.el.insertAdjacentElement(\"beforeend\", wrapper)\n\t\t}\n\n\t\t// Add  element\n\t\tif (!hidden && !node.attached) {\n\t\t\tvar maxTop = max / (max - 1) * 100\n\n\t\t\tnode.insertTo(this.el.querySelector(`.${id} .chart`))\n\n\t\t\tgsap.set(node.el, {\n\t\t\t\ttop: maxTop + \"%\",\n\t\t\t\topacity: 0,\n\t\t\t\tzIndex: 0,\n\t\t\t})\n\t\t}\n\n\t\t// Update position\n\t\tif (!hidden || !node.hidden) {\n\t\t\tvar currentTop = position / (max - 1) * 100\n\t\t\tvar length = reduceMotionFilter(1)\n\n\t\t\tgsap.killTweensOf(node.el)\n\t\t\tgsap.to(node.el, {\n\t\t\t\ttop: currentTop + \"%\",\n\t\t\t\topacity: opacity,\n\t\t\t\tzIndex: zIndex,\n\t\t\t\tduration: length / 2,\n\t\t\t\tease: \"power3.out\",\n\t\t\t\tonComplete: function () {\n\t\t\t\t\tif (hidden) {\n\t\t\t\t\t\tnode.destroy()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tnode.hidden = hidden\n\t\t}\n\n\t\tnode.update()\n\t}\n\n\t// Events after html is attach to DOM\n\n\tafterDraw(el) {\n\t\tvar length = reduceMotionFilter(1)\n\n\t\tif (hasClass(el, 'statistics-wrap')) {\n\t\t\t// Content\n\t\t\tvar color = new colors()\n\t\t\tvar randomcolors = [color.getRandomColor(), color.getRandomColor()]\n\t\t\tvar content = el.querySelector(\".content\")\n\n\t\t\t// Make colorful background\n\t\t\tgsap.set(content, {\n\t\t\t\tbackground: `radial-gradient(at 10% 10%, ${randomcolors[0]} 0%, ${randomcolors[1]} 100%)`,\n\t\t\t\tboxShadow: `0 4px 20px $${this.me.name_color}`\n\t\t\t})\n\n\t\t\t// Make element appears\n\t\t\tgsap.to(content, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length / 2,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, 0)\n\n\t\t\t// Animate number\n\t\t\tscroll.push(function (tl) {\n\t\t\t\tif (el.querySelector(\".big\")) {\n\t\t\t\t\tvar number = Number(el.querySelector(\".big\").textContent)\n\t\t\t\t\tif (number > 0) {\n\t\t\t\t\t\tvar load = { progress: 0 }\n\t\t\t\t\t\tvar duration = 1\n\t\t\t\t\t\tif (number >= 500 && number < 1000) duration = 2\n\t\t\t\t\t\telse if (number >= 1000 && number < 99999) duration = 3\n\t\t\t\t\t\telse if (number >= 99999) duration = 4\n\t\t\t\t\t\ttl.to(load, {\n\t\t\t\t\t\t\tprogress: number,\n\t\t\t\t\t\t\tsnap: \"progress\",\n\t\t\t\t\t\t\tease: \"power3.out\",\n\t\t\t\t\t\t\tduration: duration,\n\t\t\t\t\t\t\tonUpdate: () => {\n\t\t\t\t\t\t\t\tel.querySelector(\".big\").textContent = plural(load.progress)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"0 100%-=100px\",\n\t\t\t\t\tend: \"100px 100%-=100px\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\ttoggleActions: \"play none none none\"\n\t\t\t\t})\n\t\t\t})\n\n\t\t\t// Graph animation\n\t\t\tif (hasClass(el, 'drawgraph')) {\n\t\t\t\tscroll.push(tl => {\n\t\t\t\t\ttl.fromTo(el.querySelector(\".graph\"), {\n\t\t\t\t\t\ty: 100\n\t\t\t\t\t}, {\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t}, 0)\n\n\t\t\t\t\ttl.fromTo(el.querySelector(\".graph i\"), {\n\t\t\t\t\t\theight: \"0%\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\theight: el.querySelector(\".graph i\").getAttribute(\"data-number\") + \"%\"\n\t\t\t\t\t}, 0)\n\n\t\t\t\t\treturn tl\n\t\t\t\t}, tl => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: el,\n\t\t\t\t\t\tstart: \"50% 100%\",\n\t\t\t\t\t\tend: \"100% 100%\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: 1\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t// Coin animation\n\t\t\tif (hasClass(el, 'coins')) {\n\t\t\t\tscroll.push(tl => {\n\t\t\t\t\ttl.fromTo(el.querySelector(\".big\"), {\n\t\t\t\t\t\ty: \"50%\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\tease: \"power3.out\"\n\t\t\t\t\t}, 0)\n\t\t\t\t\treturn tl\n\t\t\t\t}, tl => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: el,\n\t\t\t\t\t\tstart: \"50% 100%\",\n\t\t\t\t\t\tend: \"100% 100%\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: 2\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t// Capture function\n\t\t\tthis.capture(el)\n\t\t} else {\n\t\t\t// Scroll animation header line section\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(el.querySelectorAll(\"i\"), {\n\t\t\t\t\tx: \"-100%\"\n\t\t\t\t}, {\n\t\t\t\t\tx: \"0%\",\n\t\t\t\t\tease: \"ease.out\"\n\t\t\t\t}, 0)\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"100% 100%\",\n\t\t\t\t\tend: \"100% 0\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: 1\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\t// Refresh scroll\n\t\tscroll.refresh()\n\t}\n\n\tcapture(el) {\n\t\tvar capture = el.querySelector(\".content\")\n\t\tif (!capture) return\n\n\t\tcapture.onclick = async () => {\n\t\t\tif (capture.generating) return\n\n\t\t\t// Informing user the process is starting\n\t\t\tcapture.generating = true\n\t\t\taddClass(capture, \"wait\")\n\t\t\tdocument.body.style.cursor = \"wait\"\n\n\t\t\tcapture.querySelectorAll(\"img\").forEach(img => {\n\t\t\t\tif (!img.src.includes(\"plurk-api\")) {\n\t\t\t\t\timg.dataset.src = img.src\n\t\t\t\t\timg.src = `${api.url}?img=${img.dataset.src}?width=${img.clientWidth}&height=${img.clientHeight}&box=1`\n\t\t\t\t} else if (img.dataset.src) {\n\t\t\t\t\timg.src = `${api.url}?img=${img.dataset.src}?width=${img.clientWidth}&height=${img.clientHeight}&box=1`\n\t\t\t\t}\n\t\t\t})\n\t\t\tawait waitForImg(capture)\n\n\t\t\t// HTML to Canvas magic\n\t\t\tvar canvas = await html2canvas(capture, {\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tlogging: false\n\t\t\t})\n\n\t\t\t// Download the output\n\t\t\tvar link = document.createElement(\"a\")\n\t\t\tlink.style.display = \"none\"\n\t\t\tlink.download = \"replurk\" + this.year + \"-\" + Date.now() + \".png\"\n\t\t\tlink.href = canvas.toDataURL()\n\t\t\tdocument.body.appendChild(link)\n\t\t\tlink.click()\n\t\t\tdocument.body.removeChild(link)\n\t\t\tlink.remove()\n\n\t\t\t// Reset button after 3s\n\t\t\tdocument.body.style.cursor = \"\"\n\t\t\tremoveClass(capture, \"wait\")\n\t\t\tsetTimeout(() => {\n\t\t\t\tcapture.generating = false\n\t\t\t}, 3000)\n\t\t}\n\t}\n}\n\nexport default statistics","\"use strict\"\n\nimport { gsap } from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js'\nimport api from \"./api.js\"\nimport scroll from \"../helpers/scroll.js\"\nimport animate from \"../helpers/animate.js\"\nimport { _q, _qAll, plural, monthNames, reduceMotionFilter } from '../helpers/helper.js'\n\nimport friends from \"./friends.js\"\nimport loading from './loading.js'\nimport scrolls from './scrolls.js'\nimport browser from './browser.js'\nimport icons from './icons.js'\nimport statistics from \"./statistics.js\"\n\nclass replurk {\n\tconstructor(next, year) {\n\t\t// Draw in which element?\n\t\tthis.next = next\n\t\t// Plurks array\n\t\tthis.plurks = []\n\t\t// Plurker profile object\n\t\tthis.me = {}\n\t\t// Friends object\n\t\tthis.friends = new friends()\n\t\t// Statistics plurker object renderer\n\t\tthis.statistics = new statistics()\n\t\t// Loading object\n\t\tthis.loading = new loading()\n\t\t// Scrolling animation\n\t\tthis.scrolls = new scrolls(this.next)\n\n\t\t// Which year?\n\t\tthis.year = year\n\t\tthis.startDate = this.year + '-10-29T09:00:00'\n\t\tthis.endDate = new Date((this.year - 1) + '-10-29T09:00:00')\n\t\tthis.days = 60 * 60 * 24 * 1000\n\t\tthis.fulldays = 365\n\t}\n\n\t// Show/hide Animations\n\t// Login Pages\n\tshowLoginPage(tl) {\n\t\tvar next = this.next\n\t\tvar length = reduceMotionFilter(1)\n\n\t\ttl.fromTo(next.querySelectorAll(\"#permission\"), {\n\t\t\tposition: \"fixed\",\n\t\t\tdisplay: \"\",\n\t\t\topacity: 0,\n\t\t\ttop: 0\n\t\t}, {\n\t\t\topacity: 1,\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\",\n\t\t\tonStart: browser.set(\"green\", length) // correct\n\t\t})\n\t\ttl.fromTo(next.querySelectorAll(\"#permission .bgtext *\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tstagger: length / 5,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\",\n\t\t\tonComplete: () => {\n\t\t\t\tgsap.set(next.querySelectorAll(\"#permission\"), {\n\t\t\t\t\tposition: \"\",\n\t\t\t\t\ttop: \"\"\n\t\t\t\t})\n\t\t\t}\n\t\t}, \">-\" + (length / 2))\n\n\t\treturn tl\n\t}\n\thideLoginPage(tl) {\n\t\tvar next = this.next\n\t\tvar length = reduceMotionFilter(1)\n\n\t\ttl.set(next.querySelectorAll(\"#permission\"), {\n\t\t\tposition: \"fixed\",\n\t\t\ttop: 0,\n\t\t})\n\t\ttl.fromTo(next.querySelectorAll(\"#permission .bgtext *, #permission form\"), {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t}, {\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t\tstagger: {\n\t\t\t\tfrom: \"end\",\n\t\t\t\tamount: length / 5\n\t\t\t},\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\"\n\t\t})\n\t\ttl.fromTo(next.querySelectorAll(\"#permission\"), {\n\t\t\topacity: 1\n\t\t}, {\n\t\t\topacity: 0,\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\",\n\t\t\tonComplete: () => {\n\t\t\t\tgsap.set(next.querySelectorAll(\"#permission\"), {\n\t\t\t\t\tposition: \"\",\n\t\t\t\t\tdisplay: \"none\",\n\t\t\t\t\ttop: \"\"\n\t\t\t\t}, \">\")\n\t\t\t}\n\t\t}, \">-\" + (length / 4))\n\n\t\treturn tl\n\t}\n\t// Statistic Pages\n\tshowStatisticPages() {\n\t\treturn new Promise(resolve => {\n\t\t\tvar next = this.next\n\t\t\tvar length = reduceMotionFilter(1)\n\t\t\tvar tl = gsap.timeline()\n\n\t\t\tbrowser.set(\"green\", length)\n\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tduration: length\n\t\t\t}, length / 4)\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext > *\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: length / 5,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, length / 2)\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: length / 5,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, length / 2)\n\t\t\ttl.fromTo(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length / 2,\n\t\t\t\tonComplete: () => resolve()\n\t\t\t}, length / 2)\n\t\t})\n\t}\n\thideStatisticPages() {\n\t\treturn new Promise(async resolve => {\n\t\t\tvar next = this.next\n\t\t\tvar length = reduceMotionFilter(1)\n\t\t\tvar tl = gsap.timeline()\n\n\t\t\tawait animate.top(next)\n\n\t\t\ttl.fromTo(next.querySelectorAll(\".footer > *, #hello .bgtext > *, #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0\n\t\t\t}, {\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: {\n\t\t\t\t\tfrom: \"end\",\n\t\t\t\t\tamount: length / 5\n\t\t\t\t},\n\t\t\t\tease: \"power3.in\"\n\t\t\t}, length / 5)\n\t\t\ttl.set(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n\t\t\t\topacity: 0\n\t\t\t}, length / 2)\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello\"), {\n\t\t\t\topacity: 1\n\t\t\t}, {\n\t\t\t\topacity: 0,\n\t\t\t\tduration: length,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tonStart: browser.set(\"yellow\", length + (length / 2)), // correct\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tgsap.set(next.querySelectorAll(\".grant\"), { display: \"none\" })\n\t\t\t\t\tresolve()\n\t\t\t\t}\n\t\t\t}, length / 2)\n\t\t})\n\t}\n\n\t// Access logic\n\t// Login messages\n\tmessage(message, quick) {\n\t\tvar next = this.next\n\n\t\tvar loginmessage = next.querySelector(\"#login-message\")\n\n\t\tif (quick) {\n\t\t\tloginmessage.innerHTML = message\n\t\t} else {\n\t\t\tgsap.to(loginmessage, {\n\t\t\t\topacity: 0,\n\t\t\t\tonComplete: function () {\n\t\t\t\t\tloginmessage.innerHTML = message\n\t\t\t\t\tgsap.to(loginmessage, {\n\t\t\t\t\t\topacity: 1\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\t// Check login status\n\tasync login(clear) {\n\t\tvar next = this.next\n\n\t\tthis.me = { id: 0 }\n\t\tthis.plurks = []\n\n\t\tscroll.destroy()\n\n\t\twindow.scrollTo(0, 0)\n\n\t\t// Scroll animation menu and logout\n\t\tthis.scrolls.menu()\n\n\t\t// Check is server have open session\n\t\tvar tl = gsap.timeline()\n\t\ttl.set(next.querySelector(\"#hello .arrow-big\"), {\n\t\t\topacity: 0\n\t\t})\n\n\t\tlet data = await api.call(\"?\")\n\t\tvar interval = null\n\t\tif (data.success) {\n\t\t\tthis.me = data.message\n\t\t\tthis.friends = new friends()\n\t\t\tthis.statistics = new statistics(next, this.me, this.friends, this.year)\n\n\t\t\t// Initial Plurk statistics\n\t\t\tawait this.displayPlurkerData()\n\n\t\t\t// Display the rest of the statistics\n\t\t\tthis.displayStatistics()\n\n\t\t\t// Scroll top top\n\t\t\tawait animate.top(next)\n\n\t\t\t// Hide login page\n\t\t\tif (clear) next.querySelector(\"#permission\").style.display = \"none\"\n\t\t\telse tl = this.hideLoginPage(tl)\n\n\t\t\t// Show statistic pages\n\t\t\tawait this.showStatisticPages(tl)\n\n\t\t\t// Add logout event\n\t\t\tnext.querySelector(\"#logout\").onclick = () => this.logout()\n\n\t\t\t// Scroll animate statistics\n\t\t\tthis.scrolls.statistics()\n\t\t\t// Scroll browser bar\n\t\t\tthis.scrolls.browserBar()\n\t\t} else {\n\t\t\t// Hide statistic pages\n\t\t\tif (clear) next.querySelectorAll(\".grant\").forEach(function (el) { el.style.display = \"none\" })\n\t\t\t// Show login page\n\t\t\tthis.showLoginPage(tl)\n\t\t\t// Request token\n\t\t\tthis.token()\n\n\t\t\t// Scroll animation permission section\n\t\t\tthis.scrolls.permisions()\n\t\t\t// Scroll browser bar\n\t\t\tthis.scrolls.browserBar(false)\n\n\t\t\t// Automatic login\n\t\t\tinterval = setInterval(async () => {\n\t\t\t\tvar data = await api.call(\"?\")\n\n\t\t\t\tif (data.success) {\n\t\t\t\t\tclearInterval(interval)\n\t\t\t\t\tthis.login()\n\t\t\t\t}\n\t\t\t}, 1000)\n\t\t}\n\n\t\tscroll.refresh()\n\t}\n\t// Logout\n\tasync logout() {\n\t\tvar tl = gsap.timeline()\n\n\t\tapi.abort()\n\n\t\t// Hide statistic pages\n\t\tawait this.hideStatisticPages(tl)\n\n\t\t// Logout\n\t\tawait api.call(\"?fetch=logout\")\n\t\tthis.statistics.clear()\n\n\t\t// Disconnect any api connection\n\t\tapi.clear()\n\n\t\t// Display login\n\t\tthis.login()\n\n\t\tscroll.refresh()\n\t}\n\t// Request token\n\tasync token(text) {\n\t\tvar next = this.next\n\t\tvar length = reduceMotionFilter(1)\n\t\tvar tokenlink = next.querySelector(\"#tokenurl\")\n\t\ttokenlink.textContent = \"Connecting Plurk...\"\n\n\t\tvar tl = gsap.timeline()\n\t\ttl.fromTo(next.querySelectorAll(\"#permission form\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\"\n\t\t}, length)\n\t\ttl.fromTo(next.querySelectorAll(\"#permission h1, #permission li\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 50,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tstagger: length / 10,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\"\n\t\t}, length)\n\n\t\tapi.call(\"?request=token\").then(data => {\n\t\t\tif (text) {\n\t\t\t\tthis.message(text)\n\t\t\t} else {\n\t\t\t\ttokenlink.textContent = \"Grant Access\"\n\t\t\t\ttokenlink.setAttribute(\"href\", api.url + \"?redirect=\" + data.message.url)\n\t\t\t}\n\t\t}, () => {\n\t\t\tthis.message(\"Error when requesting verification from Plurk, please reload your browser again.\")\n\t\t})\n\n\t\tif (!text) next.querySelector(\"#permission form\").style.display = \"none\"\n\t}\n\t// Display sessionStorage stats\n\tinfo() {\n\t\tfunction getStorageSize() {\n\t\t\tvar totalBytes = 0\n\n\t\t\tfor (var key in sessionStorage) {\n\t\t\t\tif (sessionStorage.hasOwnProperty(key)) {\n\t\t\t\t\tvar itemValue = sessionStorage.getItem(key)\n\t\t\t\t\ttotalBytes += itemValue.length\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Convert bytes to Megabytes\n\t\t\tvar totalMegabytes = Math.round((totalBytes / 1024 / 1024) * 100) / 100\n\n\t\t\treturn totalMegabytes\n\t\t}\n\n\t\t// Usage\n\t\tvar storageSize = getStorageSize()\n\t\tconsole.info('Storage Size: ' + storageSize + ' MB')\n\t}\n\n\t// Rendering statistics\n\t// Display current Plurker data\n\tasync displayPlurkerData() {\n\t\tvar plurker = this.me\n\t\tvar next = this.next\n\t\tvar extra = \"\"\n\t\tvar length = reduceMotionFilter(1)\n\n\t\t// gsap.set(next.querySelector(\"#background\"), {\n\t\t// \tbackgroundImage: `url(https://images.plurk.com/bg/${plurker.id}-${plurker.background_id}.jpg)`\n\t\t// })\n\t\t// gsap.set(next.querySelector(\"#statistics\"), {\n\t\t// \tbackgroundColor: `#${plurker.name_color}`\n\t\t// })\n\n\t\t// plurks_count\n\t\tvar days = (plurker.anniversary.years * 365) + plurker.anniversary.days\n\t\tvar responses = Math.round(plurker.response_count / days)\n\n\t\tnext.querySelector(\"#hello .thumbs\").innerHTML = `<img src=\"${plurker.avatar_big}\" />`\n\t\tvar text = `This is your year end RePlurk recap. Hopefully it will bring lots of good memories.`\n\t\tif (this.year == 2021) text = `If ${this.year} have been a rough year you, hopefully RePlurk will cheer you by bringing some good memories.`\n\t\telse if (this.year == 2022) text = `It's 2020 v2, and this is your year end RePlurk recap. Hopefully it will bring lots of good memories.`\n\t\telse if (this.year == 2024) text = `With crazy things happening around the world right now, hopefully RePlurk will bring back the good memories.`\n\t\tnext.querySelector(\"#hello .text\").innerHTML = `<h1>Hello ${plurker.display_name}</h1><p style=\"max-width: 500px; margin: 0 auto\">${text}</p>`\n\n\t\t// Draw statistic\n\t\tthis.statistics.title('All Time', 'alltime')\n\t\tif (plurker.anniversary.years && plurker.anniversary.days) {\n\t\t\tthis.statistics.draw('center posted', Math.round(plurker.plurks_count / days), `I posted around <i>${icons.draw(\"left-speech-bubble\")} ${plural(Math.round(plurker.plurks_count / days), \"plurk\")} per day</i>`)\n\n\t\t\t// Responses\n\t\t\tvar oneday = 16\n\t\t\tif (responses <= oneday) extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday / responses), \"hour\") + '</i>'\n\t\t\telse extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday * 60 / responses), \"minute\") + '</i>'\n\t\t\tthis.statistics.draw('span2 center responded', responses, `I responded around <i>${icons.draw(\"left-speech-bubble\")} ${plural(responses, \"time\")}</i> per day. ${extra} when I'm not sleeping`)\n\n\t\t\tvar join = new Date(plurker.join_date)\n\t\t\tthis.statistics.draw('center anniversary', `<strong><i>${monthNames[join.getMonth()]}</i> <i>${join.getFullYear()}</i></strong> <em>${join.getDate()}</em>`, `I joined Plurk <i>${plural(plurker.anniversary.years, \"year\")}</i> and <i>${plural(plurker.anniversary.days, \"day\")}</i> ago`)\n\t\t\tthis.statistics.draw('center badges', plurker.badges.length, `I have <i>${icons.draw(\"shield\")} ${plural(plurker.badges.length, \"badge\")}</i> right now`)\n\t\t} else {\n\t\t\tthis.statistics.draw('', '-', \"There is no data in my timeline\")\n\t\t\tthis.statistics.draw('', plurker.badges.length, \"But at least I have <i>\" + plural(plurker.badges.length, \"badge\") + \"</i> right now\")\n\t\t}\n\n\t\t// Scroll animation hello section\n\t\tscroll.push(tl => {\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .text, #hello .thumbs\"), {\n\t\t\t\ty: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -3 / 4,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0)\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext sup\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * -1 / 10,\n\t\t\t\trotation: -10,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0)\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext sub\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * 1 / 10,\n\t\t\t\trotation: 10,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0)\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .arrow-big\"), {\n\t\t\t\ty: 0,\n\t\t\t\topacity: 1\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * 1 / 4,\n\t\t\t\topacity: 0,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length / 4,\n\t\t\t}, 0)\n\t\t\treturn tl\n\t\t}, tl => ScrollTrigger.create({\n\t\t\ttrigger: next.querySelectorAll(\"#hello\"),\n\t\t\tstart: \"0 0\",\n\t\t\tend: \"100% 0\",\n\t\t\tanimation: tl,\n\t\t\tscrub: true\n\t\t}))\n\t}\n\t// Display statistics\n\tasync displayStatistics() {\n\t\tthis.statistics.title('This Year', 'thisyear')\n\t\tthis.statistics.draw(\"statistics-loading thisyearloading\", \"\", \"<i class='month'>Data from December</i>1 of 2. Loading \" + this.year + \" timeline. It can take up to 1 minute.\")\n\n\t\tthis.loading = new loading(this.next)\n\t\tthis.loading.loop(this.fulldays)\n\n\t\t// Load loop timeline\n\t\tvar getTimeline = async (offset) => {\n\t\t\toffset = (!offset) ? \"\" : \"&offset=\" + offset\n\n\t\t\tvar data = await api.call(\"?fetch=plurk&filter=my\" + offset, 1)\n\t\t\tif (data.success) {\n\t\t\t\tthis.friends.add(data.message.plurk_users)\n\t\t\t\tthis.plurks = this.plurks.concat(data.message.plurks)\n\n\t\t\t\tif (data.message.plurks.length > 0) {\n\t\t\t\t\tvar lastposted = new Date(this.plurks[this.plurks.length - 1].posted)\n\n\t\t\t\t\tif (lastposted >= this.endDate) {\n\t\t\t\t\t\tthis.loading.update(\"Data from \" + monthNames[lastposted.getMonth()] + \" \" + lastposted.getFullYear(), this.fulldays - Math.floor((lastposted - this.endDate) / this.days))\n\n\t\t\t\t\t\t// Load next plurks\n\t\t\t\t\t\tawait getTimeline(data.message.offset)\n\t\t\t\t\t} else {\n\t\t\t\t\t\twhile (lastposted < this.endDate && this.plurks.length > 1) {\n\t\t\t\t\t\t\tthis.plurks.pop()\n\t\t\t\t\t\t\tlastposted = new Date(this.plurks[this.plurks.length - 1].posted)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait this.loading.forcedone()\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait this.loading.forcedone()\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.logout()\n\t\t\t}\n\t\t}\n\t\tawait getTimeline(this.startDate)\n\n\t\t// When loading done\n\t\tvar largest_poll_result = 0\n\t\tif (this.plurks.length > 1) {\n\t\t\t// Count user statistics\n\t\t\tthis.statistics.plurks_count = 0\n\t\t\tthis.plurks.forEach(plurk => {\n\t\t\t\t// Calculate the statistics\n\t\t\t\tif (plurk.responded) this.statistics.responded_count++\n\t\t\t\tif (plurk.owner_id == this.me.id) {\n\t\t\t\t\tthis.statistics.plurks_count++\n\t\t\t\t\tthis.statistics.replurker_count += plurk.replurkers.length\n\t\t\t\t\tthis.statistics.replurker_list = this.statistics.listCount(this.statistics.replurker_list, plurk.replurkers)\n\t\t\t\t\tthis.statistics.favourite_count += plurk.favorers.length\n\t\t\t\t\tthis.statistics.favorite_list = this.statistics.listCount(this.statistics.favorite_list, plurk.favorers)\n\t\t\t\t\tif (plurk.anonymous) this.statistics.whispers_count++\n\t\t\t\t\tif (plurk.coins) this.statistics.coins_count += plurk.coins\n\t\t\t\t\tif (plurk.porn) this.statistics.porn_count++\n\t\t\t\t\tif (!plurk.response_count) this.statistics.noresponse_count++\n\t\t\t\t\tif (plurk.plurk_type == 3) this.statistics.private_count++\n\t\t\t\t\tthis.statistics.response_count += plurk.response_count\n\n\t\t\t\t\tif (plurk.content_raw.includes(\"instagram.com\")) this.statistics.instagrammer_count++\n\t\t\t\t\tif (plurk.content_raw.includes(\"facebook.com\")) this.statistics.facebooker_count++\n\t\t\t\t\telse if (plurk.content_raw.includes(\"fb.watch\")) this.statistics.facebooker_count++\n\t\t\t\t\tif (plurk.content_raw.includes(\"twitter.com\")) this.statistics.twitterer_count++\n\t\t\t\t\tif (plurk.content_raw.includes(\"reddit.com\")) this.statistics.redditor_count++\n\t\t\t\t\tif (plurk.content_raw.includes(\"tiktok.com\")) this.statistics.tiktoker_count++\n\t\t\t\t\tif (plurk.content_raw.includes(\"imgur.com\")) this.statistics.imgurer_count++\n\t\t\t\t\tif (plurk.content_raw.includes(\"youtube.com\")) this.statistics.youtuber_count++\n\n\t\t\t\t\t// Calculate polls\n\t\t\t\t\tif (plurk.with_poll) {\n\t\t\t\t\t\tvar response_count = plurk.poll.response.response_count\n\t\t\t\t\t\tthis.statistics.poll_count++\n\t\t\t\t\t\tthis.statistics.poll_responder_count += response_count\n\n\t\t\t\t\t\tif (largest_poll_result < response_count) {\n\t\t\t\t\t\t\tlargest_poll_result = response_count\n\t\t\t\t\t\t\tthis.statistics.poll_popular_plurk = plurk\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (plurk.responded) this.statistics.responded_other_count++\n\t\t\t})\n\n\t\t\t// Sort based on date\n\t\t\tthis.plurks.sort((a, b) => new Date(b.posted) - new Date(a.posted))\n\n\t\t\t// Draw statistics\n\t\t\ttry {\n\t\t\t\tawait this.statistics.drawAll(this.plurks)\n\t\t\t} catch (error) {\n\t\t\t\tconsole.info(\"Error while counting statistics\", error)\n\t\t\t}\n\n\t\t\t// Display extended statistics\n\t\t\tthis.displayExtendedStatistics()\n\t\t} else {\n\t\t\tif (this.plurks[0]) {\n\t\t\t\tvar date = new Date(plurk[0].posted)\n\t\t\t\tthis.statistics.inactive.draw(plurk[0], date.getFullYear())\n\t\t\t}\n\t\t\telse this.statistics.inactive.empty()\n\t\t}\n\t}\n\t// Display extended statistics\n\tasync displayExtendedStatistics() {\n\t\t// Deeper user statistics\n\t\tthis.statistics.title('Dig Deeper', 'digdeeper')\n\t\tthis.statistics.draw(\"statistics-loading digdeeperloading\", \"\", \"<i class='month'>Data from \" + this.year + \"</i> 2 of 2. Loading all responses. <small>If the loading seems to stop, refresh your browser tab to resume your download. Closing your browser tab will clear all downloaded data.</small>\")\n\n\t\t// Load each post responses and calculate statistics\n\t\tthis.loading = new loading(this.next)\n\t\tthis.loading.loop(this.plurks.length)\n\n\t\t// Get the responses for each plurks in parallel\n\t\tthis.plurks.sort((a, b) => new Date(a.posted) < new Date(b.posted))\n\t\tfor (var plurk of this.plurks) {\n\t\t\tvar date = new Date(plurk.posted)\n\t\t\tthis.loading.update(\"Data from \" + monthNames[date.getMonth()] + \" \" + date.getFullYear())\n\n\t\t\t// Count all\n\t\t\tawait this.statistics.most.countAll(plurk)\n\n\t\t\t// Count responses\n\t\t\tif (plurk.response_count > 0 && (plurk.responded || plurk.owner_id == this.me.id)) {\n\t\t\t\tvar result = await api.call(\"?fetch=response&plurk_ids=\" + plurk.plurk_id)\n\t\t\t\tif (result.success) for (var message of result.message) {\n\t\t\t\t\t// Add friends from response lists\n\t\t\t\t\tthis.friends.add(message.friends)\n\n\t\t\t\t\t// Count the rest of statistics\n\t\t\t\t\tfor (var response of message.responses) {\n\t\t\t\t\t\t// Find and count all responders\n\t\t\t\t\t\tawait this.statistics.most.responders.count(response)\n\t\t\t\t\t\tthis.statistics.most.interaction.count(response)\n\t\t\t\t\t\tthis.statistics.most.mvp.count(response, \"response\")\n\t\t\t\t\t\t// Count all\n\t\t\t\t\t\tawait this.statistics.most.countAll(response)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.logout()\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Display How Many Links\n\t\tthis.statistics.most.links.drawLinks()\n\t\t// Display How Many Pictures\n\t\tthis.statistics.most.links.drawPics()\n\n\t\t// Draw Results\n\t\t// Display Most Responder\n\t\t// this.statistics.most.responders.draw()\n\n\t\t// Display Most Interaction\n\t\tthis.statistics.most.interaction.draw()\n\n\t\t// Display Most Mentioned by me\n\t\t// this.statistics.most.mentions.draw()\n\n\t\t// Display How Many Words-Characters\n\t\tthis.statistics.most.types.draw()\n\n\t\t// Display Most hashtags by me\n\t\tthis.statistics.most.hashtags.draw()\n\n\t\t// Display Most My Emoticons\n\t\tthis.statistics.most.myemoticons.draw()\n\n\t\t// Display MVP\n\t\tthis.statistics.replurker_list.forEach(value => {\n\t\t\tthis.statistics.most.mvp.count({ user_id: value.id, count: value.count }, \"replurk\")\n\t\t})\n\t\tthis.statistics.favorite_list.forEach(value => {\n\t\t\tthis.statistics.most.mvp.count({ user_id: value.id, count: value.count }, \"favorite\")\n\t\t})\n\t\tthis.statistics.most.mvp.draw()\n\n\t\t// Replurk Badges\n\t\tvar gender = `${icons.draw(\"crown\")} Leader`\n\t\tif (this.me.gender == 1) gender = `${icons.draw(\"crown\")} King`\n\t\tif (this.me.gender == 0) gender = `${icons.draw(\"crown\")} Queen`\n\n\t\tvar tiktok = \"mirror-ball\"\n\t\tif (this.me.gender == 1) tiktok = \"man-dancing\"\n\t\tif (this.me.gender == 0) tiktok = \"woman-dancing\"\n\n\t\tvar facebook = \"older-person\"\n\t\tif (this.me.gender == 1) facebook = \"old-man\"\n\t\tif (this.me.gender == 0) facebook = \"old-woman\"\n\n\t\tvar superhero = \"person-superhero\"\n\t\tif (this.me.gender == 1) facebook = \"man-superhero\"\n\t\tif (this.me.gender == 0) facebook = \"woman-superhero\"\n\n\t\tvar plurker = icons.draw(\"person-bowing\")\n\t\tif (this.me.gender == 1) plurker = icons.draw(\"man-bowing\")\n\t\tif (this.me.gender == 0) plurker = icons.draw(\"woman-bowing\")\n\n\t\tthis.statistics.title('RePlurk Badges', 'replurkbadges')\n\t\tthis.statistics.body(`\\\n\t\t\t<h4>What are RePlurk Badges?</h4>\\\n\t\t\t<p>They’re badges based on your daily activities on Plurk. There are currently 18 badges in total, for things like:</p>\\\n\t\t\t<ol>\\\n\t\t\t\t<li>Creating a ton of polls (Polling ${gender})</li>\\\n\t\t\t\t<li>Getting a bunch of coins (Plurk Coins Billionaire)</li>\\\n\t\t\t\t<li>Writing a kilo of plurks (Novelist and Keyboard Warrior)</li>\\\n\t\t\t\t<li>Posting a ton of \\\"adult\\\" posts (Adult-er)</li>\\\n\t\t\t\t<li>Sharing social media URLs other than Plurk (there are 7 badges)</li>\\\n\t\t\t\t<li>Sharing an olympic size of pictures and links (Meme Lord & Missing Link)</li>\\\n\t\t\t\t<li>Getting a bunch of Replurk (Trendsetter)</li>\\\n\t\t\t\t<li>and, posting almost every day on Plurk (2 badges for Active Plurker)</li>\\\n\t\t\t</ol>\\\n\t\t\t`, `replurkbadges description`)\n\n\t\tvar count = 0\n\t\tcount += this.statistics.drawBadge(this.statistics.poll_count >= 5, 'pollbadges', \"ballot-box-with-ballot\", \"<strong>Polling \" + gender + \"</strong>\", \"Create more pollings\")\n\t\tcount += this.statistics.drawBadge(this.statistics.coins_count >= 5, 'coinbadges', \"coin\", \"<strong>Plurk Coins Billionaire</strong>\", \"Receive lots of coins\")\n\t\tcount += this.statistics.drawBadge(this.statistics.most.types.words >= 50000, 'novelistbadges', \"orange-book\", \"<strong>Novelist</strong>\", \"Post more plurk\")\n\t\tcount += this.statistics.drawBadge(this.statistics.most.types.chars >= 1000000, 'keyboardbadges', \"keyboard\", \"<strong>Keyboard Warrior</strong>\", \"Response more plurk\")\n\t\tcount += this.statistics.drawBadge(this.statistics.most.links.pics.length >= 356, 'memebadges', \"cat\", \"<strong>Meme Lord</strong>\", \"Share more images\")\n\t\tcount += this.statistics.drawBadge(this.statistics.most.links.links.length >= 356 / 2, 'missingbadges', \"orangutan\", \"<strong>The Missing Link</strong>\", \"Share more links\")\n\t\tcount += this.statistics.drawBadge(this.statistics.instagrammer_count >= 10, 'socmedbadges', \"camera\", \"<strong>Instagrammer</strong>\", \"Share more Instagram\")\n\t\tcount += this.statistics.drawBadge(this.statistics.facebooker_count >= 10, 'socmedbadges', facebook, \"<strong>Facebooker</strong>\", \"Share more Facebook\")\n\t\tcount += this.statistics.drawBadge(this.statistics.twitterer_count >= 10, 'socmedbadges', \"hatching-chick\", \"<strong>The Real Chief Twit</strong>\", \"Share more Twitter\")\n\t\tcount += this.statistics.drawBadge(this.statistics.redditor_count >= 10, 'socmedbadges', \"robot\", \"<strong>/r</strong>\", \"Share more Reddit\")\n\t\tcount += this.statistics.drawBadge(this.statistics.tiktoker_count >= 10, 'socmedbadges', tiktok, \"<strong>Tiktoker</strong>\", \"Share more TikTok\")\n\t\tcount += this.statistics.drawBadge(this.statistics.imgurer_count >= 10, 'socmedbadges', \"framed-picture\", \"<strong>Imgur-er</strong>\", \"Share more Imgur\")\n\t\tcount += this.statistics.drawBadge(this.statistics.youtuber_count >= 10, 'socmedbadges', \"movie-camera\", `<strong>Youtuber ${icons.draw(\"sleepy-face\")}`, \"Share more YouTube\")\n\t\tcount += this.statistics.drawBadge(this.statistics.porn_count >= 10, 'adultbadges', \"face-with-peeking-eye\", \"<strong>Adult-er</strong>\", \"Plurk more \\\"adult\\\" content\")\n\t\tcount += this.statistics.drawBadge(this.statistics.replurker_count >= 50, 'plurkerbadges', \"trophy\", \"<strong>Trendsetter</strong>\", \"Replurk more Plurk\")\n\t\tcount += this.statistics.drawBadge(this.statistics.plurks_count >= 356 * 1.5, 'plurkerbadges', \"military-medal\", `<strong>Active Plurker ${plurker}</strong>`, \"Plurk more daily\")\n\t\tcount += this.statistics.drawBadge(this.statistics.plurks_count >= 356 * 2, 'plurkerbadges', superhero, `<strong>Super Active Plurker ${plurker}${plurker}</strong>`, \"Plurk even more daily\")\n\t\tthis.statistics.drawBadge(count >= 17, 'plurkerbadges', \"glowing-star\", `<strong>Super Star</strong>`, \"Catch them all\")\n\t\tthis.info()\n\t}\n\n\t// Main entry\n\t// Run this to start the API\n\trun(el) {\n\t\treturn new Promise(resolve => {\n\t\t\tvar length = reduceMotionFilter(1)\n\t\t\tthis.next = el\n\n\t\t\t// Run the login\n\t\t\tgsap.fromTo(this.next.querySelectorAll('#credits'), {\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tonStart: browser.set(\"yellow\", length), // correct\n\t\t\t\tonComplete: async () => {\n\t\t\t\t\t// Display login\n\t\t\t\t\tawait this.login(true)\n\n\t\t\t\t\tresolve()\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n}\n\nexport default replurk"],"names":["constructor","this","data","unavailable","add","new_friends","Object","assign","find","user_id","findIndex","el","result","api","call","success","temp","message","user_info","id","push","findByUsername","nick_name","index","toLowerCase","getAvatar","has_profile_image","avatar","getAvatarByUsername","user_name","next","count","prev_count","counts","clean","parent","isComplete","draw","item","Promise","resolve","length","querySelector","statistics","year","load","progress","gsap","to","Math","round","snap","ease","duration","onUpdate","innerHTML","onComplete","async","done","loop","update","month","value","fakeupdate","forcedone","opacity","width","height","padding","margin","overflow","remove","refresh","credits","tl","fromTo","querySelectorAll","y","window","innerHeight","stagger","from","amount","ScrollTrigger","create","trigger","start","end","animation","scrub","permisions","x","rotation","menu","el1","el2","direction","killTweensOf","browserBar","login","onLeave","browser","set","onEnterBack","onEnter","title","flat","document","createElement","classname","classList","html","text","textContent","oldcolor","randomcolors","allColorArrays","arrayIndex","floor","Date","now","colors","getRandomColor","color","utils","shuffle","slice","pop","avatarurl","customcreate","user","attached","hidden","position","created","class","setAttribute","name","display_name","appendChild","insertTo","element","insertAdjacentElement","destroy","me","friends","responders","response","sort","i","attach","drawImage","mentions","dataAll","content","findregex","replace","idx","undefined","plurker","myemoticons","drawHTML","hashtags","links","pics","replurk","loved","match","includes","pic","split","url","link","drawMeta","toString","drawLinks","max","drawDiv","drawPics","types","words","chars","responses","a","b","response_count","posts","post","owner_id","plurk_type","drawPost","plurk_id","posted","replurkers_count","favorite","favorite_count","interaction","multiplier","content_raw","drawUserList","console","info","mvp","type","error","regex","storage","countAll","datediff","empty","whispers_count","poll_count","poll_responder_count","coins_count","porn_count","noresponse_count","private_count","replurker_count","replurker_list","favourite_count","favorite_list","responded_count","responded_other_count","responded_other_list","plurks_count","most","inactive","MutationObserver","mutationsList","forEach","mutation","addedNodes","afterDraw","observe","attributes","childList","subtree","clear","listCount","list","collection","style","loading","span","insertAdjacentHTML","body","wrapper","background","number","drawBadge","condition","icon","textempty","drawGraph","image","badge","drawLink","users","friend","medal","outerHTML","scale","drawAll","plurks","response_percentage","charttitle","node","chart","zIndex","maxTop","top","currentTop","boxShadow","name_color","Number","toggleActions","getAttribute","capture","onclick","generating","cursor","img","src","dataset","clientWidth","clientHeight","canvas","html2canvas","backgroundColor","logging","display","download","href","toDataURL","click","removeChild","setTimeout","scrolls","startDate","endDate","days","fulldays","showLoginPage","onStart","hideLoginPage","showStatisticPages","timeline","hideStatisticPages","animate","quick","loginmessage","scrollTo","interval","displayPlurkerData","displayStatistics","logout","token","setInterval","clearInterval","abort","tokenlink","then","storageSize","totalBytes","key","sessionStorage","hasOwnProperty","getItem","getStorageSize","extra","anniversary","years","avatar_big","oneday","join","join_date","getMonth","getFullYear","getDate","badges","getTimeline","offset","plurk_users","concat","lastposted","largest_poll_result","plurk","responded","replurkers","favorers","anonymous","coins","porn","instagrammer_count","facebooker_count","twitterer_count","redditor_count","tiktoker_count","imgurer_count","youtuber_count","with_poll","poll","poll_popular_plurk","displayExtendedStatistics","date","gender","tiktok","facebook","run"],"sourceRoot":""}