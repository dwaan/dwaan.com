{"version":3,"file":"259.bundle.js","mappings":"iNAgHA,EAjGA,MACC,WAAAA,GACCC,KAAKC,KAAO,CAAC,EACbD,KAAKE,YAAc,EACpB,CAaA,GAAAC,CAAIC,GACHC,OAAOC,OAAON,KAAKC,KAAMG,EAC1B,CAEA,UAAMG,CAAKC,GACV,GAAIR,KAAKE,YAAYO,WAAUC,GAAMA,GAAMF,KAAY,EAAG,OAAO,EAEjE,GAAIR,KAAKC,MAAQD,KAAKC,KAAKO,GAC1B,OAAOR,KAAKC,KAAKO,GAEjB,IAAIG,QAAeC,EAAA,EAAIC,KAAK,oDAAsDL,GAElF,GAAIG,EAAOG,QAAS,CACnB,IAAIC,EAAO,CAAC,EAGZ,OAFAA,EAAKJ,EAAOK,QAAQC,UAAUC,IAAMP,EAAOK,QAAQC,UACnDjB,KAAKG,IAAIY,GACFJ,EAAOK,QAAQC,SACvB,CAEC,OADAjB,KAAKE,YAAYiB,KAAKX,IACf,CAGV,CAEA,oBAAMY,CAAeC,GACpB,IAAIb,GAAU,EAEd,GAAIR,KAAKE,YAAYO,WAAUC,GAAMA,GAAMW,KAAc,EAAG,OAAO,EAEnE,IAAK,IAAIC,KAAStB,KAAKC,KACtB,GAAID,KAAKC,KAAKqB,GAAOD,UAAUE,eAAiBF,EAAUE,cAAe,CACxEf,EAAUc,EACV,KACD,CAGD,GAAId,EACH,OAAOR,KAAKC,KAAKO,GAEjB,IAAIG,QAAeC,EAAA,EAAIC,KAAK,sDAAwDQ,GAEpF,GAAIV,EAAOG,QAAS,CACnB,IAAIC,EAAO,CAAC,EAGZ,OAFAA,EAAKJ,EAAOK,QAAQC,UAAUC,IAAMP,EAAOK,QAAQC,UACnDjB,KAAKG,IAAIY,GACFJ,EAAOK,QAAQC,SACvB,CAEC,OADAjB,KAAKE,YAAYiB,KAAKE,IACf,CAGV,CAEA,SAAAG,CAAUhB,GACT,GAAIA,GAAWR,KAAKC,MAAQD,KAAKC,KAAKO,IACjCR,KAAKC,KAAKO,GAASiB,kBAAmB,CACzC,IAAIC,EAAS,GAEb,OADI1B,KAAKC,KAAKO,GAASkB,SAAQA,EAAS1B,KAAKC,KAAKO,GAASkB,QACpD,6BAA+BlB,EAAU,OAASkB,EAAS,MACnE,CAED,MAAO,0CACR,CAEA,mBAAAC,CAAoBC,GACnB,IAAIpB,GAAU,EAEd,GAAIoB,EACH,IAAK,IAAIN,KAAStB,KAAKC,KACtB,GAAID,KAAKC,KAAKqB,GAAOD,UAAUE,eAAiBK,EAAUL,cAAe,CACxEf,EAAUc,EACV,KACD,CAIF,OAAOtB,KAAKwB,UAAUhB,EACvB,G,SCzED,EAxBA,MACI,WAAAT,GAEI,OADAC,KAAKU,GAAKmB,SAASC,cAAc,QAC1B9B,IACX,CAEA,SAAS+B,GAEL,OADA/B,KAAKU,GAAGsB,UAAU7B,OAAO4B,GAClB/B,IACX,CAEA,IAAAiC,CAAKA,GAED,OADAjC,KAAKU,GAAGwB,UAAYD,EACbjC,IACX,CAEA,MAAAmC,CAAOC,GAIH,OAHA,QAAcpC,KAAKU,GAAG2B,YAAaD,GAAOA,IACtCpC,KAAKU,GAAG2B,YAAcD,KAEnBpC,IACX,GCYJ,EAlCA,MACI,WAAAD,GACIC,KAAKsC,SAAW,GAChBtC,KAAKuC,aAAe,GAEpB,MAAMC,EAAiB,CACnB,CACI,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,oBAKFC,EADUC,KAAKC,MAAMC,KAAKC,MAAQ,KACXL,EAAeM,OAC5C9C,KAAK+C,OAASP,EAAeC,EACjC,CAEA,cAAAO,GACI,IAAIC,EACJ,GACIjD,KAAKuC,aAAe,KAAKW,MAAMC,QAAQnD,KAAK+C,QAAQK,cAC/CpD,KAAKsC,WAAaW,EAAQjD,KAAKuC,aAAac,QAErD,OADArD,KAAKsC,SAAWW,EACTA,CACX,GCtCJ,EAFe,y1BCoFf,EAtEA,MACI,WAAAlD,CAAYmB,EAAIjB,EAAMqD,EAAWC,GAC7BvD,KAAKkB,GAAKA,EACVlB,KAAKwD,KAAOvD,EACZD,KAAKQ,QAAUP,EAAKiB,GACpBlB,KAAKyD,MAAQxD,EAAKoB,UAClBrB,KAAKqB,UAAYpB,EAAKoB,UACtBrB,KAAK0D,UAAW,EAChB1D,KAAK2D,QAAS,EACd3D,KAAK4D,MAAQ,EACb5D,KAAK6D,SAAW,EAChB7D,KAAKuD,aAAeA,EACpBvD,KAAKU,GAAKmB,SAASC,cAAc,KACjC9B,KAAK8D,SAAU,EACf9D,KAAKsD,UAAYA,EACjBtD,KAAK+D,QAAS,IAAI,GAAOC,MAAM,SAAS/B,KAAKjC,KAAK4D,MACtD,CAEA,MAAAK,GACIjE,KAAK8D,SAAU,EAEf9D,KAAKU,GAAGwD,aAAa,KAAMlE,KAAKkB,GAAKlB,KAAKQ,SAC1CR,KAAKU,GAAGwD,aAAa,QAAS,YAC9BlE,KAAKU,GAAGwD,aAAa,OAAQ,qBAAuBlE,KAAKwD,KAAKnC,WAC9DrB,KAAKU,GAAGwD,aAAa,SAAU,UAE1BlE,KAAKuD,aAcNvD,KAAKuD,aAAavD,OAblBA,KAAK0B,QAAS,IAAI,GACbsC,MAAM,UACN/B,KAAK,aAAajC,KAAKsD,iBAC5BtD,KAAKmE,MAAO,IAAI,GACXH,MAAM,QACN/B,KAAK,GAAGjC,KAAKwD,KAAKY,gBACvBpE,KAAK+D,QAAS,IAAI,GACbC,MAAM,SACN/B,KAAKjC,KAAK4D,OACf5D,KAAKU,GAAG2D,YAAYrE,KAAK0B,OAAOhB,IAChCV,KAAKU,GAAG2D,YAAYrE,KAAKmE,KAAKzD,IAC9BV,KAAKU,GAAG2D,YAAYrE,KAAK+D,OAAOrD,IAIxC,CAEA,QAAA4D,CAASC,GACAvE,KAAK8D,SAAS9D,KAAKiE,SAExBjE,KAAK0D,UAAW,EAChBa,EAAQC,sBAAsB,YAAaxE,KAAKU,GACpD,CAEA,OAAA+D,GAGI,OAFAzE,KAAK0D,UAAW,IAEZ1D,KAAKU,KACLV,KAAKU,GAAGgE,UACD,EAIf,CAEA,MAAAvC,GAEQnC,KAAK0D,UACL1D,KAAK+D,OAAO5B,OAAO,GAAGnC,KAAK4D,QAEnC,GCuUJ,EAjZA,MACC,WAAA7D,CAAY4E,GACNA,IAEL3E,KAAK4E,GAAKD,EAAWC,GACrB5E,KAAK6E,QAAUF,EAAWE,QAC1B7E,KAAK8E,KAAOH,EAAWG,KACvB9E,KAAK2E,WAAaA,EAElB3E,KAAK+E,WAAa,CACjB9E,KAAM,GACN+E,OAAQhF,KACR4D,MAAOqB,eAAgBC,GAKtB,IAJI5D,EAAQtB,KAAKC,KAAKQ,WAAU,SAAUC,GACzC,OAAOA,EAAGF,SAAW0E,EAAS1E,OAC/B,KAEY,EAAG,CACd,IAAIgD,QAAaxD,KAAKgF,OAAOH,QAAQtE,KAAK2E,EAAS1E,SACnDR,KAAKC,KAAKkB,KAAK,IAAI,EAAQ,iBAAkBqC,EAAMxD,KAAKgF,OAAOH,QAAQrD,UAAUgC,EAAKtC,KACvF,MACClB,KAAKC,KAAKqB,GAAOsC,QAElB5D,KAAKC,KAAKkF,KAAKnF,KAAKgF,OAAOG,MAI3B,IADA,IAAI7D,EAAQ,EACH8D,EAAI,EAAGA,EAAIpF,KAAKC,KAAK6C,OAAQsC,IACrCpF,KAAKC,KAAKmF,GAAGvB,SAAW7D,KAAKC,KAAK6C,OAC9B9C,KAAKC,KAAKmF,GAAG5E,SAAWR,KAAKgF,OAAOJ,GAAG1D,IAA8B,OAAxBlB,KAAKC,KAAKmF,GAAG5E,UAC7DR,KAAKC,KAAKmF,GAAGvB,SAAWvC,IACxBtB,KAAKgF,OAAOL,WAAWU,OAAO,qIAAsIrF,KAAKC,KAAKmF,GAAI,GAGrL,EACAE,KAAM,WACL,IAAIhE,EAAQ,EACZ,GAAItB,KAAKC,KAAK6C,OAAS,EAAG,CACzB,MAAQ9C,KAAKC,KAAKqB,GAAOd,SAAWR,KAAKgF,OAAOJ,GAAG1D,IAAkC,OAA5BlB,KAAKC,KAAKqB,GAAOd,UAAqBc,EAAQtB,KAAKC,KAAK6C,QAAQxB,IACrHtB,KAAKC,KAAKqB,IAAQtB,KAAKgF,OAAOL,WAAWY,UAAU,SAAUvF,KAAKgF,OAAOH,QAAQrD,UAAUxB,KAAKC,KAAKqB,GAAOd,SAAU,qBAAuBR,KAAKC,KAAKqB,GAAOkC,KAAKnC,UAAW,wBAAyBrB,KAAKC,KAAKqB,GAAOkC,KAAKY,aAAcpE,KAAKC,KAAKqB,GAAOsC,MACjQ,CACD,GAGD5D,KAAKwF,SAAW,CACfvF,KAAM,GACNwF,QAAS,GACTT,OAAQhF,KACR4D,MAAOqB,eAAgBS,GACtB,IAEIpE,EAAQ,EAEZ,GAJatB,KAAKgF,OAAOW,UAAU,wBAAwBlC,GAASA,EAAMmC,QAAQ,YAAa,KAAKF,EAAS1F,KAAKC,MAItG,CAEXD,KAAKC,KAAKkF,KAAKnF,KAAKgF,OAAOG,MAC3B,IAAK,IAAIU,EAAM,EAAGA,EAAM7F,KAAKC,KAAK6C,OAAQ+C,IAAO,CAGhD,GAFA7F,KAAKC,KAAK4F,GAAKhC,SAAW7D,KAAKC,KAAK6C,OAEhCxB,GATI,EASU,CACjB,IAAIkC,QAAaxD,KAAKgF,OAAOH,QAAQzD,eAAepB,KAAKC,KAAK4F,GAAKpC,OAE1CqC,MAArB9F,KAAKC,KAAK4F,GAAKnF,KAClBV,KAAKC,KAAK4F,GAAO,IAAI,EAAQ,oBAAqBrC,EAAM,IAAIuC,IAC3DA,EAAQrE,QAAS,IAAI,GAAOsC,MAAM,UAAU/B,KAAK,aAAajC,KAAKgF,OAAOH,QAAQrD,UAAUuE,EAAQvF,gBACpGuF,EAAQ5B,MAAO,IAAI,GAAOH,MAAM,QAAQ/B,KAAK,IAAI8D,EAAQ1E,aACzD0E,EAAQhC,QAAS,IAAI,GAAOC,MAAM,SAAS/B,KAAK8D,EAAQnC,OACxDmC,EAAQrF,GAAG2D,YAAY0B,EAAQrE,OAAOhB,IACtCqF,EAAQrF,GAAG2D,YAAY0B,EAAQ5B,KAAKzD,IACpCqF,EAAQrF,GAAG2D,YAAY0B,EAAQhC,OAAOrD,IACtCqF,EAAQrF,GAAGwD,aAAa,OAAQ,qBAAuB6B,EAAQ1E,UAAS,KAItEmC,EAAKtC,IAAMlB,KAAKgF,OAAOJ,GAAG1D,IAAiB,OAAXsC,EAAKtC,KACxClB,KAAKC,KAAK4F,GAAKhC,SAAWvC,IAC1BtB,KAAKgF,OAAOL,WAAWU,OAAO,4IAA6IrF,KAAKC,KAAK4F,GA1B/K,GA4BR,CAEI7F,KAAKC,KAAK4F,GAAKnF,IAAIV,KAAKgF,OAAOL,WAAWU,OAAO,4IAA6IrF,KAAKC,KAAK4F,GA9BpM,EA+BT,CACD,CACD,EACAP,KAAM,WACL,IAAIhE,EAAQ,EACZ,GAAItB,KAAKC,KAAK6C,OAAS,EAAG,CACzB,MAAQ9C,KAAKC,KAAKqB,GAAOd,SAAWR,KAAKgF,OAAOJ,GAAG1D,IAAkC,OAA5BlB,KAAKC,KAAKqB,GAAOd,UAAqBc,EAAQtB,KAAKC,KAAK6C,QAAQxB,IACrHtB,KAAKC,KAAKqB,IAAQtB,KAAKgF,OAAOL,WAAWY,UAAU,SAAUvF,KAAKgF,OAAOH,QAAQlD,oBAAoB3B,KAAKC,KAAKqB,GAAOmC,OAAQ,qBAAuBzD,KAAKC,KAAKqB,GAAOmC,MAAO,8BAA+B,IAAMzD,KAAKC,KAAKqB,GAAOmC,MAAOzD,KAAKC,KAAKqB,GAAOsC,MAChQ,CACD,GAGD5D,KAAKgG,YAAc,CAClB/F,KAAM,GACN+E,OAAQhF,KACR4D,MAAO,SAAU8B,GAChB1F,KAAKgF,OAAOW,UAAU,gCAAgC,SAAUlC,GAC/D,OAAOA,EAAMmC,QAAQ,4BAA6B,GACnD,GAAGF,EAAS1F,KAAKC,KAClB,EACAqF,KAAM,WACL,IAAIrD,EAAO,GAEXjC,KAAKC,KAAKkF,KAAKnF,KAAKgF,OAAOG,MAC3B,IAAK,IAAIC,EAAI,EAAGA,GAAKpF,KAAKC,KAAK6C,OAFrB,EAEoC9C,KAAKC,KAAK6C,OAF9C,IAE+D9C,KAAKC,KAAKmF,GAAIA,IAClFpF,KAAKC,KAAKmF,GAAGxB,MAAQ,IAAG3B,GAAQ,kBAAoBjC,KAAKC,KAAKmF,GAAG3B,MAAQ,4BAA8BzD,KAAKC,KAAKmF,GAAGxB,MAAQ,iBACrH,IAAR3B,GAAYjC,KAAKgF,OAAOL,WAAWsB,SAAS,2BAA4B,gCAAiChE,EAC9G,GAGDjC,KAAKkG,SAAW,CACfjG,KAAM,GACN+E,OAAQhF,KACR4D,MAAO,SAAU8B,GAChB1F,KAAKgF,OAAOW,UAAU,uBAAuB,SAAUlC,GACtD,OAAOA,EAAMmC,QAAQ,yBAA0B,GAChD,GAAGF,EAAS1F,KAAKC,KAClB,EACAqF,KAAM,WACL,IAAIrD,EAAO,GAEXjC,KAAKC,KAAKkF,KAAKnF,KAAKgF,OAAOG,MAC3B,IAAK,IAAIC,EAAI,EAAGA,GAAKpF,KAAKC,KAAK6C,OAFrB,EAEoC9C,KAAKC,KAAK6C,OAF9C,IAE+D9C,KAAKC,KAAKmF,GAAIA,IAClFpF,KAAKC,KAAKmF,GAAGxB,MAAQ,IAAG3B,GAAQ,4CAA8CjC,KAAKC,KAAKmF,GAAG3B,MAAQ,2CAA6CzD,KAAKC,KAAKmF,GAAGxB,MAAQ,YAAc5D,KAAKC,KAAKmF,GAAG3B,MAAQ,cACjM,IAARxB,IACHA,EAAO,qBAAuBA,EAC9BjC,KAAKgF,OAAOL,WAAWsB,SAAS,WAAY,4BAA6BhE,GAE3E,GAGDjC,KAAKmG,MAAQ,CACZlG,KAAM,GACNkG,MAAO,GACPC,KAAM,GACNpB,OAAQhF,KACR4D,MAAO,SAAU8B,EAASxE,EAAIgE,EAAUmB,EAASC,GAChD,IAAI3F,EAAS+E,EAAQa,MAAM,0CACvB3C,EAAQ,EACRwC,EAAO,GACPD,EAAQ,GAEZ,GAAIxF,EAAQ,IAAK,IAAIV,KAAQU,EAK5B,GAJKX,KAAKC,KAAKiB,KACd0C,EAAQsB,EAAsB,IAAVmB,EAA0B,GAARC,GAGnCrG,EAAKuG,SAAS,oBAEjB,GADAxG,KAAKoG,KAAKjF,KAAKlB,GACX2D,EAAQ,EAAG,CACd,IAAI6C,EAAMxG,EAAKyG,MAAM,KACrBN,EAAKjF,KAAK,CACTwF,IAAKF,EAAI,GACTvB,SAAUA,EACVmB,QAASA,EACTC,MAAOA,GAET,OAIA,GADAtG,KAAKmG,MAAMhF,KAAKlB,GACZ2D,EAAQ,EAAG,CACd,IAAIgD,EAAO3G,EAAKyG,MAAM,KACtBP,EAAMhF,KAAK,CACVwF,IAAKC,EAAK,GACV1B,SAAUA,EACVmB,QAASA,EACTC,MAAOA,GAET,CAKE1C,GAAO5D,KAAKC,KAAKkB,KAAK,CACzBD,GAAIA,EACJkF,KAAMA,EACND,MAAOA,EACPvC,MAAOA,EACP8B,QAASA,GAEX,EACAmB,UAAW,WACV,IAAIC,EAAM,EACNxF,EAAQ,EACRX,EAAS,GAEb,IADAX,KAAKC,KAAKkF,KAAKnF,KAAKgF,OAAOG,MACpB7D,EAAQtB,KAAKC,KAAK6C,QAAUgE,EAAM,GAAG,CAC3C,GAAI9G,KAAKC,KAAKqB,GAAO6E,MAAMrD,OAAS,EAAG,CACtC,IAAI8D,EAAO5G,KAAKC,KAAKqB,GAAO6E,MAAM,GAC9BQ,EAAM,gCAAkC3G,KAAKC,KAAKqB,GAAOJ,GAAG6F,SAAS,IAAM,kCAAoC,EAAW,OAC9HpG,GAAU,uCAAyCX,KAAKC,KAAKqB,GAAOoE,QAAU,+HAAiIkB,EAAK1B,SAAW,oGAAsG0B,EAAKP,QAAU,kGAAoGO,EAAKN,MAAQ,UAAYK,EAAM,eACvdG,GACD,CACAxF,GACD,CACItB,KAAKmG,MAAMrD,OAAS,GAAG9C,KAAKgF,OAAOL,WAAWqC,QAAQ,wBAAyB,sCAAuC,QAAOhH,KAAKmG,MAAMrD,OAAQ,QAAU,8CAAgDnC,EAC/M,EACAsG,SAAU,WACT,IAAIH,EAAM,EACNxF,EAAQ,EACRX,EAAS,GAEb,IADAX,KAAKC,KAAKkF,KAAKnF,KAAKgF,OAAOG,MACpB7D,EAAQtB,KAAKC,KAAK6C,QAAUgE,EAAM,GAAG,CAC3C,GAAI9G,KAAKC,KAAKqB,GAAO8E,KAAKtD,OAAS,EAAG,CACrC,IAAIsD,EAAOpG,KAAKC,KAAKqB,GAAO8E,KAAK,GAC7BO,EAAM,gCAAkC3G,KAAKC,KAAKqB,GAAOyF,SAAS,IAAM,kCAAoC,EAAW,OAC3HpG,GAAU,oEAAsEC,EAAA,EAAI+F,IAAM,QAAUP,EAAKO,IAAM,8BAAgC3G,KAAKC,KAAKqB,GAAOoE,QAAU,yHAA2HU,EAAKlB,SAAW,oGAAsGkB,EAAKC,QAAU,kGAAoGD,EAAKE,MAAQ,UAAYK,EAAM,qBAC7iBG,GACD,CACAxF,GACD,CAEItB,KAAKoG,KAAKtD,OAAS,GAAG9C,KAAKgF,OAAOL,WAAWW,KAAK,2BAA4BtF,KAAKoG,KAAKtD,OAAQ,mBAAoB,QAAO9C,KAAKoG,KAAKtD,OAAQ,SAAW,QAC9I,IAAVnC,GAAcX,KAAKgF,OAAOL,WAAWsB,SAAS,oBAAqB,+BAAgCtF,EACxG,GAGDX,KAAKkH,MAAQ,CACZC,MAAO,EACPC,MAAO,EACPpC,OAAQhF,KACR4D,MAAO,SAAU8B,GAChB,IAAIyB,EAAQzB,EAAQgB,MAAM,KAE1B1G,KAAKoH,OAAS1B,EAAQ5C,OACtB9C,KAAKmH,OAASA,EAAMrE,MACrB,EACAwC,KAAM,WACDtF,KAAKoH,MAAQ,GAAGpH,KAAKgF,OAAOL,WAAWW,KAAK,qBAAsBtF,KAAKoH,MAAO,0BAA2B,QAAcpH,KAAKoH,MAAO,aAAe,oBAAqB,QAAcpH,KAAKmH,MAAO,QAAU,iBAChN,GAGDnH,KAAKqH,UAAY,CAChBrC,OAAQhF,KACRmF,KAAM,CAACmC,EAAGC,IAAMA,EAAEC,eAAiBF,EAAEE,eACrClC,KAAM,SAAUmC,GACf,IAAIC,EACJD,EAAMtC,KAAKnF,KAAKmF,OACZuC,EAAOD,EAAM,IAASE,UAAY3H,KAAKgF,OAAOJ,GAAG1D,IAAyB,GAAnBwG,EAAKE,YAAmBF,EAAKF,eAAiB,GACxGxH,KAAKgF,OAAOL,WAAWkD,SAAS,kCAAmCH,EAAKI,SAAU,uGAAwG,QAASJ,EAAKK,QAASL,EAAKhC,QAASgC,EAAKF,eAEtO,GAGDxH,KAAKqG,QAAU,CACdrB,OAAQhF,KACRmF,KAAM,CAACmC,EAAGC,IAAMA,EAAES,iBAAmBV,EAAEU,iBACvC1C,KAAM,SAAUmC,GACf,IAAIC,EACJD,EAAMtC,KAAKnF,KAAKmF,OACZuC,EAAOD,EAAM,IAASE,UAAY3H,KAAKgF,OAAOJ,GAAG1D,IAAyB,GAAnBwG,EAAKE,YAAmBF,EAAKM,iBAAmB,GAC1GhI,KAAKgF,OAAOL,WAAWkD,SAAS,kCAAmCH,EAAKI,SAAU,8FAA+F,QAASJ,EAAKK,QAASL,EAAKhC,QAASgC,EAAKM,iBAE7N,GAGDhI,KAAKiI,SAAW,CACfjD,OAAQhF,KACRmF,KAAM,CAACmC,EAAGC,IAAMA,EAAEW,eAAiBZ,EAAEY,eACrC5C,KAAM,SAAUmC,GACf,IAAIC,EACJD,EAAMtC,KAAKnF,KAAKmF,OACZuC,EAAOD,EAAM,IAASE,UAAY3H,KAAKgF,OAAOJ,GAAG1D,IAAyB,GAAnBwG,EAAKE,YAAmBF,EAAKQ,eAAiB,GACxGlI,KAAKgF,OAAOL,WAAWkD,SAAS,kCAAmCH,EAAKI,SAAU,0FAA2F,QAASJ,EAAKK,QAASL,EAAKhC,QAASgC,EAAKQ,eAEzN,GAGDlI,KAAKmI,YAAc,CAClBlI,KAAM,GACN+E,OAAQhF,KACR4D,MAAO,SAAUsB,GAChB,IAAI5D,EAAQtB,KAAKC,KAAKQ,WAAU,SAAUC,GACzC,OAAOA,EAAGQ,IAAMgE,EAAS1E,OAC1B,IAEIc,EAAQ,EACXtB,KAAKC,KAAKkB,KAAK,CACdD,GAAIgE,EAAS1E,QACboD,MAAO,EACPwE,WAAY,EACZN,SAAU5C,EAAS4C,YAGhB9H,KAAKC,KAAKqB,GAAOwG,UAAY5C,EAAS4C,SAAU9H,KAAKC,KAAKqB,GAAO8G,aAChEpI,KAAKC,KAAKqB,GAAO8G,WAAa,EACnCpI,KAAKC,KAAKqB,GAAOsC,OAAU5D,KAAKC,KAAKqB,GAAO8G,WAAalD,EAASmD,YAAYvF,QAE/E9C,KAAKC,KAAKkF,KAAKnF,KAAKgF,OAAOG,KAC5B,EACAG,KAAM,WAIL,IAHA,IAAI3E,EAAS,GACTmC,EAAS,EACTxB,EAAQ,EACLtB,KAAKC,KAAKqB,IAAUwB,GAAU,GAChC9C,KAAKC,KAAKqB,GAAOJ,IAAMlB,KAAKgF,OAAOJ,GAAG1D,KACzCP,EAAOQ,KAAKnB,KAAKC,KAAKqB,IACtBwB,KAEDxB,IAGD,IACKX,EAAOmC,OAAS,GAAG9C,KAAKgF,OAAOL,WAAW2D,aAAa,eAAgB,kBAAmB,8HAA+H3H,EAC9N,CAAE,MACD4H,QAAQC,KAAK,+CACd,CACD,GAGDxI,KAAKyI,IAAM,CACVxI,KAAM,GACN+E,OAAQhF,KACR4D,MAAO,SAAUsB,EAAUwD,GAC1B,IAAIpH,EAAQtB,KAAKC,KAAKQ,WAAU,SAAUC,GACzC,OAAOA,EAAGQ,IAAMgE,EAAS1E,OAC1B,IAEIc,EAAQ,EACXtB,KAAKC,KAAKkB,KAAK,CACdD,GAAIgE,EAAS1E,QACboD,MAAO,EACPwE,WAAY,EACZN,SAAU5C,EAAS4C,WAGR,WAARY,EACH1I,KAAKC,KAAKqB,GAAOsC,OAA2B,IAAjBsB,EAAStB,MAClB,YAAR8E,EACV1I,KAAKC,KAAKqB,GAAOsC,OAA2B,GAAjBsB,EAAStB,MAC1BsB,EAASmD,YAAYvF,OAAS,KACpC9C,KAAKC,KAAKqB,GAAOwG,UAAY5C,EAAS4C,SAAU9H,KAAKC,KAAKqB,GAAO8G,YAAc,GAC9EpI,KAAKC,KAAKqB,GAAO8G,WAAa,GACnCpI,KAAKC,KAAKqB,GAAOsC,OAAU5D,KAAKC,KAAKqB,GAAO8G,WAAalD,EAASmD,YAAYvF,QAGhF9C,KAAKC,KAAKkF,KAAKnF,KAAKgF,OAAOG,KAC5B,EACAG,KAAM,WAIL,IAHA,IAAI3E,EAAS,GACTmC,EAAS,EACTxB,EAAQ,EACLtB,KAAKC,KAAKqB,IAAUwB,GAAU,GAChC9C,KAAKC,KAAKqB,GAAOJ,IAAMlB,KAAKgF,OAAOJ,GAAG1D,KACzCP,EAAOQ,KAAKnB,KAAKC,KAAKqB,IACtBwB,KAEDxB,IAGD,IACKX,EAAOmC,OAAS,GAAG9C,KAAKgF,OAAOL,WAAW2D,aAAa,eAAgB,MAAO,MAAQtI,KAAKgF,OAAOF,KAAO,mFAAoFnE,EAClM,CAAE,MAAOgI,GACRJ,QAAQC,KAAK,8BAA+BG,EAC7C,CACD,GAEF,CAEA,IAAAxD,CAAKmC,EAAGC,GACP,OAAOA,EAAE3D,MAAQ0D,EAAE1D,KACpB,CAGA,SAAA+B,CAAUiD,EAAOhD,EAASF,EAASmD,GAClC,IAAIlI,EAAS+E,EAAQa,MAAMqC,GAE3B,IAAK,IAAItH,KAASX,EAAQ,CACzB,IAAI8C,EAAQmC,EAAQjF,EAAOW,IACvBuE,EAAMgD,EAAQpI,WAAUC,GAAMA,EAAG+C,OAASA,IAE1CoC,EAAM,EACTgD,EAAQ1H,KAAK,CACZD,GAAIuC,EACJA,MAAOA,EACPG,MAAO,IAGRiF,EAAQhD,GAAKjC,OAEf,CAEA,OAAOjD,CACR,CAEA,cAAMmI,CAAS7I,GAEVA,EAAKO,SAAWR,KAAK4E,GAAG1D,IAAIlB,KAAKgG,YAAYpC,MAAM3D,EAAKyF,eAEtD1F,KAAKwF,SAAS5B,MAAM3D,EAAKoI,aAE3BpI,EAAKO,SAAWR,KAAK4E,GAAG1D,IAAIlB,KAAKkG,SAAStC,MAAM3D,EAAKyF,SAErDzF,EAAKO,SAAWR,KAAK4E,GAAG1D,IAAIlB,KAAKmG,MAAMvC,MAAM3D,EAAKyF,QAASzF,EAAK6H,SAAU7H,EAAKuH,eAAgBvH,EAAK+H,iBAAkB/H,EAAKiI,gBAE3HjI,EAAKO,SAAWR,KAAK4E,GAAG1D,IAAIlB,KAAKkH,MAAMtD,MAAM3D,EAAKoI,YACvD,GCtYD,EAhBA,MACC,WAAAtI,CAAY4E,GACX3E,KAAK2E,WAAaA,EAClB3E,KAAK8E,KAAOH,EAAWG,IACxB,CAEA,IAAAQ,CAAKrF,GACJD,KAAK2E,WAAWW,KAAK,WAAYtF,KAAK8E,KAAO,WAAY,4BAA+BA,KAAO,8FAC/F9E,KAAK2E,WAAWkD,SAAS,iCAAkC5H,EAAK6H,SAAU,wBAA0BiB,SAAS9I,EAAK8H,QAAS9H,EAAKyF,QAASzF,EAAKuH,eAC/I,CAEA,KAAAwB,GACChJ,KAAK2E,WAAWW,KAAK,WAAY,IAAK,iIACvC,GCmjBD,EAhjBA,MACC,WAAAvF,CAAYkJ,EAAMrE,EAAIC,EAASC,GACzBmE,GAASrE,GAAOC,GAAYC,IAEjC9E,KAAKkJ,eAAiB,EACtBlJ,KAAKmJ,WAAa,EAClBnJ,KAAKoJ,qBAAuB,EAC5BpJ,KAAKqJ,YAAc,EACnBrJ,KAAKsJ,WAAa,EAClBtJ,KAAKuJ,iBAAmB,EACxBvJ,KAAKwJ,cAAgB,EACrBxJ,KAAKyJ,gBAAkB,EACvBzJ,KAAK0J,eAAiB,GACtB1J,KAAK2J,gBAAkB,EACvB3J,KAAK4J,cAAgB,GACrB5J,KAAKwH,eAAiB,EACtBxH,KAAK6J,gBAAkB,EACvB7J,KAAK8J,sBAAwB,EAC7B9J,KAAK+J,qBAAuB,GAC5B/J,KAAKgK,aAAe,EACpBhK,KAAKkB,GAAK,EACVlB,KAAKuC,aAAe,GAEpBvC,KAAKiJ,KAAOA,EACZjJ,KAAK4E,GAAKA,EACV5E,KAAK6E,QAAUA,EACf7E,KAAK8E,KAAOA,EAGZ9E,KAAKiK,KAAO,IAAI,EAAKjK,MAGrBA,KAAKkK,SAAW,IAAI,EAASlK,MAE7BA,KAAKU,GAAKV,KAAKiJ,KAAKkB,cAAc,eAGnB,IAAIC,kBAAkBC,IACpCA,EAAcC,SAAQC,IACrBA,EAASC,WAAWF,SAAQ5J,IACvBA,EAAGyJ,eAAenK,KAAKyK,UAAU/J,EAAE,GACvC,GACD,IAEOgK,QAAQ1K,KAAKU,GAAI,CACzBiK,YAAY,EACZC,WAAW,EACXC,SAAS,IAEX,CAEA,KAAAC,GACC9K,KAAKU,GAAGwB,UAAY,EACrB,CAEA,SAAA6I,CAAUC,EAAMC,GAUf,OATIA,EAAWnI,OAAS,GACvBmI,EAAWX,SAAQ7G,IAClB,IAAInC,EAAQ0J,EAAKvK,WAAUC,GAAMA,EAAGQ,IAAMuC,IAEtCnC,EAAQ,EAAG0J,EAAK7J,KAAK,CAAED,GAAIuC,EAAOG,MAAO,IACxCoH,EAAK1J,GAAOsC,OAAK,IAIjBoH,CACR,CAEA,KAAAE,CAAM9I,EAAM+I,EAAQ,GAAIC,GAAU,GACjC,IAAIC,EAAOD,EAAU,6BAA+B,iCACpDpL,KAAKU,GAAG4K,mBAAmB,YAAa,wDACUH,wBACpC/I,WAAciJ,qBAE7B,CAEA,IAAAE,CAAKnJ,EAAM+I,EAAQ,IAClBnL,KAAKU,GAAG4K,mBAAmB,YAAa,wDACUH,gCAC5B/I,sBAEvB,CAEA,SAAAqI,CAAU/J,GACT,IAAIoC,GAAS,QAAmB,GAEhC,IAAI,QAASpC,EAAI,mBAAoB,CACpC,IAAIuC,EAAQ,IAAI,EACZV,EAAe,CAACU,EAAMD,iBAAkBC,EAAMD,kBAC9CwI,EAAO9K,EAAGyJ,cAAc,SAE5B,KAAKsB,IAAID,EAAM,CACdE,WAAY,+BAAiCnJ,EAAa,GAAK,QAAUA,EAAa,GAAK,WAG5F,KAAKoJ,GAAGH,EAAM,CACbI,QAAS,EACTC,SAAU/I,EAAS,EACnBgJ,KAAM,cACJ,GAGH,IAAIC,EAAS,KAAKC,aAClBD,EAAO5L,IAAI,2BAA2B,KACrC,IAAOgB,MAAK8K,IACXA,EAAGC,OAAOxL,EAAGyL,SAAU,CACtBC,EAAwB,EAArBC,OAAOC,YAAkB,GAC1B,CACFF,EAAG,EACHN,KAAM,YACJ,GACIG,KACLA,GACK,IAAchI,OAAO,CAC3BsI,QAAS7L,EACT8L,MAAO,gBACPC,IAAK,gBACLC,UAAWT,EACXU,MAAO,KAER,IAEFZ,EAAO5L,IAAI,2BAA2B,KACrC,IAAOgB,MAAK8K,IACXA,EAAGC,OAAOxL,EAAGyL,SAAU,CACtBC,EAAG,GACD,CACFA,EAAG,GACD,GACIH,KACLA,GACK,IAAchI,OAAO,CAC3BsI,QAAS7L,EACT8L,MAAO,gBACPC,IAAK,oBACLC,UAAWT,EACXU,MAAO,KAER,IAGF,IAAOxL,MAAK,SAAU8K,GACrB,GAAIvL,EAAGyJ,cAAc,QAAS,CAC7B,IAAIyC,EAASC,OAAOnM,EAAGyJ,cAAc,QAAQ9H,aAC7C,GAAIuK,EAAS,EAAG,CACf,IAAIE,EAAO,CAAEC,SAAU,GACnBlB,EAAW,EACXe,GAAU,KAAOA,EAAS,IAAMf,EAAW,EACtCe,GAAU,KAAQA,EAAS,MAAOf,EAAW,EAC7Ce,GAAU,QAAOf,EAAW,GACrCI,EAAGN,GAAGmB,EAAM,CACXC,SAAUH,EACVI,KAAM,WACNlB,KAAM,aACND,SAAUA,EACVoB,SAAU,KACTvM,EAAGyJ,cAAc,QAAQ9H,aAAc,QAAOyK,EAAKC,SAAQ,GAE1D,EACJ,CACD,CAEA,OAAOd,CACR,IAAGA,GACK,IAAchI,OAAO,CAC3BsI,QAAS7L,EACT8L,MAAO,gBACPC,IAAK,oBACLC,UAAWT,EACXiB,cAAe,yBAGlB,MAEC,IAAO/L,MAAK8K,IACXA,EAAGC,OAAOxL,EAAGyM,iBAAiB,KAAM,CACnCC,EAAG,SACD,CACFA,EAAG,KACHtB,KAAM,YACJ,GACIG,KACLA,GACK,IAAchI,OAAO,CAC3BsI,QAAS7L,EACT8L,MAAO,YACPC,IAAK,SACLC,UAAWT,EACXU,MAAO,OAKN,QAASjM,EAAI,cAChB,IAAOS,MAAK8K,IACXA,EAAGC,OAAOxL,EAAGyJ,cAAc,UAAW,CACrCiC,EAAG,KACD,CACFA,EAAG,GACD,GAEHH,EAAGC,OAAOxL,EAAGyJ,cAAc,YAAa,CACvCkD,OAAQ,MACN,CACFA,OAAQ3M,EAAGyJ,cAAc,YAAYmD,aAAa,eAAiB,KACjE,GAEIrB,KACLA,GACK,IAAchI,OAAO,CAC3BsI,QAAS7L,EACT8L,MAAO,WACPC,IAAK,YACLC,UAAWT,EACXU,MAAO,OAKN,QAASjM,EAAI,UAChB,IAAOS,MAAK8K,IACXA,EAAGC,OAAOxL,EAAGyJ,cAAc,QAAS,CACnCiC,EAAG,OACD,CACFA,EAAG,EACHN,KAAM,cACJ,GACIG,KACLA,GACK,IAAchI,OAAO,CAC3BsI,QAAS7L,EACT8L,MAAO,WACPC,IAAK,YACLC,UAAWT,EACXU,MAAO,MAMV3M,KAAKuN,QAAQ7M,GAEb,IAAO8M,SACR,CAEA,OAAAD,CAAQ7M,GACP,IAAI6M,EAAU7M,EAAGyJ,cAAc,kBAC1BoD,IAELA,EAAQE,QAAUxI,UACjB,IAAIsI,EAAQG,WAAZ,CAGAH,EAAQG,YAAa,EACrB7L,SAAS0J,KAAKJ,MAAMwC,OAAS,OAG7BJ,EAAQrL,UAAY,gBACpB,IAAI0L,QAAeC,EAAYnN,EAAGyJ,cAAc,SAAU,CACzD2D,gBAAiB,KACjBC,SAAS,EACTC,MAAO,GAAGpN,EAAA,EAAI+F,WACdsH,SAAS,IAINrH,EAAO/E,SAASC,cAAc,KAClC8E,EAAKuE,MAAM+C,QAAU,OACrBtH,EAAKuH,SAAW,UAAYnO,KAAK8E,KAAO,IAAMlC,KAAKC,MAAQ,OAC3D+D,EAAKwH,KAAOR,EAAOS,YACnBxM,SAAS0J,KAAKlH,YAAYuC,GAC1BA,EAAK0H,QACLzM,SAAS0J,KAAKgD,YAAY3H,GAC1BA,EAAKlC,SAGL6I,EAAQrL,UAAY,OACpBL,SAAS0J,KAAKJ,MAAMwC,OAAS,UAC7Ba,YAAW,KACVjB,EAAQrL,UAAY,YACpBqL,EAAQG,YAAa,IACnB,IA/BqB,CA+BjB,EAET,CAEA,OAAAe,CAAQtD,EAAO/I,EAAMsJ,GACpB,MAAO,iDAAiDP,8BACnCO,EAAa,gCAAgCA,MAAiB,MAAMtJ,0EAG1F,CAEA,IAAAkD,CAAK6F,EAAOyB,EAAQxK,EAAMsJ,IACJ,iBAAVkB,GAAwC,iBAAVA,GAAsBA,EAAS,IACvE5M,KAAKU,GAAG4K,mBAAmB,YAAatL,KAAKyO,QAAQtD,EAAO,0CAEtCyB,wCACCxK,8BAEnBsJ,EAEN,CAEA,OAAA1E,CAAQmE,EAAO/I,GACdpC,KAAKU,GAAG4K,mBAAmB,YAAatL,KAAKyO,QAAQtD,EAAO,oBAAsB/I,EAAO,UAC1F,CAEA,SAAAsM,CAAUvD,EAAOyB,EAAQxK,IACH,iBAAVwK,GAAwC,iBAAVA,GAAsBA,EAAS,IACvE5M,KAAKU,GAAG4K,mBAAmB,YAAatL,KAAKyO,QAAQtD,EAAQ,uBAAwB,4DAE3CyB,EAAS,6CAC1BxK,EAAO,6BAIlC,CAEA,SAAAmD,CAAU4F,EAAOwD,EAAO/H,EAAMsE,EAAO9I,EAAMwM,GAC1C5O,KAAKU,GAAG4K,mBAAmB,YAAatL,KAAKyO,QAAQtD,EAAQ,aAAc,kBAC7DvE,EAAO,+CACGgI,EAAQ,iDACKD,EAAQ,yCACpBvM,EAAO,sCACN8I,EAAQ,yBAGnC,CAEA,QAAAjF,CAASkF,EAAOD,EAAOjJ,GACtBjC,KAAKU,GAAG4K,mBAAmB,YAAatL,KAAKyO,QAAQtD,EAAQ,YAAa,+CAE3ClJ,EAAO,oCACbiJ,EAAQ,0BAGlC,CAEA,QAAA2D,CAAS1D,EAAOvE,EAAMsE,EAAO9I,EAAMwM,GAClC5O,KAAKU,GAAG4K,mBAAmB,YAAatL,KAAKyO,QAAQtD,EAAQ,YAAa,kBAC5DvE,EAAO,+CACGgI,EAAQ,wBACpBxM,EAAO,sCACO8I,EAAQ,yBAGnC,CAEA,QAAArD,CAASsD,EAAOjK,EAAIgK,EAAO9I,EAAMwM,GAChC,IAAIjI,EAAM,GACNzF,IAAIyF,EAAM,uBAAyBzF,EAAG6F,SAAS,KACnD/G,KAAKU,GAAG4K,mBAAmB,YAAatL,KAAKyO,QAAQtD,EAAQ,YAAa,+BAE3DxE,EAAM,kCAAoC,EAAW,iCAC5CiI,EAAQ,kCACVxM,EAAO,mCACH8I,EAAQ,2BAGnC,CAEA,kBAAM5C,CAAa6C,EAAOjK,EAAIgK,EAAO4D,GACpC,IAAI7M,EAAO,GACP6E,EAAMgI,EAAMhM,QAAU,EAAI,EAAIgM,EAAMhM,OACpCA,GAAS,QAAmB,GAEhC9C,KAAKiG,SAAS,GAAGkF,4BAAgCjK,IAAMgK,EAAO,mDAC9D,IAAK,IAAI5J,EAAQ,EAAGA,EAAQwF,EAAKxF,IAAS,CACzC,IAAIkC,EAAOsL,EAAMxN,GACbyN,QAAe/O,KAAK6E,QAAQtE,KAAKiD,EAAKtC,IAC1C,GAAI6N,EAAQ,CACX,IAAIhJ,EAAU,IAAI,EAAQvC,EAAKtC,GAAI6N,EAAQ,IAAIhJ,IAC9CA,EAAQrE,QAAS,IAAI,GACnBsC,MAAM,UACN/B,KAAK,aAAajC,KAAK6E,QAAQrD,UAAUuE,EAAQvC,KAAKtC,WACxD6E,EAAQ5B,MAAO,IAAI,GACjBH,MAAM,QACN/B,KAAK,GAAG8D,EAAQvC,KAAKY,gBACvB2B,EAAQhC,QAAS,IAAI,GACnBC,MAAM,SACN/B,KAAK,GAAGuB,EAAKI,SAEfmC,EAAQrF,GAAG2D,YAAY0B,EAAQrE,OAAOhB,IACtCqF,EAAQrF,GAAG2D,YAAY0B,EAAQ5B,KAAKzD,IACpCqF,EAAQrF,GAAG2D,YAAY0B,EAAQhC,OAAOrD,IACtCqF,EAAQrF,GAAGwD,aAAa,OAAQ,qBAAqB6B,EAAQvC,KAAKnC,YAAW,IAE9E0E,EAAQ9B,SACRhC,GAAQ8D,EAAQrF,GAAGsO,SACpB,MACClI,GAEF,CACA9G,KAAKU,GAAGyJ,cAAc,IAAIjJ,kBAAmBgB,UAAYD,EAG/C,mBAANf,GAAiC,OAANA,EAC9B,IAAOC,MAAK8K,IACXA,EAAGC,OAAOlM,KAAKU,GAAGyM,iBAAiB,IAAMjM,EAAK,cAAe,CAC5D+N,MAAO,GACPrD,QAAS,GACP,CACFqD,MAAO,EACPrD,QAAS,EACTE,KAAM,wBACND,SAAmB,EAAT/I,EAAa,EACvBoM,QAAS,CACRC,OAAQrM,EAAS,EACjBsM,KAAM,QAEL,GAEInD,KACLA,GACK,IAAchI,OAAO,CAC3BsI,QAASvM,KAAKU,GAAGyJ,cAAc,IAAMjJ,GACrCsL,MAAO,WACPC,IAAK,WACLC,UAAWT,EACXiB,cAAe,6BAIjB,IAAO/L,MAAK8K,IACXA,EAAGC,OAAOlM,KAAKU,GAAGyM,iBAAiB,IAAMjM,EAAK,cAAe,CAC5DkL,EAAG,GACHR,QAAS,GACP,CACFQ,EAAG,EACHR,QAAS,EACTC,SAAU/I,EACVgJ,KAAM,aACNoD,QAASpM,EAAS,GAChB,GAEImJ,KACLA,GACK,IAAchI,OAAO,CAC3BsI,QAASvM,KAAKU,GAAGyJ,cAAc,IAAMjJ,GACrCsL,MAAO,UACPC,IAAK,UACLC,UAAWT,EACXiB,cAAe,4BAInB,CAEA,MAAA7H,CAAOgK,EAAYC,EAAMxI,GACxB,IACIyI,EACArE,EACA9I,EACAoJ,EACAiD,EACAlB,EANArM,EAAKoO,EAAKpO,GAOV0K,EAAU,EACV/H,EAAWiD,EACX0I,EAAS,EACT7L,GAAS,EA0Cb,GAxCI2L,EAAKzL,UAAYiD,IACpBnD,GAAS,EACT6L,EAAS3L,EAAYyL,EAAKzL,SAAW,EACrC+H,EAAU,GAIN5L,KAAKiJ,KAAKkB,cAAc,IAAIjJ,QAChCqO,EAAQ1N,SAASC,cAAc,QACzBoC,aAAa,QAAS,UAE5BgH,EAAQrJ,SAASC,cAAc,QACzBE,UAAU7B,IAAI,SACpB+K,EAAMhJ,UAAYmN,GAElBjN,EAAOP,SAASC,cAAc,QACzBE,UAAU7B,IAAI,QACnBiC,EAAKiC,YAAYkL,GACjBnN,EAAKiC,YAAY6G,IAEjBM,EAAO3J,SAASC,cAAc,QACzBE,UAAU7B,IAAI,QACnBqL,EAAKnH,YAAYjC,IAEjBA,EAAOP,SAASC,cAAc,UACzBI,UAAY,WAEjBqL,EAAU1L,SAASC,cAAc,QACzBE,UAAU7B,IAAI,WACtBoN,EAAQlJ,YAAYjC,IAEpBqM,EAAU5M,SAASC,cAAc,QACzBE,UAAU7B,IAAI,aAAc,SAAU,kBAAmB,SAAUe,GAC3EuN,EAAQpK,YAAYmH,GACpBiD,EAAQpK,YAAYkJ,GAEpBvN,KAAKU,GAAG8D,sBAAsB,YAAaiK,KAIvC9K,IAAW2L,EAAK5L,SAAU,CAC9B,IAAI+L,EAAS3I,GAAOA,EAAM,GAAK,IAE/BwI,EAAKhL,SAAStE,KAAKU,GAAGyJ,cAAc,IAAIjJ,aAExC,KAAKuK,IAAI6D,EAAK5O,GAAI,CACjBgP,IAAKD,EAAS,IACd7D,QAAS,EACT4D,OAAQ,GAEV,CAEA,IAAK7L,IAAW2L,EAAK3L,OAAQ,CAC5B,IAAIgM,EAAa9L,GAAYiD,EAAM,GAAK,IACpChE,GAAS,QAAmB,GAEhC,KAAK8M,aAAaN,EAAK5O,IACvB,KAAKiL,GAAG2D,EAAK5O,GAAI,CAChBgP,IAAKC,EAAa,IAClB/D,QAASA,EACT4D,OAAQA,EACR3D,SAAU/I,EAAS,EACnBgJ,KAAM,aACN+D,WAAY,WACPlM,GACH2L,EAAK7K,SAEP,IAED6K,EAAK3L,OAASA,CACf,CAEA2L,EAAKnN,QACN,CAEA,aAAM2N,CAAQC,GACb,IAAIC,EAAsBtN,KAAKuN,OAAOjQ,KAAKgK,aAAehK,KAAKuJ,kBAAoBvJ,KAAKgK,aAAe,KAEvGhK,KAAKiK,KAAK5C,UAAU/B,KAAKyK,GACzB/P,KAAK0O,UAAU,0BAA2BsB,EAAqB,aAAeA,EAAsB,kHAAqHA,GAAuB,GAAM,wEAA0E,0EAEhUhQ,KAAKsF,KAAK,2BAA4BtF,KAAKyJ,gBAAiB,sFAAuF,QAAOzJ,KAAKyJ,gBAAiB,WAAa,QAC7LzJ,KAAKiK,KAAK5D,QAAQf,KAAKyK,GAEvB/P,KAAKiK,KAAKhC,SAAS3C,KAAKyK,GACxB/P,KAAKsF,KAAK,wBAAyBtF,KAAK2J,gBAAiB,sFAAuF,QAAO3J,KAAK2J,gBAAiB,QAAU,QAEvL3J,KAAKsF,KAAK,yBAA0BtF,KAAKwJ,cAAe,8EAA+E,QAAOxJ,KAAKwJ,cAAe,iBAAmB,QACrLxJ,KAAKsF,KAAK,oBAAqBtF,KAAKkJ,eAAgB,yFAA0F,QAAOlJ,KAAKkJ,eAAgB,WAAa,QACvLlJ,KAAKsF,KAAK,iBAAkBtF,KAAKsJ,WAAY,gGAAiG,QAAOtJ,KAAKsJ,WAAY,eAAiB,QAEvLtJ,KAAKsF,KAAK,sBAAuB,GAAGtF,KAAKgK,uBAAuBhK,KAAKwH,iBAAkB,+FAAgG,QAAOxH,KAAKwH,eAAgB,YAAc,iBAAkB,QAAOxH,KAAKgK,aAAc,SAAW,QACxRhK,KAAKsF,KAAK,yBAA0BtF,KAAKqJ,YAAa,iFAAkF,QAAOrJ,KAAKqJ,YAAa,QAAU,QAEvKrJ,KAAK4J,cAAc9G,OAAS,GAAG9C,KAAKsI,aAAa,SAAU,QAAS,2GAA4GtI,KAAK4J,cAAczE,KAAKnF,KAAKiK,KAAK9E,OAClNnF,KAAK0J,eAAe5G,OAAS,GAAG9C,KAAKsI,aAAa,SAAU,YAAa,wHAAyHtI,KAAK0J,eAAevE,KAAKnF,KAAKiK,KAAK9E,MAC1O,GCtdD,EAjGA,MACC,WAAApF,CAAYkJ,GACXjJ,KAAK4D,MAAQ,EACb5D,KAAKkQ,WAAa,EAClBlQ,KAAK+D,QAAU,EACf/D,KAAKmQ,OAAQ,EACbnQ,KAAKiJ,KAAOA,EACZjJ,KAAKgF,OAAShF,KACdA,KAAKoQ,WAAa,WAAc,OAAOpQ,KAAK4D,OAAS5D,KAAK+D,MAAO,CAClE,CAEA,IAAAuB,CAAK+K,GACJ,OAAO,IAAIC,SAAQC,IAClB,IAAIzN,GAAS,QAAmB,GAChC9C,KAAKkQ,WAAaG,EAEbrQ,KAAKiJ,KAAKkB,cAAc,mCAC5BnK,KAAKgF,OAAOL,WAAWW,KAAK,qBAAsB+K,EAAO,IAAK,8BAAgCrQ,KAAK8E,KAAO,6HAI3G,IAAIgI,EAAO,CAAEC,SAAU/M,KAAKkQ,YAC5B,KAAKvE,GAAGmB,EAAM,CACbC,SAAUrK,KAAKuN,MAAMI,GACrBrD,KAAM,WACNlB,KAAM,SACND,SAAU/I,EAAS,EACnBmK,SAAU,KACT,IAAIvM,EAAKV,KAAKiJ,KAAKkB,cAAc,4BAC7BzJ,IAAIA,EAAGwB,UAAY4K,EAAKC,SAAW,MAExC8C,WAAY5K,UACPjF,KAAKmQ,aAAanQ,KAAKwQ,OAC3BD,GAAQ,GAET,GAEH,CAEA,UAAME,CAAK3N,GACV9C,KAAKmQ,OAAQ,EACbnQ,KAAK+D,OAASjB,QACR9C,KAAKsF,KAAK,EACjB,CAEA,YAAMnD,CAAOuO,EAAOjN,GACnB,IAAI/C,EAAKV,KAAKiJ,KAAKkB,cAAc,8BAC7BuG,GAAShQ,IAAIA,EAAGwB,UAAYwO,GAE5B1Q,KAAK+D,QAAU,IAClB/D,KAAK4D,MAAQH,GAAgBzD,KAAK4D,MAAQ,QACpC5D,KAAKsF,KAAK5C,KAAKuN,MAAajQ,KAAK4D,MAAQ5D,KAAK+D,OAAzB,MAE7B,CAEA,gBAAM4M,GACD3Q,KAAK+D,QAAU,IAClB/D,KAAK4D,QACD5D,KAAK4D,OAAU5D,KAAK+D,OAAS,KAAK/D,KAAK4D,MAAS5D,KAAK+D,OAAS,UAC5D/D,KAAKsF,KAAYtF,KAAK4D,MAAQ5D,KAAK+D,OAAzB,KAElB,CAEA,eAAM6M,GACL5Q,KAAK4D,MAAQ5D,KAAK+D,aACZ/D,KAAKsF,KAAK,IACjB,CAEA,IAAAkL,GACC,OAAO,IAAIF,SAAQC,IAClB,IAAIzN,GAAS,QAAmB,GAEhC,GAAI9C,KAAKoQ,aAAc,CACtB,IAAI1P,EAAKV,KAAKiJ,KAAKkB,cAAc,kCACjCnK,KAAKmQ,OAAQ,EACTzP,GACH,KAAKiL,GAAGjL,EAAI,CACXkL,QAAS,EACTiF,MAAO,EACPxD,OAAQ,EACRyD,QAAS,EACTC,OAAQ,EACRC,SAAU,SACVnF,SAAU/I,EAAS,EACnBgJ,KAAM,aACN+D,WAAY,KACXnP,EAAGgE,SACH,IAAO8I,UACP+C,GAAQ,GAIZ,MAAOA,GAAQ,GAEjB,GCnGD,MAAM,EACL,WAAAxQ,CAAYkJ,GACXjJ,KAAKiJ,KAAOA,CACb,CAEA,OAAAgI,CAAQhF,GACP,IAAInJ,EAASoO,mBAAmB,GA4BhC,OA1BAjF,EAAGC,OAAOlM,KAAKiJ,KAAKkE,iBAAiB,2DAA4D,CAChGf,EAAwB,EAArBC,OAAOC,YAAkB,GAC1B,CACFF,EAAG,EACHN,KAAM,SACND,SAAmB,EAAT/I,GACR,GACHmJ,EAAGC,OAAOlM,KAAKiJ,KAAKkE,iBAAiB,2CAA4C,CAChFvB,QAAS,GACP,CACFA,QAAS,EACTsD,QAAS,CACRE,KAAM,MACND,OAAQrM,EAAS,IAElB+I,SAAU/I,EACVgJ,KAAM,aACJ,GACHG,EAAGC,OAAOlM,KAAKiJ,KAAKkE,iBAAiB,kBAAmB,CACvDvB,QAAS,GACP,CACFA,QAAS,EACTC,SAAU/I,EACVgJ,KAAM,aACK,EAAThJ,EAAa,IAETmJ,CACR,CAEA,UAAAtH,GAEC,EAAOxD,MAAK8K,GAAMjM,KAAKiR,QAAQhF,KAAKA,GAAMkF,cAAclN,OAAO,CAC9DsI,QAASvM,KAAKiJ,KAAKkE,iBAAiB,eACpCX,MAAO,SAAWH,OAAOC,YAAc,KACvCG,IAAK,SACLC,UAAWT,EACXU,MAAO,MAET,CAEA,UAAAyE,GAEC,EAAOjQ,MAAM8K,IACZA,EAAGC,OAAOlM,KAAKiJ,KAAKkE,iBAAiB,oBAAqB,CACzDf,EAAG,GACD,CACFA,GAAyB,EAAtBC,OAAOC,YAAmB,EAC7BR,KAAM,UACJ,GACHG,EAAGC,OAAOlM,KAAKiJ,KAAKkE,iBAAiB,2BAA4B,CAChEf,EAAG,EACHgB,EAAG,EACHiE,SAAU,GACR,CACFjF,GAAyB,EAAtBC,OAAOC,YAAmB,EAC7Bc,GAAyB,EAAtBf,OAAOC,YAAmB,GAC7B+E,UAAW,GACXvF,KAAM,UACJ,GACHG,EAAGC,OAAOlM,KAAKiJ,KAAKkE,iBAAiB,2BAA4B,CAChEf,EAAG,EACHgB,EAAG,EACHiE,SAAU,GACR,CACFjF,GAAyB,EAAtBC,OAAOC,YAAmB,EAC7Bc,EAAwB,EAArBf,OAAOC,YAAkB,GAC5B+E,SAAU,GACVvF,KAAM,UACJ,GACIG,KACJA,GACIkF,cAAclN,OAAO,CAC3BsI,QAASvM,KAAKiJ,KAAKkE,iBAAiB,eACpCX,MAAO,MACPC,IAAK,SACLC,UAAWT,EACXU,MAAO,OAGT,EAAOxL,MAAM8K,GACPjM,KAAKiR,QAAQhF,KAEfA,GACIkF,cAAclN,OAAO,CAC3BsI,QAASvM,KAAKiJ,KAAKkE,iBAAiB,eACpCX,MAAO,MACPC,IAAK,SACLC,UAAWT,EACXU,MAAO,MAGV,CAEA,IAAA2E,GAEC,EAAOnQ,MAAK8K,GAAMA,IAAIA,GACdkF,cAAclN,OAAO,CAC3BsI,QAAS,OACTC,MAAO,MACPC,IAAK,SACLC,UAAWT,EACXgB,SAAU9K,IACT,IAAIoP,EAAM,+BACNC,EAAMD,EAAM,gBAEZpP,EAAOsP,UAAY,GACtBC,KAAK9B,aAAa+B,MAAMH,IACxBE,KAAK/F,GAAGgG,MAAMJ,GAAM,CAAEnF,GAAI,IAAKR,QAAS,IACxC8F,KAAK/F,GAAGgG,MAAM,eAAgB,CAAEvF,EAAG,IAAKR,QAAS,KAEjD8F,KAAK/F,GAAGgG,MAAMH,GAAM,CAAEpF,EAAG,EAAGR,QAAS,GACtC,KAIJ,CAEA,UAAAgG,CAAWC,GAAQ,GACdA,GACH,EAAO1Q,MAAM8K,GACLA,IACJA,GACIkF,cAAclN,OAAO,CAC3BsI,QAAS,SACTC,MAAO,MACPC,IAAK,YACLC,UAAWT,EACXU,OAAO,EACPmF,QAAS,KACR9R,KAAK+R,aAAa,QAAO,EAE1BC,YAAa,KACZhS,KAAK+R,aAAa,QAAO,MAI5B,EAAO5Q,MAAM8K,GACLA,IACJA,GACIkF,cAAclN,OAAO,CAC3BsI,QAAS,cACTC,MAAO,MACPC,IAAK,YACLC,UAAWT,EACXU,OAAO,EACPmF,QAAS,KACR9R,KAAK+R,aAAa,SAAQ,EAE3BE,QAAS,KACRjS,KAAK+R,aAAa,QAAO,EAE1BC,YAAa,KACZhS,KAAK+R,aAAa,QAAO,OAK5B,EAAO5Q,MAAM8K,GACLA,IACJA,GACIkF,cAAclN,OAAO,CAC3BsI,QAAS,cACTC,MAAO,MACPC,IAAK,YACLC,UAAWT,EACXU,OAAO,EACPmF,QAAS,KACR9R,KAAK+R,aAAa,SAAQ,EAE3BC,YAAa,KACZhS,KAAK+R,aAAa,QAAO,KAK9B,EAGD,QC0kBA,EApvBA,MACC,WAAAhS,CAAY+E,GAEX9E,KAAKiJ,KAAOpH,SAASC,cAAc,OAEnC9B,KAAK+P,OAAS,GAEd/P,KAAK4E,GAAK,CAAC,EAEX5E,KAAK6E,QAAU,IAAI,EAEnB7E,KAAK2E,WAAa,IAAI,EAEtB3E,KAAKoL,QAAU,IAAI,EAEnBpL,KAAKkS,OAAS,IAAI,EAAYlS,KAAKiJ,MAGnCjJ,KAAK8E,KAAOA,EACZ9E,KAAKmS,UAAYnS,KAAK8E,KAAO,kBAC7B9E,KAAKoS,QAAU,IAAIxP,KAAM5C,KAAK8E,KAAO,EAAK,mBAC1C9E,KAAKqS,KAAO,MACZrS,KAAKsS,SAAW,GACjB,CAGA,gBAAAC,CAAiBC,GAoBhB,MAnBsB,iBAAX,GAAuBA,EAAM1P,QAAU,EAC7B,GAAhB0P,EAAM1P,QACT2P,EAAA,EAASC,iBAAmBF,EAAM,GAClCC,EAAA,EAASE,kBAAoBH,EAAM,KAEnCC,EAAA,EAASC,iBAAmBF,EAAM,GAClCC,EAAA,EAASE,kBAAoBH,EAAM,IAEjB,SAATA,GACVC,EAAA,EAASC,iBAAmB,UAC5BD,EAAA,EAASE,kBAAoB,WACV,UAATH,GACVC,EAAA,EAASC,iBAAmB,UAC5BD,EAAA,EAASE,kBAAoB,YAE7BF,EAAA,EAASC,iBAAmB,UAC5BD,EAAA,EAASE,kBAAoB,WAGvB,CAACF,EAAA,EAASE,kBAAmBF,EAAA,EAASC,iBAC9C,CACA,YAAAX,CAAaS,EAAO3G,EAAUC,GAC7B9L,KAAKuS,iBAAiBC,GACtBC,EAAA,EAASG,YAAY/G,EAAUC,EAChC,CAIA,aAAA+G,CAAc5G,GACb,IAAIhD,EAAOjJ,KAAKiJ,KACZnG,GAAS,QAAmB,GA+BhC,OA7BA9C,KAAK+R,aAAa,QAAS,GAC3B9F,EAAGC,OAAOjD,EAAKkE,iBAAiB,eAAgB,CAC/CtJ,SAAU,QACVqK,QAAS,GACTtC,QAAS,EACT8D,IAAK,GACH,CACF9D,QAAS,EACTC,SAAU/I,EACVgJ,KAAM,cAEPG,EAAGC,OAAOjD,EAAKkE,iBAAiB,yBAA0B,CACzDe,QAAS,GACT9B,EAAG,IACHR,QAAS,GACP,CACFQ,EAAG,EACHR,QAAS,EACTsD,QAASpM,EAAS,EAClB+I,SAAU/I,EACVgJ,KAAM,aACN+D,WAAY,KACX,KAAKpE,IAAIxC,EAAKkE,iBAAiB,eAAgB,CAC9CtJ,SAAU,GACV6L,IAAK,IACJ,GAED,KAAQ5M,EAAS,GAEbmJ,CACR,CACA,aAAA6G,CAAc7G,GACb,IAAIhD,EAAOjJ,KAAKiJ,KACZnG,GAAS,QAAmB,GAqChC,OAnCAmJ,EAAGR,IAAIxC,EAAKkE,iBAAiB,eAAgB,CAC5CtJ,SAAU,QACV6L,IAAK,IAENzD,EAAGC,OAAOjD,EAAKkE,iBAAiB,2CAA4C,CAC3Ef,EAAG,EACHR,QAAS,GACP,CACFQ,EAAG,IACHR,QAAS,EACTsD,QAAS,CACRE,KAAM,MACND,OAAQrM,EAAS,GAElB+I,SAAU/I,EACVgJ,KAAM,YACN+D,WAAY,KACX7P,KAAK+R,aAAa,SAAS,IAG7B9F,EAAGC,OAAOjD,EAAKkE,iBAAiB,eAAgB,CAC/CvB,QAAS,GACP,CACFA,QAAS,EACTC,SAAU/I,EACVgJ,KAAM,YACN+D,WAAY,KACX,KAAKpE,IAAIxC,EAAKkE,iBAAiB,eAAgB,CAC9CtJ,SAAU,GACVqK,QAAS,OACTwB,IAAK,IACH,IAAI,GAEN,KAAQ5M,EAAS,GAEbmJ,CACR,CAEA,kBAAA8G,GACC,OAAO,IAAIzC,SAAQC,IAClB,IAAItH,EAAOjJ,KAAKiJ,KACZnG,GAAS,QAAmB,GAC5BmJ,EAAK,KAAK+G,WAEd/G,EAAGC,OAAOjD,EAAKkE,iBAAiB,UAAW,CAC1Ce,QAAS,GACTtC,QAAS,GACP,CACFA,QAAS,EACTE,KAAM,YACND,SAAU/I,EACVmQ,QAAS,IAAMjT,KAAK+R,aAAa,QAAS,KACxCjP,EAAS,GACZmJ,EAAGC,OAAOjD,EAAKkE,iBAAiB,sBAAuB,CACtDe,QAAS,GACTtC,QAAS,EACTQ,EAAG,KACD,CACFR,QAAS,EACTQ,EAAG,EACHP,SAAU/I,EACVoM,QAASpM,EAAS,EAClBgJ,KAAM,cACJhJ,EAAS,GACZmJ,EAAGC,OAAOjD,EAAKkE,iBAAiB,wDAAyD,CACxFe,QAAS,GACTtC,QAAS,EACTQ,EAAG,KACD,CACFR,QAAS,EACTQ,EAAG,EACHP,SAAU/I,EACVoM,QAASpM,EAAS,EAClBgJ,KAAM,cACJhJ,EAAS,GACZmJ,EAAGC,OAAOjD,EAAKkE,iBAAiB,mCAAoC,CACnEe,QAAS,GACTtC,QAAS,GACP,CACFA,QAAS,EACTC,SAAU/I,EAAS,EACnB+M,WAAY,IAAMU,KAChBzN,EAAS,EAAE,GAEhB,CACA,kBAAAoQ,GACC,OAAO,IAAI5C,SAAQrL,UAClB,IAAIgE,EAAOjJ,KAAKiJ,KACZnG,GAAS,QAAmB,GAC5BmJ,EAAK,KAAK+G,iBAERG,EAAA,EAAQzD,IAAIzG,GAElBgD,EAAGC,OAAOjD,EAAKkE,iBAAiB,wFAAyF,CACxHvB,QAAS,EACTQ,EAAG,GACD,CACFR,QAAS,EACTQ,EAAG,IACHP,SAAU/I,EACVoM,QAAS,CACRE,KAAM,MACND,OAAQrM,EAAS,GAElBgJ,KAAM,aACJhJ,EAAS,GACZmJ,EAAGR,IAAIxC,EAAKkE,iBAAiB,mCAAoC,CAChEvB,QAAS,GACP9I,EAAS,GACZmJ,EAAGC,OAAOjD,EAAKkE,iBAAiB,UAAW,CAC1CvB,QAAS,GACP,CACFA,QAAS,EACTC,SAAU/I,EACVgJ,KAAM,YACN+D,WAAY,KACX,KAAKpE,IAAIxC,EAAKkE,iBAAiB,UAAW,CAAEe,QAAS,SACrDqC,GAAS,GAERzN,EAAS,EAAE,GAEhB,CAGA,OAAA9B,CAAQA,EAASoS,GAChB,IAEIC,EAFOrT,KAAKiJ,KAEQkB,cAAc,kBAElCiJ,EACHC,EAAanR,UAAYlB,EAEzB,KAAK2K,GAAG0H,EAAc,CACrBzH,QAAS,EACTiE,WAAY,WACXwD,EAAanR,UAAYlB,EACzB,KAAK2K,GAAG0H,EAAc,CACrBzH,QAAS,GAEX,GAGH,CAGA,mBAAM0H,GACL,IAAIrH,EAAK,KAAK+G,WAEdpS,EAAA,EAAI2S,cAGEvT,KAAKkT,mBAAmBjH,SAGxBrL,EAAA,EAAIC,KAAK,iBACfb,KAAK2E,WAAWmG,QAGhBlK,EAAA,EAAIkK,QAGJ9K,KAAK6R,QAEL,IAAOrE,SACR,CAGA,kBAAMgG,CAAapR,GAClB,IAAI6G,EAAOjJ,KAAKiJ,KACZnG,GAAS,QAAmB,GAC5B2Q,EAAYxK,EAAKkB,cAAc,aACnCsJ,EAAUpR,YAAc,sBAExB,IAAI4J,EAAK,KAAK+G,WACd/G,EAAGC,OAAOjD,EAAKkE,iBAAiB,oBAAqB,CACpDe,QAAS,GACT9B,EAAG,IACHR,QAAS,GACP,CACFQ,EAAG,EACHR,QAAS,EACTC,SAAU/I,EACVgJ,KAAM,cACJhJ,GACHmJ,EAAGC,OAAOjD,EAAKkE,iBAAiB,kCAAmC,CAClEe,QAAS,GACT9B,EAAG,GACHR,QAAS,GACP,CACFQ,EAAG,EACHR,QAAS,EACTsD,QAASpM,EAAS,GAClB+I,SAAU/I,EACVgJ,KAAM,cACJhJ,GAEHlC,EAAA,EAAIC,KAAK,kBAAkB6S,MAAKzT,IAC3BmC,EACHpB,QAAQoB,IAERqR,EAAUpR,YAAc,eACxBoR,EAAUvP,aAAa,OAAQtD,EAAA,EAAI+F,IAAM,aAAe1G,EAAKe,QAAQ2F,KACtE,IACE,KACF3F,QAAQ,mFAAmF,IAGvFoB,IAAM6G,EAAKkB,cAAc,oBAAoBgB,MAAM+C,QAAU,OACnE,CAGA,wBAAMyF,GACL,IAAI5N,EAAU/F,KAAK4E,GACfqE,EAAOjJ,KAAKiJ,KACZ2K,EAAQ,GACR9Q,GAAS,QAAmB,GAG5BuP,EAAoC,IAA5BtM,EAAQ8N,YAAYC,MAAe/N,EAAQ8N,YAAYxB,KAC/DhL,EAAY3E,KAAKuN,MAAMlK,EAAQyB,eAAiB6K,GASpD,GAPApJ,EAAKkB,cAAc,kBAAkBjI,UAAY,aAAe6D,EAAQgO,WAAa,OACpE,MAAb/T,KAAK8E,KAAcmE,EAAKkB,cAAc,gBAAgBjI,UAAY,aAAe6D,EAAQ3B,aAAe,uDAAyDpE,KAAK8E,KAAO,mGAC3J,MAAb9E,KAAK8E,KAAcmE,EAAKkB,cAAc,gBAAgBjI,UAAY,aAAe6D,EAAQ3B,aAAe,6JAC5G6E,EAAKkB,cAAc,gBAAgBjI,UAAY,aAAe6D,EAAQ3B,aAAe,2IAG1FpE,KAAK2E,WAAWuG,MAAM,WAAY,WAC9BnF,EAAQ8N,YAAYC,OAAS/N,EAAQ8N,YAAYxB,KAAM,CAC1DrS,KAAK2E,WAAWW,KAAK,0BAA2B5C,KAAKuN,MAAMlK,EAAQiE,aAAeqI,GAAO,oGAAqG,QAAO3P,KAAKuN,MAAMlK,EAAQiE,aAAeqI,GAAO,SAAW,gBAIhOuB,EAArBvM,GADS,GACoB,sCAAuC,QAAO3E,KAAKuN,MADvE,GACsF5I,GAAY,QAAU,OAC5G,sCAAuC,QAAO3E,KAAKuN,MAAM+D,IAAc3M,GAAY,UAAY,OAC5GrH,KAAK2E,WAAWW,KAAK,yBAA0B+B,EAAW,uGAAwG,QAAOA,EAAW,QAAU,iBAAmBuM,EAAQ,0BAEzN,IAAIK,EAAO,IAAIrR,KAAKmD,EAAQmO,WAC5BlU,KAAK2E,WAAWW,KAAK,+BAAgC,cAAgB,KAAW2O,EAAKE,YAAc,WAAaF,EAAKG,cAAgB,qBAAuBH,EAAKI,UAAY,QAAS,sBAAuB,QAAOtO,EAAQ8N,YAAYC,MAAO,QAAU,gBAAiB,QAAO/N,EAAQ8N,YAAYxB,KAAM,OAAS,YACpTrS,KAAK2E,WAAWW,KAAK,0BAA2BS,EAAQuO,OAAOxR,OAAQ,+EAAgF,QAAOiD,EAAQuO,OAAOxR,OAAQ,SAAW,iBACjM,MACC9C,KAAK2E,WAAWW,KAAK,GAAI,IAAK,mCAC9BtF,KAAK2E,WAAWW,KAAK,GAAIS,EAAQuO,OAAOxR,OAAQ,2BAA4B,QAAOiD,EAAQuO,OAAOxR,OAAQ,SAAW,kBAItH,IAAO3B,MAAK8K,IACXA,EAAGC,OAAOjD,EAAKkE,iBAAiB,gCAAiC,CAChEf,EAAG,GACD,CACFA,GAAyB,EAAtBC,OAAOC,YAAmB,EAC7BR,KAAM,SACND,SAAU/I,GACR,GACHmJ,EAAGC,OAAOjD,EAAKkE,iBAAiB,sBAAuB,CACtDf,EAAG,EACHgB,EAAG,EACHiE,SAAU,GACR,CACFjF,GAAyB,EAAtBC,OAAOC,YAAmB,EAC7Bc,GAAyB,EAAtBf,OAAOC,YAAmB,GAC7B+E,UAAW,GACXvF,KAAM,SACND,SAAU/I,GACR,GACHmJ,EAAGC,OAAOjD,EAAKkE,iBAAiB,sBAAuB,CACtDf,EAAG,EACHgB,EAAG,EACHiE,SAAU,GACR,CACFjF,GAAyB,EAAtBC,OAAOC,YAAmB,EAC7Bc,EAAwB,EAArBf,OAAOC,YAAkB,GAC5B+E,SAAU,GACVvF,KAAM,SACND,SAAU/I,GACR,GACHmJ,EAAGC,OAAOjD,EAAKkE,iBAAiB,qBAAsB,CACrDf,EAAG,EACHR,QAAS,GACP,CACFQ,EAAwB,EAArBC,OAAOC,YAAkB,EAC5BV,QAAS,EACTE,KAAM,SACND,SAAU/I,EAAS,GACjB,GACImJ,KACLA,GAAM,IAAchI,OAAO,CAC7BsI,QAAStD,EAAKkE,iBAAiB,UAC/BX,MAAO,MACPC,IAAK,SACLC,UAAWT,EACXU,OAAO,MAER,IAAOa,SACR,CAEA,uBAAM+G,GACLvU,KAAK2E,WAAWuG,MAAM,YAAa,YACnClL,KAAK2E,WAAWW,KAAK,qCAAsC,GAAI,0DAA4DtF,KAAK8E,KAAO,0CAEvI9E,KAAKoL,QAAU,IAAI,EAAQpL,KAAKiJ,MAChCjJ,KAAKoL,QAAQqF,KAAKzQ,KAAKsS,UAGvB,IAAIkC,EAAcvP,MAAOwP,IACxBA,EAAWA,EAAe,WAAaA,EAAlB,GAErB,IAAIxU,QAAaW,EAAA,EAAIC,KAAK,yBAA2B4T,EAAQ,GAC7D,GAAIxU,EAAKa,QAIR,GAHAd,KAAK6E,QAAQ1E,IAAIF,EAAKe,QAAQ0T,aAC9B1U,KAAK+P,OAAS/P,KAAK+P,OAAO4E,OAAO1U,EAAKe,QAAQ+O,QAE1C9P,EAAKe,QAAQ+O,OAAOjN,OAAS,EAAG,CACnC,IAAI8R,EAAa,IAAIhS,KAAK5C,KAAK+P,OAAO/P,KAAK+P,OAAOjN,OAAS,GAAGiF,QAE9D,GAAI6M,GAAc5U,KAAKoS,QACtBpS,KAAKoL,QAAQjJ,OAAO,aAAe,KAAWyS,EAAWT,YAAc,IAAMS,EAAWR,cAAepU,KAAKsS,SAAW5P,KAAKC,OAAOiS,EAAa5U,KAAKoS,SAAWpS,KAAKqS,aAG/JmC,EAAYvU,EAAKe,QAAQyT,YACzB,CACN,KAAOG,EAAa5U,KAAKoS,SAAWpS,KAAK+P,OAAOjN,OAAS,GACxD9C,KAAK+P,OAAO1M,MACZuR,EAAa,IAAIhS,KAAK5C,KAAK+P,OAAO/P,KAAK+P,OAAOjN,OAAS,GAAGiF,cAErD/H,KAAKoL,QAAQwF,WACpB,CACD,YACO5Q,KAAKoL,QAAQwF,iBAGpB5Q,KAAKsT,eACN,QAEKkB,EAAYxU,KAAKmS,WAGvB,IAAI0C,EAAsB,EAC1B,GAAI7U,KAAK+P,OAAOjN,OAAS,EAAG,CAE3B9C,KAAK2E,WAAWqF,aAAe,EAC/BhK,KAAK+P,OAAOzF,SAAQwK,IAGnB,GADIA,EAAMC,WAAW/U,KAAK2E,WAAWkF,kBACjCiL,EAAMnN,UAAY3H,KAAK4E,GAAG1D,IAuB7B,GAtBAlB,KAAK2E,WAAWqF,eAChBhK,KAAK2E,WAAW8E,iBAAmBqL,EAAME,WAAWlS,OACpD9C,KAAK2E,WAAW+E,eAAiB1J,KAAK2E,WAAWoG,UAAU/K,KAAK2E,WAAW+E,eAAgBoL,EAAME,YACjGhV,KAAK2E,WAAWgF,iBAAmBmL,EAAMG,SAASnS,OAClD9C,KAAK2E,WAAWiF,cAAgB5J,KAAK2E,WAAWoG,UAAU/K,KAAK2E,WAAWiF,cAAekL,EAAMG,UAC3FH,EAAMI,WAAWlV,KAAK2E,WAAWuE,iBACjC4L,EAAMK,QAAOnV,KAAK2E,WAAW0E,aAAeyL,EAAMK,OAClDL,EAAMM,MAAMpV,KAAK2E,WAAW2E,aAC3BwL,EAAMtN,gBAAgBxH,KAAK2E,WAAW4E,mBACnB,GAApBuL,EAAMlN,YAAiB5H,KAAK2E,WAAW6E,gBAC3CxJ,KAAK2E,WAAW6C,gBAAkBsN,EAAMtN,eAEpCsN,EAAMzM,YAAY7B,SAAS,kBAAkBxG,KAAK2E,WAAW0Q,sBAC7DP,EAAMzM,YAAY7B,SAAS,iBACtBsO,EAAMzM,YAAY7B,SAAS,cADYxG,KAAK2E,WAAW2Q,mBAE5DR,EAAMzM,YAAY7B,SAAS,gBAAgBxG,KAAK2E,WAAW4Q,kBAC3DT,EAAMzM,YAAY7B,SAAS,eAAexG,KAAK2E,WAAW6Q,iBAC1DV,EAAMzM,YAAY7B,SAAS,eAAexG,KAAK2E,WAAW8Q,iBAC1DX,EAAMzM,YAAY7B,SAAS,cAAcxG,KAAK2E,WAAW+Q,gBACzDZ,EAAMzM,YAAY7B,SAAS,gBAAgBxG,KAAK2E,WAAWgR,iBAG3Db,EAAMc,UAAW,CACpB,IAAIpO,EAAiBsN,EAAMe,KAAK3Q,SAASsC,eACzCxH,KAAK2E,WAAWwE,aAChBnJ,KAAK2E,WAAWyE,sBAAwB5B,EAEpCqN,EAAsBrN,IACzBqN,EAAsBrN,EACtBxH,KAAK2E,WAAWmR,mBAAqBhB,EAEvC,OACUA,EAAMC,WAAW/U,KAAK2E,WAAWmF,uBAAuB,IAIpE9J,KAAK+P,OAAO5K,MAAK,CAACmC,EAAGC,IAAM,IAAI3E,KAAK2E,EAAEQ,QAAU,IAAInF,KAAK0E,EAAES,UAG3D,UACO/H,KAAK2E,WAAWmL,QAAQ9P,KAAK+P,OACpC,CAAE,MAAOpH,GACRJ,QAAQC,KAAK,kCAAmCG,EACjD,CAGA3I,KAAK+V,2BACN,MACC,GAAI/V,KAAK+P,OAAO,GAAI,CACnB,IAAIiG,EAAO,IAAIpT,KAAKkS,MAAM,GAAG/M,QAC7B/H,KAAK2E,WAAWuF,SAAS5E,KAAKwP,MAAM,GAAIkB,EAAK5B,cAC9C,MACKpU,KAAK2E,WAAWuF,SAASlB,OAEhC,CAEA,+BAAM+M,GAWL,IAAK,IAAIjB,KATT9U,KAAK2E,WAAWuG,MAAM,aAAc,aACpClL,KAAK2E,WAAWW,KAAK,sCAAuC,GAAI,8BAAgCtF,KAAK8E,KAAO,+LAG5G9E,KAAKoL,QAAU,IAAI,EAAQpL,KAAKiJ,MAChCjJ,KAAKoL,QAAQqF,KAAKzQ,KAAK+P,OAAOjN,QAG9B9C,KAAK+P,OAAO5K,MAAK,CAACmC,EAAGC,IAAM,IAAI3E,KAAK0E,EAAES,QAAU,IAAInF,KAAK2E,EAAEQ,UACzC/H,KAAK+P,QAAQ,CAC9B,IAAIiG,EAAO,IAAIpT,KAAKkS,EAAM/M,QAO1B,GANA/H,KAAKoL,QAAQjJ,OAAO,aAAe,KAAW6T,EAAK7B,YAAc,IAAM6B,EAAK5B,qBAGtEpU,KAAK2E,WAAWsF,KAAKnB,SAASgM,GAGhCA,EAAMtN,eAAiB,IAAMsN,EAAMC,WAAaD,EAAMnN,UAAY3H,KAAK4E,GAAG1D,IAAK,CAClF,IAAIP,QAAeC,EAAA,EAAIC,KAAK,6BAA+BiU,EAAMhN,UACjE,IAAInH,EAAOG,QAaJ,CACNd,KAAKsT,gBACL,KACD,CAhBoB,IAAK,IAAItS,KAAWL,EAAOK,QAK9C,IAAK,IAAIkE,KAHTlF,KAAK6E,QAAQ1E,IAAIa,EAAQ6D,SAGJ7D,EAAQqG,iBAEtBrH,KAAK2E,WAAWsF,KAAKlF,WAAWnB,MAAMsB,GAC5ClF,KAAK2E,WAAWsF,KAAK9B,YAAYvE,MAAMsB,GACvClF,KAAK2E,WAAWsF,KAAKxB,IAAI7E,MAAMsB,EAAU,kBAEnClF,KAAK2E,WAAWsF,KAAKnB,SAAS5D,EAMvC,CACD,CAGAlF,KAAK2E,WAAWsF,KAAK9D,MAAMU,YAE3B7G,KAAK2E,WAAWsF,KAAK9D,MAAMc,WAO3BjH,KAAK2E,WAAWsF,KAAK9B,YAAY7C,OAMjCtF,KAAK2E,WAAWsF,KAAK/C,MAAM5B,OAG3BtF,KAAK2E,WAAWsF,KAAK/D,SAASZ,OAG9BtF,KAAK2E,WAAWsF,KAAKjE,YAAYV,OAGjCtF,KAAK2E,WAAW+E,eAAeY,SAAQ7G,IACtCzD,KAAK2E,WAAWsF,KAAKxB,IAAI7E,MAAM,CAAEpD,QAASiD,EAAMvC,GAAI0C,MAAOH,EAAMG,OAAS,UAAU,IAErF5D,KAAK2E,WAAWiF,cAAcU,SAAQ7G,IACrCzD,KAAK2E,WAAWsF,KAAKxB,IAAI7E,MAAM,CAAEpD,QAASiD,EAAMvC,GAAI0C,MAAOH,EAAMG,OAAS,WAAW,IAEtF5D,KAAK2E,WAAWsF,KAAKxB,IAAInD,OAGzB,IAAI2Q,EAAS,yEACS,GAAlBjW,KAAK4E,GAAGqR,SAAaA,EAAS,wEACZ,GAAlBjW,KAAK4E,GAAGqR,SAAaA,EAAS,yEAElC,IAAIC,EAAS,wEACS,GAAlBlW,KAAK4E,GAAGqR,SAAaC,EAAS,+FACZ,GAAlBlW,KAAK4E,GAAGqR,SAAaC,EAAS,iGAElC,IAAIC,EAAW,yEACO,GAAlBnW,KAAK4E,GAAGqR,SAAaE,EAAW,qEACd,GAAlBnW,KAAK4E,GAAGqR,SAAaE,EAAW,uEAEpC,IAAIpQ,EAAU,0EACQ,GAAlB/F,KAAK4E,GAAGqR,SAAalQ,EAAU,wEACb,GAAlB/F,KAAK4E,GAAGqR,SAAalQ,EAAU,0EAEnC/F,KAAK2E,WAAWuG,MAAM,iBAAkB,iBACxClL,KAAK2E,WAAW4G,KAAK,0OAImB0K,ifASpC,6BACAjW,KAAK2E,WAAWwE,YAAc,GAAGnJ,KAAK2E,WAAWW,KAAK,8CAA+C,mFAAoF,mBAAqB2Q,EAAS,aACvNjW,KAAK2E,WAAW0E,aAAe,GAAGrJ,KAAK2E,WAAWW,KAAK,8CAA+C,iEAAkE,4CACxKtF,KAAK2E,WAAWsF,KAAK/C,MAAMC,OAAS,KAAOnH,KAAK2E,WAAWW,KAAK,kDAAmD,wEAAyE,6BAC5LtF,KAAK2E,WAAWsF,KAAK/C,MAAME,OAAS,KAASpH,KAAK2E,WAAWW,KAAK,kDAAmD,qEAAsE,qCAC3LtF,KAAK2E,WAAWsF,KAAK9D,MAAMC,KAAKtD,QAAU,KAAK9C,KAAK2E,WAAWW,KAAK,8CAA+C,gEAAiE,8BACpLtF,KAAK2E,WAAWsF,KAAK9D,MAAMA,MAAMrD,QAAU,KAAS9C,KAAK2E,WAAWW,KAAK,iDAAkD,sEAAuE,qCAClMtF,KAAK2E,WAAW0Q,oBAAsB,IAAIrV,KAAK2E,WAAWW,KAAK,gDAAiD,mEAAoE,iCACpLtF,KAAK2E,WAAW2Q,kBAAoB,IAAItV,KAAK2E,WAAWW,KAAK,gDAAiD6Q,EAAU,+BACxHnW,KAAK2E,WAAW4Q,iBAAmB,IAAIvV,KAAK2E,WAAWW,KAAK,gDAAiD,2EAA4E,wCACzLtF,KAAK2E,WAAW6Q,gBAAkB,IAAIxV,KAAK2E,WAAWW,KAAK,gDAAiD,kEAAmE,uBAC/KtF,KAAK2E,WAAW8Q,gBAAkB,IAAIzV,KAAK2E,WAAWW,KAAK,gDAAiD4Q,EAAQ,6BACpHlW,KAAK2E,WAAW+Q,eAAiB,IAAI1V,KAAK2E,WAAWW,KAAK,gDAAiD,2EAA4E,6BACvLtF,KAAK2E,WAAWgR,gBAAkB,IAAI3V,KAAK2E,WAAWW,KAAK,gDAAiD,yEAA0E,mGACtLtF,KAAK2E,WAAW2E,YAAc,IAAItJ,KAAK2E,WAAWW,KAAK,+CAAgD,kFAAmF,6BAC1LtF,KAAK2E,WAAW8E,iBAAmB,IAAIzJ,KAAK2E,WAAWW,KAAK,iDAAkD,mEAAoE,gCAClLtF,KAAK2E,WAAWqF,cAAgB,KAAWhK,KAAK2E,WAAWW,KAAK,iDAAkD,2EAA4E,0BAA4BS,EAAU,aAExO/F,KAAKoW,wBACN,CAGA,sBAAAA,GAkBC,IAAIC,EAjBJ,WACC,IAAIC,EAAa,EAEjB,IAAK,IAAIC,KAAOC,eACXA,eAAeC,eAAeF,KAEjCD,GADgBE,eAAeE,QAAQH,GACfzT,QAO1B,OAFqBJ,KAAKuN,MAAOqG,EAAa,KAAO,KAAQ,KAAO,GAGrE,CAGyBK,GACzBpO,QAAQC,KAAK,wBAA0B6N,EAAqB,MAC7D,CAGA,WAAMxE,CAAM/G,GACX,IAAI7B,EAAOjJ,KAAKiJ,KAEhBjJ,KAAK4E,GAAK,CAAE1D,GAAI,GAChBlB,KAAK+P,OAAS,GAEd,IAAOtL,UAEP4H,OAAOuK,SAAS,EAAG,GACnB5W,KAAK+R,aAAa,UAGlB/R,KAAKkS,OAAOZ,OAGZ,IAAIrF,EAAK,KAAK+G,WACd/G,EAAGR,IAAIxC,EAAKkB,cAAc,qBAAsB,CAC/CyB,QAAS,IAGV,IAAI3L,QAAaW,EAAA,EAAIC,KAAK,KACtBgW,EAAW,KACX5W,EAAKa,SACRd,KAAK4E,GAAK3E,EAAKe,QACfhB,KAAK6E,QAAU,IAAI,EACnB7E,KAAK2E,WAAa,IAAI,EAAWsE,EAAMjJ,KAAK4E,GAAI5E,KAAK6E,QAAS7E,KAAK8E,YAG7D9E,KAAK2T,qBAGX3T,KAAKuU,0BAGCpB,EAAA,EAAQzD,IAAIzG,GAGd6B,EAAO7B,EAAKkB,cAAc,eAAegB,MAAM+C,QAAU,OACxDjC,EAAKjM,KAAK8S,cAAc7G,SAGvBjM,KAAK+S,mBAAmB9G,GAG9BhD,EAAKkB,cAAc,WAAWsD,QAAU,IAAMzN,KAAKsT,gBAGnDtT,KAAKkS,OAAOvN,aAEZ3E,KAAKkS,OAAON,aAEZ,IAAOpE,YAGH1C,GAAO7B,EAAKkE,iBAAiB,UAAU7C,SAAQ,SAAU5J,GAAMA,EAAGyK,MAAM+C,QAAU,MAAQ,IAE9FlO,KAAK6S,cAAc5G,GAEnBjM,KAAKwT,eAGLxT,KAAKkS,OAAOd,aAEZpR,KAAKkS,OAAON,YAAW,GAEvB,IAAOpE,UAGPqJ,EAAWC,aAAY7R,iBACLrE,EAAA,EAAIC,KAAK,MAEjBC,UACRiW,cAAcF,GACd7W,KAAK6R,QACN,GACE,MAIJ5I,EAAKkE,iBAAiB,gBAAgB7C,SAAQ5J,GAAM,IAAOsM,KAAKtM,KAChEuI,EAAKkE,iBAAiB,uBAAuB7C,SAAQ5J,GAAM,IAAOsM,KAAKtM,EAAI,WAC5E,CAGA,GAAAsW,CAAItW,GACH,OAAO,IAAI4P,SAAQC,IAClB,IAAIzN,GAAS,QAAmB,GAChC9C,KAAKiJ,KAAOvI,EACZV,KAAK+R,aAAa,UAGlB,KAAK7F,OAAOlM,KAAKiJ,KAAKkE,iBAAiB,YAAa,CACnDvB,QAAS,GACP,CACFA,QAAS,EACTC,SAAU/I,EACVgJ,KAAM,YACN+D,WAAY5K,UAEXjF,KAAK+R,aAAa,SAAU,SAGtB/R,KAAK6R,OAAM,GAEjBtB,GAAS,GAET,GAEJ,E","sources":["webpack://dwaan/./src/js/replurk/friends.js","webpack://dwaan/./src/js/replurk/span.js","webpack://dwaan/./src/js/replurk/colors.js","webpack://dwaan/./src/js/replurk/icons.js","webpack://dwaan/./src/js/replurk/element.js","webpack://dwaan/./src/js/replurk/most.js","webpack://dwaan/./src/js/replurk/inactive.js","webpack://dwaan/./src/js/replurk/statistics.js","webpack://dwaan/./src/js/replurk/loading.js","webpack://dwaan/./src/js/replurk/scroll.js","webpack://dwaan/./src/js/replurk/main.js"],"sourcesContent":["\"use strict\"\n\nimport api from \"../helpers/api.js\"\n\n/*\n\tFriends object spesification:\n\n\t1. data: contains all the friends collection data\n\t2. add(data): add friend to friends collection data\n\t3. find(user_id): return friend data based on their id\n\t4. findByUsername(nick_name): return friend data based on their nick name\n\t5. getAvatar(user_id): return avatar url based on their id for from friends collection data\n\t6. getAvatarByUsername(user_id): return avatar url based on their nick name for from friends collection data\n*/\n\nclass friends {\n\tconstructor() {\n\t\tthis.data = {}\n\t\tthis.unavailable = []\n\t}\n\n\t/**\n\t * Add JSON object as a friends data\n\t *\n\t * ```js\n\t * friends.add({});\n\t * ```\n\t *\n\t * @param {new_friends}: New friends JSON from /APP/Profile/getPublicProfile\n\t * @memberof friends\n\t * @link https://www.plurk.com/API/2/\n\t */\n\tadd(new_friends) {\n\t\tObject.assign(this.data, new_friends)\n\t}\n\n\tasync find(user_id) {\n\t\tif (this.unavailable.findIndex(el => el == user_id) >= 0) return false\n\n\t\tif (this.data && this.data[user_id]) {\n\t\t\treturn this.data[user_id]\n\t\t} else {\n\t\t\tvar result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&user_id=\" + user_id)\n\n\t\t\tif (result.success) {\n\t\t\t\tvar temp = {}\n\t\t\t\ttemp[result.message.user_info.id] = result.message.user_info\n\t\t\t\tthis.add(temp)\n\t\t\t\treturn result.message.user_info\n\t\t\t} else {\n\t\t\t\tthis.unavailable.push(user_id)\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\n\tasync findByUsername(nick_name) {\n\t\tvar user_id = false\n\n\t\tif (this.unavailable.findIndex(el => el == nick_name) >= 0) return false\n\n\t\tfor (var index in this.data) {\n\t\t\tif (this.data[index].nick_name.toLowerCase() == nick_name.toLowerCase()) {\n\t\t\t\tuser_id = index\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif (user_id) {\n\t\t\treturn this.data[user_id]\n\t\t} else {\n\t\t\tvar result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&nick_name=\" + nick_name)\n\n\t\t\tif (result.success) {\n\t\t\t\tvar temp = {}\n\t\t\t\ttemp[result.message.user_info.id] = result.message.user_info\n\t\t\t\tthis.add(temp)\n\t\t\t\treturn result.message.user_info\n\t\t\t} else {\n\t\t\t\tthis.unavailable.push(nick_name)\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\n\tgetAvatar(user_id) {\n\t\tif (user_id && this.data && this.data[user_id]) {\n\t\t\tif (this.data[user_id].has_profile_image) {\n\t\t\t\tvar avatar = \"\"\n\t\t\t\tif (this.data[user_id].avatar) avatar = this.data[user_id].avatar\n\t\t\t\treturn 'https://avatars.plurk.com/' + user_id + '-big' + avatar + '.jpg'\n\t\t\t}\n\t\t}\n\t\treturn 'https://plurk.com/static/default_big.jpg'\n\t}\n\n\tgetAvatarByUsername(user_name) {\n\t\tvar user_id = false\n\n\t\tif (user_name) {\n\t\t\tfor (var index in this.data) {\n\t\t\t\tif (this.data[index].nick_name.toLowerCase() == user_name.toLowerCase()) {\n\t\t\t\t\tuser_id = index\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.getAvatar(user_id)\n\t}\n}\n\nexport default friends","\"use strict\"\n\nimport { _q, _qAll, animateNumber } from '../helpers/helper.js'\n\n/*\n    Simple span element object:\n\n    1. update(text): Update the content with text value, and animate it if it's number.\n    2. html(html): Update the content with html value.\n    3. class(classname): Add class name to span.\n*/\n\nclass span {\n    constructor() {\n        this.el = document.createElement('span')\n        return this\n    }\n\n    class(...classname) {\n        this.el.classList.add(...classname)\n        return this\n    }\n\n    html(html) {\n        this.el.innerHTML = html\n        return this\n    }\n\n    update(text) {\n        animateNumber(this.el.textContent, text, (text) => {\n            this.el.textContent = text\n        })\n        return this\n    }\n}\n\nexport default span","\"use strict\";\n\nimport { gsap } from 'gsap';\n\n/*\n    Color randomizer\n\n    1. colors: array of colors value\n    2. getRandomColor(): get the randomized color from colors list\n*/\n\nclass colors {\n    constructor() {\n        this.oldcolor = \"\";\n        this.randomcolors = [];\n\n        const allColorArrays = [\n            [\n                'rgb(63,94,251)',     // Dodger Blue\n                'rgb(252,70,107)',    // Radical Red\n                'rgb(34,193,195)',    // Light Sea Green\n                'rgb(253,187,45)',    // Goldenrod\n                'rgb(195,34,190)',    // Deep Pink\n                'rgb(219,158,0)',     // Golden Yellow\n                'rgb(75,231,152)',    // Medium Spring Green\n                'rgb(195,34,103)',    // Cerise\n                'rgb(45,182,253)'     // Dodger Blue (Lighter)\n            ]\n        ];\n\n        const seconds = Math.floor(Date.now() / 1000); // Get current time in seconds\n        const arrayIndex = seconds % allColorArrays.length; // Use seconds to determine the index\n        this.colors = allColorArrays[arrayIndex];\n    }\n\n    getRandomColor() {\n        var color;\n        do {\n            this.randomcolors = gsap.utils.shuffle(this.colors).slice();\n        } while (this.oldcolor == (color = this.randomcolors.pop()));\n        this.oldcolor = color;\n        return color;\n    }\n}\n\nexport default colors;","\"use strict\";\n\nvar iconLink = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\"><path id=\"right\" d=\"M19.188,12.001c0,1.1-0.891,2.015-1.988,2.015l-4.195-0.015C13.543,15.089,13.968,16,15.002,16h3C19.658,16,21,13.657,21,12s-1.342-4-2.998-4h-3c-1.034,0-1.459,0.911-1.998,1.999l4.195-0.015C18.297,9.984,19.188,10.901,19.188,12.001z\"/><path id=\"center\" d=\"M8,12c0,0.535,0.42,1,0.938,1h6.109c0.518,0,0.938-0.465,0.938-1c0-0.534-0.42-1-0.938-1H8.938C8.42,11,8,11.466,8,12z\"/><path id=\"left\" d=\"M4.816,11.999c0-1.1,0.891-2.015,1.988-2.015L11,9.999C10.461,8.911,10.036,8,9.002,8h-3c-1.656,0-2.998,2.343-2.998,4s1.342,4,2.998,4h3c1.034,0,1.459-0.911,1.998-1.999l-4.195,0.015C5.707,14.016,4.816,13.099,4.816,11.999z\"/></svg>';\n\nexport default iconLink;","\"use strict\"\n\nimport span from \"./span.js\"\n\n/*\n    Plurk element object spesification:\n\n    1. id: contain the id name\n    2. user: contain user object\n    3. attached: status of element is attached in DOM or not\n    4. create(): create the DOM element\n    4. destroy(): remove the DOM element\n    4. update(): update the DOM element based on it's current value\n    5. insertTo(element): insert DOM element to spesific element, also will check if it's already created or not\n*/\n\nclass element {\n    constructor(id, data, avatarurl, customcreate) {\n        this.id = id\n        this.user = data\n        this.user_id = data.id\n        this.value = data.nick_name\n        this.nick_name = data.nick_name\n        this.attached = false\n        this.hidden = true\n        this.count = 1\n        this.position = 0\n        this.customcreate = customcreate\n        this.el = document.createElement('a')\n        this.created = false\n        this.avatarurl = avatarurl\n        this.counts = new span().class(\"count\").html(this.count)\n    }\n\n    create() {\n        this.created = true\n\n        this.el.setAttribute(\"id\", this.id + this.user_id)\n        this.el.setAttribute(\"class\", 'plurkers')\n        this.el.setAttribute(\"href\", 'https://plurk.com/' + this.user.nick_name)\n        this.el.setAttribute(\"target\", '_BLANK')\n\n        if (!this.customcreate) {\n            this.avatar = new span()\n                .class(\"avatar\")\n                .html(`<img src=\"${this.avatarurl}\" />`)\n            this.name = new span()\n                .class(\"name\")\n                .html(`${this.user.display_name}`)\n            this.counts = new span()\n                .class('count')\n                .html(this.count)\n            this.el.appendChild(this.avatar.el)\n            this.el.appendChild(this.name.el)\n            this.el.appendChild(this.counts.el)\n        } else {\n            this.customcreate(this)\n        }\n    }\n\n    insertTo(element) {\n        if (!this.created) this.create()\n\n        this.attached = true\n        element.insertAdjacentElement(\"beforeend\", this.el)\n    }\n\n    destroy() {\n        this.attached = false\n\n        if (this.el) {\n            this.el.remove()\n            return true\n        } else {\n            return false\n        }\n    }\n\n    update() {\n        // Only update when it's attached\n        if (this.attached) {\n            this.counts.update(`${this.count}`)\n        }\n    }\n}\n\nexport default element","\"use strict\"\n\nimport api from \"../helpers/api.js\"\nimport { plural, datediff, pluralinwords } from '../helpers/helper.js'\n\nimport span from \"./span.js\"\nimport iconLink from \"./icons.js\"\nimport element from \"./element.js\"\n\nclass most {\n\tconstructor(statistics) {\n\t\tif (!statistics) return\n\n\t\tthis.me = statistics.me\n\t\tthis.friends = statistics.friends\n\t\tthis.year = statistics.year\n\t\tthis.statistics = statistics\n\n\t\tthis.responders = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: async function (response) {\n\t\t\t\tvar index = this.data.findIndex(function (el) {\n\t\t\t\t\treturn el.user_id == response.user_id\n\t\t\t\t})\n\n\t\t\t\tif (index < 0) {\n\t\t\t\t\tvar user = await this.parent.friends.find(response.user_id)\n\t\t\t\t\tthis.data.push(new element('mostresponders', user, this.parent.friends.getAvatar(user.id)))\n\t\t\t\t} else {\n\t\t\t\t\tthis.data[index].count++\n\t\t\t\t}\n\t\t\t\tthis.data.sort(this.parent.sort)\n\n\t\t\t\t// Update top 5\n\t\t\t\tvar index = 1\n\t\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\t\tthis.data[i].position = this.data.length\n\t\t\t\t\tif (this.data[i].user_id != this.parent.me.id && this.data[i].user_id != 99999) {\n\t\t\t\t\t\tthis.data[i].position = index++\n\t\t\t\t\t\tthis.parent.statistics.attach('<i>Top <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> Responders</i> <strong>of My Timeline</strong>', this.data[i], 5)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar index = 0\n\t\t\t\tif (this.data.length > 0) {\n\t\t\t\t\twhile ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++\n\t\t\t\t\tif (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatar(this.data[index].user_id), 'https://plurk.com/' + this.data[index].user.nick_name, '<i>Most Responder</i>', this.data[index].user.display_name, this.data[index].count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.mentions = {\n\t\t\tdata: [],\n\t\t\tdataAll: [],\n\t\t\tparent: this,\n\t\t\tcount: async function (content) {\n\t\t\t\tvar result = this.parent.findregex(/\\@(\\w{1,30})[\\ |\\:]/g, value => value.replace(/\\@|\\ |\\:/g, ''), content, this.data)\n\t\t\t\tvar max = 5\n\t\t\t\tvar index = 1\n\n\t\t\t\tif (result) {\n\t\t\t\t\t// Update top 5\n\t\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\t\tfor (var idx = 0; idx < this.data.length; idx++) {\n\t\t\t\t\t\tthis.data[idx].position = this.data.length\n\n\t\t\t\t\t\tif (index <= max) {\n\t\t\t\t\t\t\tvar user = await this.parent.friends.findByUsername(this.data[idx].value)\n\n\t\t\t\t\t\t\tif (this.data[idx].el == undefined) {\n\t\t\t\t\t\t\t\tthis.data[idx] = new element('mostmentionedbyme', user, \"\", plurker => {\n\t\t\t\t\t\t\t\t\tplurker.avatar = new span().class(\"avatar\").html(`<img src=\"${this.parent.friends.getAvatar(plurker.user_id)}\" />`)\n\t\t\t\t\t\t\t\t\tplurker.name = new span().class(\"name\").html(`@${plurker.nick_name}`)\n\t\t\t\t\t\t\t\t\tplurker.counts = new span().class(\"count\").html(plurker.count)\n\t\t\t\t\t\t\t\t\tplurker.el.appendChild(plurker.avatar.el)\n\t\t\t\t\t\t\t\t\tplurker.el.appendChild(plurker.name.el)\n\t\t\t\t\t\t\t\t\tplurker.el.appendChild(plurker.counts.el)\n\t\t\t\t\t\t\t\t\tplurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.nick_name)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (user.id != this.parent.me.id && user.id != 99999) {\n\t\t\t\t\t\t\t\tthis.data[idx].position = index++\n\t\t\t\t\t\t\t\tthis.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/fluent-emoji:person-raising-hand-light.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.data[idx].el) this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/fluent-emoji:person-raising-hand-light.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar index = 0\n\t\t\t\tif (this.data.length > 0) {\n\t\t\t\t\twhile ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++\n\t\t\t\t\tif (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatarByUsername(this.data[index].value), 'https://plurk.com/' + this.data[index].value, '<i>Most Mentioned</i> by me', \"@\" + this.data[index].value, this.data[index].count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.myemoticons = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (content) {\n\t\t\t\tthis.parent.findregex(/emoticon_my\\\" src=\\\"(.*?)\\\"/g, function (value) {\n\t\t\t\t\treturn value.replace(/emoticon_my\\\" src=\\\"|\\\"/gi, '')\n\t\t\t\t}, content, this.data)\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar html = \"\"\n\t\t\t\tvar max = 7\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\tfor (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n\t\t\t\t\tif (this.data[i].count > 1) html += '<div><img src=\"' + this.data[i].value + '\" /> <span class=\"count\">' + this.data[i].count + '</span></div>'\n\t\t\t\tif (html != \"\") this.parent.statistics.drawHTML(\"smallspan grid emoticons\", 'Most Used <i>My Emoticons</i>', html)\n\t\t\t}\n\t\t}\n\n\t\tthis.hashtags = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (content) {\n\t\t\t\tthis.parent.findregex(/hashtag\\\"\\>(.*?)\\</g, function (value) {\n\t\t\t\t\treturn value.replace(/hashtag\\\"\\>\\#|\\.\\<|\\</g, '')\n\t\t\t\t}, content, this.data)\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar html = \"\"\n\t\t\t\tvar max = 5\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\tfor (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n\t\t\t\t\tif (this.data[i].count > 1) html += '<div><a href=\"https://plurk.com/search?q=' + this.data[i].value + '\" target=\"_BLANK\" /><span class=\"count\">' + this.data[i].count + '</span> #' + this.data[i].value + '</a></div>'\n\t\t\t\tif (html != \"\") {\n\t\t\t\t\thtml = \"<strong>#</strong>\" + html\n\t\t\t\t\tthis.parent.statistics.drawHTML(\"hashtags\", 'Most Used <i>Hashtags</i>', html)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.links = {\n\t\t\tdata: [],\n\t\t\tlinks: [],\n\t\t\tpics: [],\n\t\t\tparent: this,\n\t\t\tcount: function (content, id, response, replurk, loved) {\n\t\t\t\tvar result = content.match(/href\\=\\\"(.*?)\\\"\\ class=\\\"(.*?)\\\"\\ rel/g)\n\t\t\t\tvar count = 0\n\t\t\t\tvar pics = []\n\t\t\t\tvar links = []\n\n\t\t\t\tif (result) for (var data of result) {\n\t\t\t\t\tif (!this.data[id]) {\n\t\t\t\t\t\tcount = response + (replurk * 250) + (loved * 50)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.includes(\"pictureservices\")) {\n\t\t\t\t\t\tthis.pics.push(data)\n\t\t\t\t\t\tif (count > 0) {\n\t\t\t\t\t\t\tvar pic = data.split('\\\"')\n\t\t\t\t\t\t\tpics.push({\n\t\t\t\t\t\t\t\turl: pic[1],\n\t\t\t\t\t\t\t\tresponse: response,\n\t\t\t\t\t\t\t\treplurk: replurk,\n\t\t\t\t\t\t\t\tloved: loved\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.links.push(data)\n\t\t\t\t\t\tif (count > 0) {\n\t\t\t\t\t\t\tvar link = data.split('\\\"')\n\t\t\t\t\t\t\tlinks.push({\n\t\t\t\t\t\t\t\turl: link[1],\n\t\t\t\t\t\t\t\tresponse: response,\n\t\t\t\t\t\t\t\treplurk: replurk,\n\t\t\t\t\t\t\t\tloved: loved\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (count) this.data.push({\n\t\t\t\t\tid: id,\n\t\t\t\t\tpics: pics,\n\t\t\t\t\tlinks: links,\n\t\t\t\t\tcount: count,\n\t\t\t\t\tcontent: content\n\t\t\t\t})\n\t\t\t},\n\t\t\tdrawLinks: function () {\n\t\t\t\tvar max = 1\n\t\t\t\tvar index = 0\n\t\t\t\tvar result = \"\"\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\twhile (index < this.data.length && max > 0) {\n\t\t\t\t\tif (this.data[index].links.length > 0) {\n\t\t\t\t\t\tvar link = this.data[index].links[0]\n\t\t\t\t\t\tvar url = '<a href=\"https://plurk.com/p/' + this.data[index].id.toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>'\n\t\t\t\t\t\tresult += '<div class=\"post\"><div class=\"info\">' + this.data[index].content + '</div><div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + link.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + link.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + link.loved + '</span>' + url + '</div></div>'\n\t\t\t\t\t\tmax--\n\t\t\t\t\t}\n\t\t\t\t\tindex++\n\t\t\t\t}\n\t\t\t\tif (this.links.length > 0) this.parent.statistics.drawDiv('spansmall sharedlinks', \"<div class='title'>I shared <i>🔗 \" + plural(this.links.length, 'link') + '</i> and this is the most popular one</div>' + result)\n\t\t\t},\n\t\t\tdrawPics: function () {\n\t\t\t\tvar max = 1\n\t\t\t\tvar index = 0\n\t\t\t\tvar result = \"\"\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t\twhile (index < this.data.length && max > 0) {\n\t\t\t\t\tif (this.data[index].pics.length > 0) {\n\t\t\t\t\t\tvar pics = this.data[index].pics[0]\n\t\t\t\t\t\tvar url = '<a href=\"https://plurk.com/p/' + this.data[index].toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>'\n\t\t\t\t\t\tresult += '<div class=\"box\"><div class=\"image\" style=\"background-image: url(' + api.url + \"?img=\" + pics.url + ')\"></div><div class=\"post\">' + this.data[index].content + '<div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + pics.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + pics.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + pics.loved + '</span>' + url + '</div></div></div>'\n\t\t\t\t\t\tmax--\n\t\t\t\t\t}\n\t\t\t\t\tindex++\n\t\t\t\t}\n\n\t\t\t\tif (this.pics.length > 0) this.parent.statistics.draw('spansmall sharedpictures', this.pics.length, 'I shared <i>🖼 ' + plural(this.pics.length, 'image') + '</i>')\n\t\t\t\tif (result != \"\") this.parent.statistics.drawHTML('span2 previewpics', '<i>🖼 Most Popular Image</i>', result)\n\t\t\t}\n\t\t}\n\n\t\tthis.types = {\n\t\t\twords: 0,\n\t\t\tchars: 0,\n\t\t\tparent: this,\n\t\t\tcount: function (content) {\n\t\t\t\tvar words = content.split(\" \")\n\n\t\t\t\tthis.chars += content.length\n\t\t\t\tthis.words += words.length\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tif (this.chars > 0) this.parent.statistics.draw('span2 mediumnumber', this.chars, 'I typed more than  <i>' + pluralinwords(this.chars, 'character') + '</i>, around <i>' + pluralinwords(this.words, 'word') + '</i> this year')\n\t\t\t}\n\t\t}\n\n\t\tthis.responses = {\n\t\t\tparent: this,\n\t\t\tsort: (a, b) => b.response_count - a.response_count,\n\t\t\tdraw: function (posts) {\n\t\t\t\tvar post\n\t\t\t\tposts.sort(this.sort)\n\t\t\t\tif (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.response_count > 0) {\n\t\t\t\t\tthis.parent.statistics.drawPost('postcontent span2 mostresponded', post.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> Most Responded</i> ' + datediff(post.posted), post.content, post.response_count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.replurk = {\n\t\t\tparent: this,\n\t\t\tsort: (a, b) => b.replurkers_count - a.replurkers_count,\n\t\t\tdraw: function (posts) {\n\t\t\t\tvar post\n\t\t\t\tposts.sort(this.sort)\n\t\t\t\tif (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.replurkers_count > 0) {\n\t\t\t\t\tthis.parent.statistics.drawPost('postcontent span2 mostreplurked', post.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Most Replurked</i> ' + datediff(post.posted), post.content, post.replurkers_count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.favorite = {\n\t\t\tparent: this,\n\t\t\tsort: (a, b) => b.favorite_count - a.favorite_count,\n\t\t\tdraw: function (posts) {\n\t\t\t\tvar post\n\t\t\t\tposts.sort(this.sort)\n\t\t\t\tif (post = posts[0], post.owner_id == this.parent.me.id && post.plurk_type != 3 && post.favorite_count > 0) {\n\t\t\t\t\tthis.parent.statistics.drawPost('postcontent span2 mostfavorited', post.plurk_id, '<i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Most Loved</i> ' + datediff(post.posted), post.content, post.favorite_count)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.interaction = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (response) {\n\t\t\t\tvar index = this.data.findIndex(function (el) {\n\t\t\t\t\treturn el.id == response.user_id\n\t\t\t\t})\n\n\t\t\t\tif (index < 0) {\n\t\t\t\t\tthis.data.push({\n\t\t\t\t\t\tid: response.user_id,\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tmultiplier: 1,\n\t\t\t\t\t\tplurk_id: response.plurk_id\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tif (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier++\n\t\t\t\t\telse this.data[index].multiplier = 1\n\t\t\t\t\tthis.data[index].count += (this.data[index].multiplier * response.content_raw.length)\n\t\t\t\t}\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar result = []\n\t\t\t\tvar length = 0\n\t\t\t\tvar index = 0\n\t\t\t\twhile (this.data[index] && length <= 5) {\n\t\t\t\t\tif (this.data[index].id != this.parent.me.id) {\n\t\t\t\t\t\tresult.push(this.data[index])\n\t\t\t\t\t\tlength++\n\t\t\t\t\t}\n\t\t\t\t\tindex++\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tif (result.length > 0) this.parent.statistics.drawUserList(\"bubble span2\", \"mostinteraction\", \"Plurkers who really like to <i><img src='https://api.iconify.design/fluent-emoji:speaking-head.svg' /> interact</i> with me\", result)\n\t\t\t\t} catch {\n\t\t\t\t\tconsole.info(\"Error while counting most interacted plurker\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.mvp = {\n\t\t\tdata: [],\n\t\t\tparent: this,\n\t\t\tcount: function (response, type) {\n\t\t\t\tvar index = this.data.findIndex(function (el) {\n\t\t\t\t\treturn el.id == response.user_id\n\t\t\t\t})\n\n\t\t\t\tif (index < 0) {\n\t\t\t\t\tthis.data.push({\n\t\t\t\t\t\tid: response.user_id,\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tmultiplier: 1,\n\t\t\t\t\t\tplurk_id: response.plurk_id\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tif (type == \"replurk\") {\n\t\t\t\t\t\tthis.data[index].count += (response.count * 250)\n\t\t\t\t\t} else if (type == \"favorite\") {\n\t\t\t\t\t\tthis.data[index].count += (response.count * 50)\n\t\t\t\t\t} else if (response.content_raw.length > 16) {\n\t\t\t\t\t\tif (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier += .5\n\t\t\t\t\t\telse this.data[index].multiplier = .5\n\t\t\t\t\t\tthis.data[index].count += (this.data[index].multiplier * response.content_raw.length)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.data.sort(this.parent.sort)\n\t\t\t},\n\t\t\tdraw: function () {\n\t\t\t\tvar result = []\n\t\t\t\tvar length = 0\n\t\t\t\tvar index = 0\n\t\t\t\twhile (this.data[index] && length <= 5) {\n\t\t\t\t\tif (this.data[index].id != this.parent.me.id) {\n\t\t\t\t\t\tresult.push(this.data[index])\n\t\t\t\t\t\tlength++\n\t\t\t\t\t}\n\t\t\t\t\tindex++\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tif (result.length > 0) this.parent.statistics.drawUserList(\"bubble span3\", \"mvp\", \"My \" + this.parent.year + \" <i><img src='https://api.iconify.design/fluent-emoji:biting-lip.svg' /> MVP</i>\", result)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.info(\"Error while counting my mvp\", error)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tsort(a, b) {\n\t\treturn b.count - a.count\n\t}\n\n\t// Find and count all based on regex\n\tfindregex(regex, replace, content, storage) {\n\t\tvar result = content.match(regex)\n\n\t\tfor (var index in result) {\n\t\t\tvar value = replace(result[index])\n\t\t\tvar idx = storage.findIndex(el => el.value == value)\n\n\t\t\tif (idx < 0) {\n\t\t\t\tstorage.push({\n\t\t\t\t\tid: value,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tcount: 1\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tstorage[idx].count++\n\t\t\t}\n\t\t}\n\n\t\treturn result\n\t}\n\n\tasync countAll(data) {\n\t\t// Find and count all my emoticons from my post\n\t\tif (data.user_id == this.me.id) this.myemoticons.count(data.content)\n\t\t// Find and count all mentions from my post\n\t\tawait this.mentions.count(data.content_raw)\n\t\t// Find and count all hashtags from my post\n\t\tif (data.user_id == this.me.id) this.hashtags.count(data.content)\n\t\t// Find and count all links and pictures post from my post\n\t\tif (data.user_id == this.me.id) this.links.count(data.content, data.plurk_id, data.response_count, data.replurkers_count, data.favorite_count)\n\t\t// Find and count characther and words from my post\n\t\tif (data.user_id == this.me.id) this.types.count(data.content_raw)\n\t}\n}\n\nexport default most","// Inactive plurker object\nclass inactive {\n\tconstructor(statistics) {\n\t\tthis.statistics = statistics\n\t\tthis.year = statistics.year\n\t}\n\n\tdraw(data) {\n\t\tthis.statistics.draw('inactive', this.year + \" &#8617;\", 'I\\'ve been inactive since ' + year + ' <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n\t\tthis.statistics.drawPost('postcontent span2 inactivemore', data.plurk_id, '<i>My last Plurk</i> ' + datediff(data.posted), data.content, data.response_count);\n\t}\n\n\tempty() {\n\t\tthis.statistics.draw('inactive', '-', 'I didn\\'t post anything at this year <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n\t}\n}\n\nexport default inactive","\"use strict\"\n\nimport { gsap } from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js'\nimport html2canvas from \"html2canvas\"\n\nimport api from \"../helpers/api.js\"\nimport scroll from \"../helpers/scroll.js\"\nimport { hasClass, plural, reduceMotionFilter } from '../helpers/helper.js'\n\nimport span from \"./span.js\"\nimport colors from \"./colors.js\"\nimport iconLink from \"./icons.js\"\nimport element from \"./element.js\"\nimport most from \"./most.js\"\nimport inactive from \"./inactive.js\"\n\nclass statistics {\n\tconstructor(next, me, friends, year) {\n\t\tif (!next || !me || !friends || !year) return\n\n\t\tthis.whispers_count = 0\n\t\tthis.poll_count = 0\n\t\tthis.poll_responder_count = 0\n\t\tthis.coins_count = 0\n\t\tthis.porn_count = 0\n\t\tthis.noresponse_count = 0\n\t\tthis.private_count = 0\n\t\tthis.replurker_count = 0\n\t\tthis.replurker_list = []\n\t\tthis.favourite_count = 0\n\t\tthis.favorite_list = []\n\t\tthis.response_count = 0\n\t\tthis.responded_count = 0\n\t\tthis.responded_other_count = 0\n\t\tthis.responded_other_list = []\n\t\tthis.plurks_count = 0\n\t\tthis.id = 0\n\t\tthis.randomcolors = []\n\n\t\tthis.next = next\n\t\tthis.me = me\n\t\tthis.friends = friends\n\t\tthis.year = year\n\n\t\t// Most statistics object renderer\n\t\tthis.most = new most(this)\n\n\t\t// Inactive timeline\n\t\tthis.inactive = new inactive(this)\n\n\t\tthis.el = this.next.querySelector(\"#statistics\")\n\n\t\t// Obverse when element is added to DOM\n\t\tvar observer = new MutationObserver((mutationsList) => {\n\t\t\tmutationsList.forEach(mutation => {\n\t\t\t\tmutation.addedNodes.forEach(el => {\n\t\t\t\t\tif (el.querySelector) this.afterDraw(el)\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t\tobserver.observe(this.el, {\n\t\t\tattributes: true,\n\t\t\tchildList: true,\n\t\t\tsubtree: false\n\t\t})\n\t}\n\n\tclear() {\n\t\tthis.el.innerHTML = \"\"\n\t}\n\n\tlistCount(list, collection) {\n\t\tif (collection.length > 0) {\n\t\t\tcollection.forEach(value => {\n\t\t\t\tvar index = list.findIndex(el => el.id == value)\n\n\t\t\t\tif (index < 0) list.push({ id: value, count: 1 })\n\t\t\t\telse list[index].count++\n\t\t\t})\n\t\t}\n\n\t\treturn list\n\t}\n\n\ttitle(text, style = \"\", loading = false) {\n\t\tlet span = loading ? `<span class=\"loading\"><i/>` : `<span class=\"line\"><i/></span>`\n\t\tthis.el.insertAdjacentHTML('beforeend', `\\\n\t\t\t<div class=\"statistics middle statistics-title ${style}\">\\\n\t\t\t\t<h3><span>${text}</span>${span}</h3>\\\n\t\t\t</div>`)\n\t}\n\n\tbody(text, style = \"\") {\n\t\tthis.el.insertAdjacentHTML('beforeend', `\\\n\t\t\t<div class=\"statistics middle statistics-title ${style}\">\\\n\t\t\t\t<div class=\"body\">${text}</div>\\\n\t\t\t</div>`)\n\t}\n\n\tafterDraw(el) {\n\t\tvar length = reduceMotionFilter(1)\n\n\t\tif (hasClass(el, 'statistics-wrap')) {\n\t\t\tvar color = new colors()\n\t\t\tvar randomcolors = [color.getRandomColor(), color.getRandomColor()]\n\t\t\tvar anim = el.querySelector(\".anim\")\n\n\t\t\tgsap.set(anim, {\n\t\t\t\tbackground: 'radial-gradient(at 10% 10%, ' + randomcolors[0] + ' 0%, ' + randomcolors[1] + ' 100%)'\n\t\t\t})\n\n\t\t\tgsap.to(anim, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length / 2,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, 0)\n\n\t\t\t// Scroll animation wrap section\n\t\t\tvar screen = gsap.matchMedia()\n\t\t\tscreen.add(\"(min-aspect-ratio: 1/1)\", () => {\n\t\t\t\tscroll.push(tl => {\n\t\t\t\t\ttl.fromTo(el.children, {\n\t\t\t\t\t\ty: window.innerHeight * 1 / 5\n\t\t\t\t\t}, {\n\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\tease: \"ease.out\"\n\t\t\t\t\t}, 0)\n\t\t\t\t\treturn tl\n\t\t\t\t}, tl => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: el,\n\t\t\t\t\t\tstart: \"0 100%-=100px\",\n\t\t\t\t\t\tend: \"0 100%-=100px\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: 2\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t\t\tscreen.add(\"(max-aspect-ratio: 1/1)\", () => {\n\t\t\t\tscroll.push(tl => {\n\t\t\t\t\ttl.fromTo(el.children, {\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t}, {\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t}, 0)\n\t\t\t\t\treturn tl\n\t\t\t\t}, tl => {\n\t\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\t\ttrigger: el,\n\t\t\t\t\t\tstart: \"0 100%-=100px\",\n\t\t\t\t\t\tend: \"100px 100%-=100px\",\n\t\t\t\t\t\tanimation: tl,\n\t\t\t\t\t\tscrub: 1\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tscroll.push(function (tl) {\n\t\t\t\tif (el.querySelector(\".big\")) {\n\t\t\t\t\tvar number = Number(el.querySelector(\".big\").textContent)\n\t\t\t\t\tif (number > 0) {\n\t\t\t\t\t\tvar load = { progress: 0 }\n\t\t\t\t\t\tvar duration = 1\n\t\t\t\t\t\tif (number >= 500 && number < 1000) duration = 2\n\t\t\t\t\t\telse if (number >= 1000 && number < 99999) duration = 3\n\t\t\t\t\t\telse if (number >= 99999) duration = 4\n\t\t\t\t\t\ttl.to(load, {\n\t\t\t\t\t\t\tprogress: number,\n\t\t\t\t\t\t\tsnap: \"progress\",\n\t\t\t\t\t\t\tease: \"power3.out\",\n\t\t\t\t\t\t\tduration: duration,\n\t\t\t\t\t\t\tonUpdate: () => {\n\t\t\t\t\t\t\t\tel.querySelector(\".big\").textContent = plural(load.progress)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 0)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"0 100%-=100px\",\n\t\t\t\t\tend: \"100px 100%-=100px\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\ttoggleActions: \"play none none none\"\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\t// Scroll animation line section\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(el.querySelectorAll(\"i\"), {\n\t\t\t\t\tx: \"-100%\"\n\t\t\t\t}, {\n\t\t\t\t\tx: \"0%\",\n\t\t\t\t\tease: \"ease.out\"\n\t\t\t\t}, 0)\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"100% 100%\",\n\t\t\t\t\tend: \"100% 0\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: 1\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tif (hasClass(el, 'drawgraph')) {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(el.querySelector(\".graph\"), {\n\t\t\t\t\ty: 100\n\t\t\t\t}, {\n\t\t\t\t\ty: 0\n\t\t\t\t}, 0)\n\n\t\t\t\ttl.fromTo(el.querySelector(\".graph i\"), {\n\t\t\t\t\theight: \"0%\"\n\t\t\t\t}, {\n\t\t\t\t\theight: el.querySelector(\".graph i\").getAttribute(\"data-number\") + \"%\"\n\t\t\t\t}, 0)\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"50% 100%\",\n\t\t\t\t\tend: \"100% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: 1\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tif (hasClass(el, 'coins')) {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(el.querySelector(\".big\"), {\n\t\t\t\t\ty: \"50%\"\n\t\t\t\t}, {\n\t\t\t\t\ty: 0,\n\t\t\t\t\tease: \"power3.out\"\n\t\t\t\t}, 0)\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: el,\n\t\t\t\t\tstart: \"50% 100%\",\n\t\t\t\t\tend: \"100% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: 2\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\t// Capture function\n\t\tthis.capture(el)\n\n\t\tscroll.refresh()\n\t}\n\n\tcapture(el) {\n\t\tvar capture = el.querySelector(\".capture small\")\n\t\tif (!capture) return\n\n\t\tcapture.onclick = async () => {\n\t\t\tif (capture.generating) return\n\n\t\t\t// Informing user the process is starting\n\t\t\tcapture.generating = true\n\t\t\tdocument.body.style.cursor = \"wait\"\n\n\t\t\t// HTML to Canvas magic\n\t\t\tcapture.innerHTML = \"Processing...\"\n\t\t\tvar canvas = await html2canvas(el.querySelector(\".anim\"), {\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tlogging: false,\n\t\t\t\tproxy: `${api.url}?img=`,\n\t\t\t\tuseCORS: true\n\t\t\t})\n\n\t\t\t// Download the output\n\t\t\tvar link = document.createElement(\"a\")\n\t\t\tlink.style.display = \"none\"\n\t\t\tlink.download = \"replurk\" + this.year + \"-\" + Date.now() + \".png\"\n\t\t\tlink.href = canvas.toDataURL()\n\t\t\tdocument.body.appendChild(link)\n\t\t\tlink.click()\n\t\t\tdocument.body.removeChild(link)\n\t\t\tlink.remove()\n\n\t\t\t// Reset button after 3s\n\t\t\tcapture.innerHTML = \"Done\"\n\t\t\tdocument.body.style.cursor = \"default\"\n\t\t\tsetTimeout(() => {\n\t\t\t\tcapture.innerHTML = \"Recapture\"\n\t\t\t\tcapture.generating = false\n\t\t\t}, 3000)\n\t\t}\n\t}\n\n\twrapper(style, text, background) {\n\t\treturn `<div class=\"statistics middle statistics-wrap ${style}\">\\\n\t\t\t<div class=\"anim\" ${background ? `style=\"background-images:url(${background})\"` : ``}>${text}</div>\\\n\t\t\t<div class=\"capture\"><small>Capture</small></div>\\\n\t\t</div>`\n\t}\n\n\tdraw(style, number, text, background) {\n\t\tif (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n\t\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style, `\\\n\t\t\t\t<p>\\\n\t\t\t\t\t<span class=\"big\">${number}</span>\\\n\t\t\t\t\t<span class=\"text\">${text}</span>\\\n\t\t\t\t</p>\\\n\t\t\t`), background)\n\t\t}\n\t}\n\n\tdrawDiv(style, text) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style, '<div class=\"box\">' + text + '</div>'))\n\t}\n\n\tdrawGraph(style, number, text) {\n\t\tif (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n\t\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawgraph movetitle\", '\\\n\t\t\t\t<p>\\\n\t\t\t\t\t<span class=\"graph\"><i data-number=\"' + number + '\"></i></span>\\\n\t\t\t\t\t<span class=\"info\">' + text + '</span>\\\n\t\t\t\t</p>\\\n\t\t\t'))\n\t\t}\n\t}\n\n\tdrawImage(style, image, link, title, text, badge) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawimage\", '\\\n\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t<span class=\"avatar\"><img src=\"' + image + '\" /></span>\\\n\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t</a>\\\n\t\t'))\n\t}\n\n\tdrawHTML(style, title, html) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawhtml\", '\\\n\t\t\t<div>\\\n\t\t\t\t<div class=\"htmlcontent\">' + html + '</div>\\\n\t\t\t\t<div class=\"title\">' + title + '</div>\\\n\t\t\t</div>\\\n\t\t'))\n\t}\n\n\tdrawLink(style, link, title, text, badge) {\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawlink\", '\\\n\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t<span>' + text + '</span>\\\n\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t</a>\\\n\t\t'))\n\t}\n\n\tdrawPost(style, id, title, text, badge) {\n\t\tvar url = \"\"\n\t\tif (id) url = 'https://plurk.com/p/' + id.toString(36)\n\t\tthis.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawpost\", '\\\n\t\t\t<div>\\\n\t\t\t\t<a href=\"' + url + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>\\\n\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t<p class=\"post\">' + text + '</p>\\\n\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t</div>\\\n\t\t'))\n\t}\n\n\tasync drawUserList(style, id, title, users) {\n\t\tvar html = \"\"\n\t\tvar max = users.length >= 5 ? 5 : users.length\n\t\tvar length = reduceMotionFilter(1)\n\n\t\tthis.drawHTML(`${style} drawuserlist movetitle ${id}`, title, \"<span class='info'>Downloading user data</span>\")\n\t\tfor (var index = 0; index < max; index++) {\n\t\t\tlet user = users[index]\n\t\t\tlet friend = await this.friends.find(user.id)\n\t\t\tif (friend) {\n\t\t\t\tvar plurker = new element(user.id, friend, \"\", plurker => {\n\t\t\t\t\tplurker.avatar = new span()\n\t\t\t\t\t\t.class(\"avatar\")\n\t\t\t\t\t\t.html(`<img src=\"${this.friends.getAvatar(plurker.user.id)}\" />`)\n\t\t\t\t\tplurker.name = new span()\n\t\t\t\t\t\t.class(\"name\")\n\t\t\t\t\t\t.html(`${plurker.user.display_name}`)\n\t\t\t\t\tplurker.counts = new span()\n\t\t\t\t\t\t.class(\"count\")\n\t\t\t\t\t\t.html(`${user.count}`)\n\n\t\t\t\t\tplurker.el.appendChild(plurker.avatar.el)\n\t\t\t\t\tplurker.el.appendChild(plurker.name.el)\n\t\t\t\t\tplurker.el.appendChild(plurker.counts.el)\n\t\t\t\t\tplurker.el.setAttribute(\"href\", `https://plurk.com/${plurker.user.nick_name}`)\n\t\t\t\t})\n\t\t\t\tplurker.create()\n\t\t\t\thtml += plurker.el.outerHTML\n\t\t\t} else {\n\t\t\t\tmax++\n\t\t\t}\n\t\t}\n\t\tthis.el.querySelector(`.${id} .htmlcontent`).innerHTML = html\n\n\t\t// Stagger animation\n\t\tif (id == 'mostinteraction' || id == 'mvp') {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n\t\t\t\t\tscale: .3,\n\t\t\t\t\topacity: 0\n\t\t\t\t}, {\n\t\t\t\t\tscale: 1,\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tease: \"elastic.out(1.2, 0.5)\",\n\t\t\t\t\tduration: length * 3 / 4,\n\t\t\t\t\tstagger: {\n\t\t\t\t\t\tamount: length / 3,\n\t\t\t\t\t\tfrom: \"end\"\n\t\t\t\t\t}\n\t\t\t\t}, 0)\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: this.el.querySelector(\".\" + id),\n\t\t\t\t\tstart: \"50% 100%\",\n\t\t\t\t\tend: \"50% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\ttoggleActions: \"play none none reverse\"\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\tscroll.push(tl => {\n\t\t\t\ttl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n\t\t\t\t\ty: 50,\n\t\t\t\t\topacity: 0\n\t\t\t\t}, {\n\t\t\t\t\ty: 0,\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tduration: length,\n\t\t\t\t\tease: \"power3.out\",\n\t\t\t\t\tstagger: length / 3\n\t\t\t\t}, 0)\n\n\t\t\t\treturn tl\n\t\t\t}, tl => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: this.el.querySelector(\".\" + id),\n\t\t\t\t\tstart: \"0% 100%\",\n\t\t\t\t\tend: \"0% 100%\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\ttoggleActions: \"play none none reverse\"\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tattach(charttitle, node, max) {\n\t\tvar id = node.id\n\t\tvar chart\n\t\tvar title\n\t\tvar text\n\t\tvar anim\n\t\tvar wrapper\n\t\tvar capture\n\t\tvar opacity = 0\n\t\tvar position = max\n\t\tvar zIndex = 0\n\t\tvar hidden = true\n\n\t\tif (node.position <= max) {\n\t\t\thidden = false\n\t\t\tzIndex = position = (node.position - 1)\n\t\t\topacity = 1\n\t\t}\n\n\t\t// Create the box\n\t\tif (!this.next.querySelector(`.${id}`)) {\n\t\t\tchart = document.createElement('div')\n\t\t\tchart.setAttribute('class', 'chart')\n\n\t\t\ttitle = document.createElement('div')\n\t\t\ttitle.classList.add('title')\n\t\t\ttitle.innerHTML = charttitle\n\n\t\t\ttext = document.createElement('div')\n\t\t\ttext.classList.add('text')\n\t\t\ttext.appendChild(chart)\n\t\t\ttext.appendChild(title)\n\n\t\t\tanim = document.createElement('div')\n\t\t\tanim.classList.add('anim')\n\t\t\tanim.appendChild(text)\n\n\t\t\ttext = document.createElement('small')\n\t\t\ttext.innerHTML = \"Capture\"\n\n\t\t\tcapture = document.createElement('div')\n\t\t\tcapture.classList.add('capture')\n\t\t\tcapture.appendChild(text)\n\n\t\t\twrapper = document.createElement('div')\n\t\t\twrapper.classList.add(\"statistics\", \"middle\", \"statistics-wrap\", \"attach\", id)\n\t\t\twrapper.appendChild(anim)\n\t\t\twrapper.appendChild(capture)\n\n\t\t\tthis.el.insertAdjacentElement(\"beforeend\", wrapper)\n\t\t}\n\n\t\t// Add  element\n\t\tif (!hidden && !node.attached) {\n\t\t\tvar maxTop = max / (max - 1) * 100\n\n\t\t\tnode.insertTo(this.el.querySelector(`.${id} .chart`))\n\n\t\t\tgsap.set(node.el, {\n\t\t\t\ttop: maxTop + \"%\",\n\t\t\t\topacity: 0,\n\t\t\t\tzIndex: 0,\n\t\t\t})\n\t\t}\n\t\t// Update position\n\t\tif (!hidden || !node.hidden) {\n\t\t\tvar currentTop = position / (max - 1) * 100\n\t\t\tvar length = reduceMotionFilter(1)\n\n\t\t\tgsap.killTweensOf(node.el)\n\t\t\tgsap.to(node.el, {\n\t\t\t\ttop: currentTop + \"%\",\n\t\t\t\topacity: opacity,\n\t\t\t\tzIndex: zIndex,\n\t\t\t\tduration: length / 2,\n\t\t\t\tease: \"power3.out\",\n\t\t\t\tonComplete: function () {\n\t\t\t\t\tif (hidden) {\n\t\t\t\t\t\tnode.destroy()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tnode.hidden = hidden\n\t\t}\n\n\t\tnode.update()\n\t}\n\n\tasync drawAll(plurks) {\n\t\tvar response_percentage = Math.round((this.plurks_count - this.noresponse_count) / this.plurks_count * 100)\n\n\t\tthis.most.responses.draw(plurks)\n\t\tthis.drawGraph('center graph percentage', response_percentage, 'Around <i>' + response_percentage + '%</i> of my plurks got <img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> responses ' + ((response_percentage <= 50) ? '<img src=\"https://api.iconify.design/fluent-emoji:crying-face.svg\" />' : '<img src=\"https://api.iconify.design/fluent-emoji:star-struck.svg\" />'))\n\n\t\tthis.draw('spansmall recievereplurk', this.replurker_count, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> ' + plural(this.replurker_count, 'replurk') + '</i>')\n\t\tthis.most.replurk.draw(plurks)\n\n\t\tthis.most.favorite.draw(plurks)\n\t\tthis.draw('spansmall recievelove', this.favourite_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> ' + plural(this.favourite_count, 'love') + '</i>')\n\n\t\tthis.draw('spansmall privateplurk', this.private_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:lip.svg\" /> ' + plural(this.private_count, 'private plurk') + '</i>')\n\t\tthis.draw('spansmall whisper', this.whispers_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-in-clouds.svg\" /> ' + plural(this.whispers_count, 'whisper') + '</i>')\n\t\tthis.draw('spansmall porn', this.porn_count, 'I posted <i><img src=\"https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg\" /> ' + plural(this.porn_count, 'adult plurk') + '</i>')\n\n\t\tthis.draw('span2 responsecount', `${this.plurks_count} &rarr; ${this.response_count}`, 'I received <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(this.response_count, 'response') + '</i> from <i>' + plural(this.plurks_count, 'plurk') + '</i>')\n\t\tthis.draw('spansmall center coins', this.coins_count, 'I recieved <i><img src=\"https://api.iconify.design/fluent-emoji:coin.svg\" /> ' + plural(this.coins_count, 'coin') + '</i>')\n\n\t\tif (this.favorite_list.length > 0) this.drawUserList(\"avatar\", \"loved\", 'These Plurkers <i><img src=\"https://api.iconify.design/fluent-emoji:red-heart.svg\" /> Loved</i> My Posts', this.favorite_list.sort(this.most.sort))\n\t\tif (this.replurker_list.length > 0) this.drawUserList(\"avatar\", \"replurked\", 'These Plurkers likes to <i><img src=\"https://api.iconify.design/fluent-emoji:megaphone.svg\" /> Replurked</i> My Posts', this.replurker_list.sort(this.most.sort))\n\t}\n}\n\nexport default statistics","\"use strict\"\n\nimport { gsap } from 'gsap'\n\nimport scroll from \"../helpers/scroll.js\"\nimport { reduceMotionFilter } from '../helpers/helper.js'\n\nclass loading {\n\tconstructor(next) {\n\t\tthis.count = 0\n\t\tthis.prev_count = 0\n\t\tthis.counts = -1\n\t\tthis.clean = false\n\t\tthis.next = next\n\t\tthis.parent = this\n\t\tthis.isComplete = function () { return this.count == this.counts }\n\t}\n\n\tdraw(item) {\n\t\treturn new Promise(resolve => {\n\t\t\tvar length = reduceMotionFilter(1)\n\t\t\tthis.prev_count = item\n\n\t\t\tif (!this.next.querySelector(\".statistics.statistics-loading\")) {\n\t\t\t\tthis.parent.statistics.draw(\"statistics-loading\", item + \"%\", \"<i class='month'>Data from \" + this.year + \"</i>. Loading. <small>As long as you didn't close this browser tab, You can resume later by refreshing this page.</small>\")\n\t\t\t}\n\n\t\t\t// Animate loading\n\t\t\tvar load = { progress: this.prev_count }\n\t\t\tgsap.to(load, {\n\t\t\t\tprogress: Math.round(item),\n\t\t\t\tsnap: \"progress\",\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length / 4,\n\t\t\t\tonUpdate: () => {\n\t\t\t\t\tvar el = this.next.querySelector(\".statistics-loading .big\")\n\t\t\t\t\tif (el) el.innerHTML = load.progress + \"%\"\n\t\t\t\t},\n\t\t\t\tonComplete: async () => {\n\t\t\t\t\tif (this.clean) await this.done()\n\t\t\t\t\tresolve()\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\n\tasync loop(length) {\n\t\tthis.clean = true\n\t\tthis.counts = length\n\t\tawait this.draw(0)\n\t}\n\n\tasync update(month, value) {\n\t\tvar el = this.next.querySelector(\".statistics-loading .month\")\n\t\tif (month && el) el.innerHTML = month\n\n\t\tif (this.counts >= 0) {\n\t\t\tthis.count = value ? value : this.count + 1\n\t\t\tawait this.draw(Math.round(100 * (this.count / this.counts)))\n\t\t}\n\t}\n\n\tasync fakeupdate() {\n\t\tif (this.counts >= 0) {\n\t\t\tthis.count++\n\t\t\tif (this.count >= (this.counts - 10)) this.count = (this.counts - 10)\n\t\t\tawait this.draw(100 * (this.count / this.counts))\n\t\t}\n\t}\n\n\tasync forcedone() {\n\t\tthis.count = this.counts\n\t\tawait this.draw(100)\n\t}\n\n\tdone() {\n\t\treturn new Promise(resolve => {\n\t\t\tvar length = reduceMotionFilter(1)\n\n\t\t\tif (this.isComplete()) {\n\t\t\t\tvar el = this.next.querySelector(\".statistics.statistics-loading\")\n\t\t\t\tthis.clean = false\n\t\t\t\tif (el) {\n\t\t\t\t\tgsap.to(el, {\n\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\theight: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t\tduration: length / 2,\n\t\t\t\t\t\tease: \"power3.out\",\n\t\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\t\tel.remove()\n\t\t\t\t\t\t\tscroll.refresh()\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} else resolve()\n\t\t})\n\t}\n}\n\nexport default loading","\n// Scroll Animation\nclass scroll {\n\tconstructor(next) {\n\t\tthis.next = next\n\t}\n\n\tcredits(tl) {\n\t\tvar length = reduceMotionFilter(1)\n\n\t\ttl.fromTo(this.next.querySelectorAll(\"#credits .like, #credits .noaffiliation, #credits .made\"), {\n\t\t\ty: window.innerHeight * 1 / 8\n\t\t}, {\n\t\t\ty: 0,\n\t\t\tease: \"linear\",\n\t\t\tduration: length * 2,\n\t\t}, 0)\n\t\ttl.fromTo(this.next.querySelectorAll(\"#credits .like, #credits .noaffiliation\"), {\n\t\t\topacity: 0\n\t\t}, {\n\t\t\topacity: 1,\n\t\t\tstagger: {\n\t\t\t\tfrom: 'end',\n\t\t\t\tamount: length / 10\n\t\t\t},\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\"\n\t\t}, 0)\n\t\ttl.fromTo(this.next.querySelectorAll(\"#credits .made\"), {\n\t\t\topacity: 0\n\t\t}, {\n\t\t\topacity: 1,\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\"\n\t\t}, length * 3 / 10)\n\n\t\treturn tl\n\t}\n\n\tstatistics() {\n\t\t// Scroll animate statistics\n\t\tscroll.push(tl => this.credits(tl), tl => ScrollTrigger.create({\n\t\t\ttrigger: this.next.querySelectorAll(\"#statistics\"),\n\t\t\tstart: \"100%-=\" + window.innerHeight + \" 0\",\n\t\t\tend: \"100% 0\",\n\t\t\tanimation: tl,\n\t\t\tscrub: .5\n\t\t}))\n\t}\n\n\tpermisions() {\n\t\t// Scroll animation permission section\n\t\tscroll.push((tl) => {\n\t\t\ttl.fromTo(this.next.querySelectorAll(\"#permission form\"), {\n\t\t\t\ty: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -3 / 4,\n\t\t\t\tease: \"linear\"\n\t\t\t}, 0)\n\t\t\ttl.fromTo(this.next.querySelectorAll(\"#permission .bgtext sup\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * -1 / 10,\n\t\t\t\trotation: -10,\n\t\t\t\tease: \"linear\"\n\t\t\t}, 0)\n\t\t\ttl.fromTo(this.next.querySelectorAll(\"#permission .bgtext sub\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * 1 / 10,\n\t\t\t\trotation: 10,\n\t\t\t\tease: \"linear\"\n\t\t\t}, 0)\n\t\t\treturn tl\n\t\t}, (tl) => {\n\t\t\treturn ScrollTrigger.create({\n\t\t\t\ttrigger: this.next.querySelectorAll(\"#permission\"),\n\t\t\t\tstart: \"0 0\",\n\t\t\t\tend: \"100% 0\",\n\t\t\t\tanimation: tl,\n\t\t\t\tscrub: .5\n\t\t\t})\n\t\t})\n\t\tscroll.push((tl) => {\n\t\t\ttl = this.credits(tl)\n\t\t\treturn tl\n\t\t}, (tl) => {\n\t\t\treturn ScrollTrigger.create({\n\t\t\t\ttrigger: this.next.querySelectorAll(\"#permission\"),\n\t\t\t\tstart: \"0 0\",\n\t\t\t\tend: \"100% 0\",\n\t\t\t\tanimation: tl,\n\t\t\t\tscrub: .5\n\t\t\t})\n\t\t})\n\t}\n\n\tmenu() {\n\t\t// Scroll animation menu and logout\n\t\tscroll.push(tl => tl, tl => {\n\t\t\treturn ScrollTrigger.create({\n\t\t\t\ttrigger: 'main',\n\t\t\t\tstart: \"0 0\",\n\t\t\t\tend: \"100% 0\",\n\t\t\t\tanimation: tl,\n\t\t\t\tonUpdate: update => {\n\t\t\t\t\tvar el1 = '.logo, .size, .lamp, .switch'\n\t\t\t\t\tvar el2 = el1 + \", .footer > *\"\n\n\t\t\t\t\tif (update.direction > 0) {\n\t\t\t\t\t\tgsap.killTweensOf(_qAll(el2))\n\t\t\t\t\t\tgsap.to(_qAll(el1), { y: -100, opacity: 0 })\n\t\t\t\t\t\tgsap.to(_qAll('.footer > *'), { y: 100, opacity: 0 })\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgsap.to(_qAll(el2), { y: 0, opacity: 1 })\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\n\tbrowserBar(login = true) {\n\t\tif (login) {\n\t\t\tscroll.push((tl) => {\n\t\t\t\treturn tl\n\t\t\t}, (tl) => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: '#hello',\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: true,\n\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\tthis.browserColor(\"white\")\n\t\t\t\t\t},\n\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\tthis.browserColor(\"green\")\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t\tscroll.push((tl) => {\n\t\t\t\treturn tl\n\t\t\t}, (tl) => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: '#statistics',\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: true,\n\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\tthis.browserColor(\"yellow\")\n\t\t\t\t\t},\n\t\t\t\t\tonEnter: () => {\n\t\t\t\t\t\tthis.browserColor(\"white\")\n\t\t\t\t\t},\n\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\tthis.browserColor(\"white\")\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\tscroll.push((tl) => {\n\t\t\t\treturn tl\n\t\t\t}, (tl) => {\n\t\t\t\treturn ScrollTrigger.create({\n\t\t\t\t\ttrigger: '#permission',\n\t\t\t\t\tstart: \"0 0\",\n\t\t\t\t\tend: \"100% 10px\",\n\t\t\t\t\tanimation: tl,\n\t\t\t\t\tscrub: true,\n\t\t\t\t\tonLeave: () => {\n\t\t\t\t\t\tthis.browserColor(\"yellow\")\n\t\t\t\t\t},\n\t\t\t\t\tonEnterBack: () => {\n\t\t\t\t\t\tthis.browserColor(\"green\")\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n}\n\nexport default scroll","\"use strict\";\n\nimport { gsap } from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger.js'\nimport api from \"../helpers/api.js\"\nimport scroll from \"../helpers/scroll.js\"\nimport darkmode from \"../helpers/darkmode.js\"\nimport animate from \"../helpers/animate.js\"\nimport { _q, _qAll, plural, monthNames, reduceMotionFilter } from '../helpers/helper.js'\n\nimport friends from \"./friends.js\"\nimport statistics from \"./statistics.js\"\nimport loading from './loading.js'\nimport scrollStatt from './scroll.js';\n\n/*\n\tReplurk class\n*/\nclass replurk {\n\tconstructor(year) {\n\t\t// Draw in which element?\n\t\tthis.next = document.createElement('div');\n\t\t// Plurks array\n\t\tthis.plurks = [];\n\t\t// Plurker profile object\n\t\tthis.me = {}\n\t\t// Friends object\n\t\tthis.friends = new friends()\n\t\t// Statistics plurker object renderer\n\t\tthis.statistics = new statistics()\n\t\t// Loading object\n\t\tthis.loading = new loading()\n\t\t// Scrolling animation\n\t\tthis.scroll = new scrollStatt(this.next)\n\n\t\t// Which year?\n\t\tthis.year = year;\n\t\tthis.startDate = this.year + '-10-29T09:00:00';\n\t\tthis.endDate = new Date((this.year - 1) + '-10-29T09:00:00');\n\t\tthis.days = 60 * 60 * 24 * 1000;\n\t\tthis.fulldays = 365;\n\t}\n\n\t// Browser color\n\tgetSetStateColor(state) {\n\t\tif (typeof (state) == \"object\" && state.length >= 1) {\n\t\t\tif (state.length == 1) {\n\t\t\t\tdarkmode.browserColorDark = state[0];\n\t\t\t\tdarkmode.browserColorLight = state[0];\n\t\t\t} else {\n\t\t\t\tdarkmode.browserColorDark = state[1];\n\t\t\t\tdarkmode.browserColorLight = state[0];\n\t\t\t}\n\t\t} else if (state == \"green\") {\n\t\t\tdarkmode.browserColorDark = \"#0d4f03\";\n\t\t\tdarkmode.browserColorLight = \"#60e670\";\n\t\t} else if (state == \"yellow\") {\n\t\t\tdarkmode.browserColorDark = \"#705f02\";\n\t\t\tdarkmode.browserColorLight = \"#FFD700\";\n\t\t} else {\n\t\t\tdarkmode.browserColorDark = \"#000000\";\n\t\t\tdarkmode.browserColorLight = \"#FFFFFF\";\n\t\t}\n\n\t\treturn [darkmode.browserColorLight, darkmode.browserColorDark];\n\t}\n\tbrowserColor(state, duration, ease) {\n\t\tthis.getSetStateColor(state);\n\t\tdarkmode.setDarkMode(duration, ease);\n\t}\n\n\t// Show/hide Animations\n\t// Login Pages\n\tshowLoginPage(tl) {\n\t\tvar next = this.next;\n\t\tvar length = reduceMotionFilter(1);\n\n\t\tthis.browserColor(\"green\", 1);\n\t\ttl.fromTo(next.querySelectorAll(\"#permission\"), {\n\t\t\tposition: \"fixed\",\n\t\t\tdisplay: \"\",\n\t\t\topacity: 0,\n\t\t\ttop: 0\n\t\t}, {\n\t\t\topacity: 1,\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\"\n\t\t});\n\t\ttl.fromTo(next.querySelectorAll(\"#permission .bgtext *\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tstagger: length / 5,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\",\n\t\t\tonComplete: () => {\n\t\t\t\tgsap.set(next.querySelectorAll(\"#permission\"), {\n\t\t\t\t\tposition: \"\",\n\t\t\t\t\ttop: \"\"\n\t\t\t\t});\n\t\t\t}\n\t\t}, \">-\" + (length / 2));\n\n\t\treturn tl;\n\t}\n\thideLoginPage(tl) {\n\t\tvar next = this.next;\n\t\tvar length = reduceMotionFilter(1);\n\n\t\ttl.set(next.querySelectorAll(\"#permission\"), {\n\t\t\tposition: \"fixed\",\n\t\t\ttop: 0,\n\t\t});\n\t\ttl.fromTo(next.querySelectorAll(\"#permission .bgtext *, #permission form\"), {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t}, {\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t\tstagger: {\n\t\t\t\tfrom: \"end\",\n\t\t\t\tamount: length / 5\n\t\t\t},\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\",\n\t\t\tonComplete: () => {\n\t\t\t\tthis.browserColor(\"yellow\");\n\t\t\t}\n\t\t});\n\t\ttl.fromTo(next.querySelectorAll(\"#permission\"), {\n\t\t\topacity: 1\n\t\t}, {\n\t\t\topacity: 0,\n\t\t\tduration: length,\n\t\t\tease: \"power3.in\",\n\t\t\tonComplete: () => {\n\t\t\t\tgsap.set(next.querySelectorAll(\"#permission\"), {\n\t\t\t\t\tposition: \"\",\n\t\t\t\t\tdisplay: \"none\",\n\t\t\t\t\ttop: \"\"\n\t\t\t\t}, \">\");\n\t\t\t}\n\t\t}, \">-\" + (length / 4));\n\n\t\treturn tl;\n\t}\n\t// Statistic Pages\n\tshowStatisticPages() {\n\t\treturn new Promise(resolve => {\n\t\t\tvar next = this.next;\n\t\t\tvar length = reduceMotionFilter(1);\n\t\t\tvar tl = gsap.timeline();\n\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tduration: length,\n\t\t\t\tonStart: () => this.browserColor(\"green\", .5)\n\t\t\t}, length / 4);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext > *\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: length / 5,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, length / 2);\n\t\t\ttl.fromTo(next.querySelectorAll(\" #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: length / 5,\n\t\t\t\tease: \"power3.out\"\n\t\t\t}, length / 2);\n\t\t\ttl.fromTo(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n\t\t\t\tdisplay: \"\",\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length / 2,\n\t\t\t\tonComplete: () => resolve()\n\t\t\t}, length / 2);\n\t\t});\n\t}\n\thideStatisticPages() {\n\t\treturn new Promise(async resolve => {\n\t\t\tvar next = this.next;\n\t\t\tvar length = reduceMotionFilter(1);\n\t\t\tvar tl = gsap.timeline();\n\n\t\t\tawait animate.top(next);\n\n\t\t\ttl.fromTo(next.querySelectorAll(\".footer > *, #hello .bgtext > *, #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0\n\t\t\t}, {\n\t\t\t\topacity: 0,\n\t\t\t\ty: 200,\n\t\t\t\tduration: length,\n\t\t\t\tstagger: {\n\t\t\t\t\tfrom: \"end\",\n\t\t\t\t\tamount: length / 5\n\t\t\t\t},\n\t\t\t\tease: \"power3.in\"\n\t\t\t}, length / 5);\n\t\t\ttl.set(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n\t\t\t\topacity: 0\n\t\t\t}, length / 2);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello\"), {\n\t\t\t\topacity: 1\n\t\t\t}, {\n\t\t\t\topacity: 0,\n\t\t\t\tduration: length,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tgsap.set(next.querySelectorAll(\".grant\"), { display: \"none\" });\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}, length / 2);\n\t\t});\n\t}\n\n\t// Login messages\n\tmessage(message, quick) {\n\t\tvar next = this.next;\n\n\t\tvar loginmessage = next.querySelector(\"#login-message\");\n\n\t\tif (quick) {\n\t\t\tloginmessage.innerHTML = message;\n\t\t} else {\n\t\t\tgsap.to(loginmessage, {\n\t\t\t\topacity: 0,\n\t\t\t\tonComplete: function () {\n\t\t\t\t\tloginmessage.innerHTML = message;\n\t\t\t\t\tgsap.to(loginmessage, {\n\t\t\t\t\t\topacity: 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t// Logout\n\tasync requestLogout() {\n\t\tvar tl = gsap.timeline();\n\n\t\tapi.abort();\n\n\t\t// Hide statistic pages\n\t\tawait this.hideStatisticPages(tl);\n\n\t\t// Logout\n\t\tawait api.call(\"?fetch=logout\");\n\t\tthis.statistics.clear();\n\n\t\t// Disconnect any api connection\n\t\tapi.clear();\n\n\t\t// Display login\n\t\tthis.login();\n\n\t\tscroll.refresh();\n\t}\n\n\t// Request token\n\tasync requestToken(text) {\n\t\tvar next = this.next;\n\t\tvar length = reduceMotionFilter(1);\n\t\tvar tokenlink = next.querySelector(\"#tokenurl\");\n\t\ttokenlink.textContent = \"Connecting Plurk...\";\n\n\t\tvar tl = gsap.timeline();\n\t\ttl.fromTo(next.querySelectorAll(\"#permission form\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 200,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\"\n\t\t}, length);\n\t\ttl.fromTo(next.querySelectorAll(\"#permission h1, #permission li\"), {\n\t\t\tdisplay: \"\",\n\t\t\ty: 50,\n\t\t\topacity: 0,\n\t\t}, {\n\t\t\ty: 0,\n\t\t\topacity: 1,\n\t\t\tstagger: length / 10,\n\t\t\tduration: length,\n\t\t\tease: \"power3.out\"\n\t\t}, length);\n\n\t\tapi.call(\"?request=token\").then(data => {\n\t\t\tif (text) {\n\t\t\t\tmessage(text);\n\t\t\t} else {\n\t\t\t\ttokenlink.textContent = \"Grant Access\";\n\t\t\t\ttokenlink.setAttribute(\"href\", api.url + \"?redirect=\" + data.message.url);\n\t\t\t}\n\t\t}, () => {\n\t\t\tmessage(\"Error when requesting verification from Plurk, please reload your browser again.\");\n\t\t});\n\n\t\tif (!text) next.querySelector(\"#permission form\").style.display = \"none\";\n\t}\n\n\t// Display current Plurker data\n\tasync displayPlurkerData() {\n\t\tvar plurker = this.me;\n\t\tvar next = this.next;\n\t\tvar extra = \"\";\n\t\tvar length = reduceMotionFilter(1);\n\n\t\t// plurks_count\n\t\tvar days = (plurker.anniversary.years * 365) + plurker.anniversary.days;\n\t\tvar responses = Math.round(plurker.response_count / days);\n\n\t\tnext.querySelector(\"#hello .thumbs\").innerHTML = \"<img src='\" + plurker.avatar_big + \"' />\";\n\t\tif (this.year == 2021) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>If \" + this.year + \" have been a rough year you, hopefully RePlurk will cheer you by bringing some good memories</p>\";\n\t\telse if (this.year == 2022) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>It's 2020 v2, and this is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\t\telse next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>This is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\n\t\t// Draw statistic\n\t\tthis.statistics.title('All Time', 'alltime');\n\t\tif (plurker.anniversary.years && plurker.anniversary.days) {\n\t\t\tthis.statistics.draw('spansmall center posted', Math.round(plurker.plurks_count / days), 'I posted around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(Math.round(plurker.plurks_count / days), \"plurk\") + \" per day</i>\");\n\n\t\t\t// Responses\n\t\t\tvar oneday = 16;\n\t\t\tif (responses <= oneday) extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday / responses), \"hour\") + '</i>';\n\t\t\telse extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday * 60 / responses), \"minute\") + '</i>';\n\t\t\tthis.statistics.draw('span2 center responded', responses, 'I responded around <i><img src=\"https://api.iconify.design/fluent-emoji:left-speech-bubble.svg\" /> ' + plural(responses, \"time\") + \"</i> per day. \" + extra + \" when I'm not sleeping\");\n\n\t\t\tvar join = new Date(plurker.join_date)\n\t\t\tthis.statistics.draw('spansmall center anniversary', \"<strong><i>\" + monthNames[join.getMonth()] + \"</i> <i>\" + join.getFullYear() + \"</i></strong> <em>\" + join.getDate() + \"</em>\", \"I joined Plurk <i>\" + plural(plurker.anniversary.years, \"year\") + \"</i> and <i>\" + plural(plurker.anniversary.days, \"day\") + \"</i> ago\");\n\t\t\tthis.statistics.draw('spansmall center badges', plurker.badges.length, \"I have <i><img src='https://api.iconify.design/fluent-emoji:shield.svg' /> \" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n\t\t} else {\n\t\t\tthis.statistics.draw('', '-', \"There is no data in my timeline\");\n\t\t\tthis.statistics.draw('', plurker.badges.length, \"But at least I have <i>\" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n\t\t}\n\n\t\t// Scroll animation hello section\n\t\tscroll.push(tl => {\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .text, #hello .thumbs\"), {\n\t\t\t\ty: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -3 / 4,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext sup\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * -1 / 10,\n\t\t\t\trotation: -10,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .bgtext sub\"), {\n\t\t\t\ty: 0,\n\t\t\t\tx: 0,\n\t\t\t\trotation: 0\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * -1 / 4,\n\t\t\t\tx: window.innerHeight * 1 / 10,\n\t\t\t\trotation: 10,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length,\n\t\t\t}, 0);\n\t\t\ttl.fromTo(next.querySelectorAll(\"#hello .arrow-big\"), {\n\t\t\t\ty: 0,\n\t\t\t\topacity: 1\n\t\t\t}, {\n\t\t\t\ty: window.innerHeight * 1 / 4,\n\t\t\t\topacity: 0,\n\t\t\t\tease: \"linear\",\n\t\t\t\tduration: length / 4,\n\t\t\t}, 0);\n\t\t\treturn tl;\n\t\t}, tl => ScrollTrigger.create({\n\t\t\ttrigger: next.querySelectorAll(\"#hello\"),\n\t\t\tstart: \"0 0\",\n\t\t\tend: \"100% 0\",\n\t\t\tanimation: tl,\n\t\t\tscrub: true\n\t\t}));\n\t\tscroll.refresh();\n\t}\n\t// Display statistics\n\tasync displayStatistics() {\n\t\tthis.statistics.title('This Year', 'thisyear');\n\t\tthis.statistics.draw(\"statistics-loading thisyearloading\", \"\", \"<i class='month'>Data from December</i>1 of 2. Loading \" + this.year + \" timeline. It can take up to 1 minute.\");\n\n\t\tthis.loading = new loading(this.next);\n\t\tthis.loading.loop(this.fulldays);\n\n\t\t// Load loop timeline\n\t\tvar getTimeline = async (offset) => {\n\t\t\toffset = (!offset) ? \"\" : \"&offset=\" + offset;\n\n\t\t\tvar data = await api.call(\"?fetch=plurk&filter=my\" + offset, 1);\n\t\t\tif (data.success) {\n\t\t\t\tthis.friends.add(data.message.plurk_users);\n\t\t\t\tthis.plurks = this.plurks.concat(data.message.plurks);\n\n\t\t\t\tif (data.message.plurks.length > 0) {\n\t\t\t\t\tvar lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\n\t\t\t\t\tif (lastposted >= this.endDate) {\n\t\t\t\t\t\tthis.loading.update(\"Data from \" + monthNames[lastposted.getMonth()] + \" \" + lastposted.getFullYear(), this.fulldays - Math.floor((lastposted - this.endDate) / this.days));\n\n\t\t\t\t\t\t// Load next plurks\n\t\t\t\t\t\tawait getTimeline(data.message.offset);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twhile (lastposted < this.endDate && this.plurks.length > 1) {\n\t\t\t\t\t\t\tthis.plurks.pop();\n\t\t\t\t\t\t\tlastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait this.loading.forcedone();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait this.loading.forcedone();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.requestLogout();\n\t\t\t}\n\t\t}\n\t\tawait getTimeline(this.startDate);\n\n\t\t// When loading done\n\t\tvar largest_poll_result = 0;\n\t\tif (this.plurks.length > 1) {\n\t\t\t// Count user statistics\n\t\t\tthis.statistics.plurks_count = 0;\n\t\t\tthis.plurks.forEach(plurk => {\n\t\t\t\t// Calculate the statistics\n\t\t\t\tif (plurk.responded) this.statistics.responded_count++;\n\t\t\t\tif (plurk.owner_id == this.me.id) {\n\t\t\t\t\tthis.statistics.plurks_count++;\n\t\t\t\t\tthis.statistics.replurker_count += plurk.replurkers.length;\n\t\t\t\t\tthis.statistics.replurker_list = this.statistics.listCount(this.statistics.replurker_list, plurk.replurkers);\n\t\t\t\t\tthis.statistics.favourite_count += plurk.favorers.length;\n\t\t\t\t\tthis.statistics.favorite_list = this.statistics.listCount(this.statistics.favorite_list, plurk.favorers);\n\t\t\t\t\tif (plurk.anonymous) this.statistics.whispers_count++;\n\t\t\t\t\tif (plurk.coins) this.statistics.coins_count += plurk.coins;\n\t\t\t\t\tif (plurk.porn) this.statistics.porn_count++;\n\t\t\t\t\tif (!plurk.response_count) this.statistics.noresponse_count++;\n\t\t\t\t\tif (plurk.plurk_type == 3) this.statistics.private_count++;\n\t\t\t\t\tthis.statistics.response_count += plurk.response_count;\n\n\t\t\t\t\tif (plurk.content_raw.includes(\"instagram.com\")) this.statistics.instagrammer_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"facebook.com\")) this.statistics.facebooker_count++;\n\t\t\t\t\telse if (plurk.content_raw.includes(\"fb.watch\")) this.statistics.facebooker_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"twitter.com\")) this.statistics.twitterer_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"reddit.com\")) this.statistics.redditor_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"tiktok.com\")) this.statistics.tiktoker_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"imgur.com\")) this.statistics.imgurer_count++;\n\t\t\t\t\tif (plurk.content_raw.includes(\"youtube.com\")) this.statistics.youtuber_count++;\n\n\t\t\t\t\t// Calculate polls\n\t\t\t\t\tif (plurk.with_poll) {\n\t\t\t\t\t\tvar response_count = plurk.poll.response.response_count;\n\t\t\t\t\t\tthis.statistics.poll_count++;\n\t\t\t\t\t\tthis.statistics.poll_responder_count += response_count;\n\n\t\t\t\t\t\tif (largest_poll_result < response_count) {\n\t\t\t\t\t\t\tlargest_poll_result = response_count;\n\t\t\t\t\t\t\tthis.statistics.poll_popular_plurk = plurk;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (plurk.responded) this.statistics.responded_other_count++;\n\t\t\t});\n\n\t\t\t// Sort based on date\n\t\t\tthis.plurks.sort((a, b) => new Date(b.posted) - new Date(a.posted));\n\n\t\t\t// Draw statistics\n\t\t\ttry {\n\t\t\t\tawait this.statistics.drawAll(this.plurks);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.info(\"Error while counting statistics\", error);\n\t\t\t}\n\n\t\t\t// Display extended statistics\n\t\t\tthis.displayExtendedStatistics();\n\t\t} else {\n\t\t\tif (this.plurks[0]) {\n\t\t\t\tvar date = new Date(plurk[0].posted);\n\t\t\t\tthis.statistics.inactive.draw(plurk[0], date.getFullYear());\n\t\t\t}\n\t\t\telse this.statistics.inactive.empty();\n\t\t}\n\t}\n\t// Display extended statistics\n\tasync displayExtendedStatistics() {\n\t\t// Deeper user statistics\n\t\tthis.statistics.title('Dig Deeper', 'digdeeper');\n\t\tthis.statistics.draw(\"statistics-loading digdeeperloading\", \"\", \"<i class='month'>Data from \" + this.year + \"</i> 2 of 2. Loading all responses. <small>If the loading seems to stop, refresh your browser tab to resume your download. Closing your browser tab will clear all downloaded data.</small>\");\n\n\t\t// Load each post responses and calculate statistics\n\t\tthis.loading = new loading(this.next);\n\t\tthis.loading.loop(this.plurks.length);\n\n\t\t// Get the responses for each plurks in parallel\n\t\tthis.plurks.sort((a, b) => new Date(a.posted) < new Date(b.posted));\n\t\tfor (var plurk of this.plurks) {\n\t\t\tvar date = new Date(plurk.posted);\n\t\t\tthis.loading.update(\"Data from \" + monthNames[date.getMonth()] + \" \" + date.getFullYear());\n\n\t\t\t// Count all\n\t\t\tawait this.statistics.most.countAll(plurk);\n\n\t\t\t// Count responses\n\t\t\tif (plurk.response_count > 0 && (plurk.responded || plurk.owner_id == this.me.id)) {\n\t\t\t\tvar result = await api.call(\"?fetch=response&plurk_ids=\" + plurk.plurk_id);\n\t\t\t\tif (result.success) for (var message of result.message) {\n\t\t\t\t\t// Add friends from response lists\n\t\t\t\t\tthis.friends.add(message.friends);\n\n\t\t\t\t\t// Count the rest of statistics\n\t\t\t\t\tfor (var response of message.responses) {\n\t\t\t\t\t\t// Find and count all responders\n\t\t\t\t\t\tawait this.statistics.most.responders.count(response);\n\t\t\t\t\t\tthis.statistics.most.interaction.count(response);\n\t\t\t\t\t\tthis.statistics.most.mvp.count(response, \"response\");\n\t\t\t\t\t\t// Count all\n\t\t\t\t\t\tawait this.statistics.most.countAll(response);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.requestLogout();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Display How Many Links\n\t\tthis.statistics.most.links.drawLinks();\n\t\t// Display How Many Pictures\n\t\tthis.statistics.most.links.drawPics();\n\n\t\t// Draw Results\n\t\t// Display Most Responder\n\t\t// this.statistics.most.responders.draw();\n\n\t\t// Display Most Interaction\n\t\tthis.statistics.most.interaction.draw();\n\n\t\t// Display Most Mentioned by me\n\t\t// this.statistics.most.mentions.draw();\n\n\t\t// Display How Many Words-Characters\n\t\tthis.statistics.most.types.draw();\n\n\t\t// Display Most hashtags by me\n\t\tthis.statistics.most.hashtags.draw();\n\n\t\t// Display Most My Emoticons\n\t\tthis.statistics.most.myemoticons.draw();\n\n\t\t// Display MVP\n\t\tthis.statistics.replurker_list.forEach(value => {\n\t\t\tthis.statistics.most.mvp.count({ user_id: value.id, count: value.count }, \"replurk\");\n\t\t});\n\t\tthis.statistics.favorite_list.forEach(value => {\n\t\t\tthis.statistics.most.mvp.count({ user_id: value.id, count: value.count }, \"favorite\");\n\t\t});\n\t\tthis.statistics.most.mvp.draw();\n\n\t\t// Replurk Badges\n\t\tvar gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Leader\";\n\t\tif (this.me.gender == 1) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> King\";\n\t\tif (this.me.gender == 0) gender = \"<img src='https://api.iconify.design/fluent-emoji:crown.svg' /> Queen\";\n\n\t\tvar tiktok = \"<img src='https://api.iconify.design/fluent-emoji:mirror-ball.svg' />\";\n\t\tif (this.me.gender == 1) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:man-dancing-medium-dark-skin-tone.svg' />\";\n\t\tif (this.me.gender == 0) tiktok = \"<img src='https://api.iconify.design/fluent-emoji:woman-dancing-medium-dark-skin-tone.svg' />\";\n\n\t\tvar facebook = \"<img src='https://api.iconify.design/fluent-emoji:older-person.svg' />\";\n\t\tif (this.me.gender == 1) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-man.svg' />\";\n\t\tif (this.me.gender == 0) facebook = \"<img src='https://api.iconify.design/fluent-emoji:old-woman.svg' />\";\n\n\t\tvar plurker = \"<img src='https://api.iconify.design/fluent-emoji:person-bowing.svg' />\";\n\t\tif (this.me.gender == 1) plurker = \"<img src='https://api.iconify.design/fluent-emoji:man-bowing.svg' />\";\n\t\tif (this.me.gender == 0) plurker = \"<img src='https://api.iconify.design/fluent-emoji:woman-bowing.svg' />\";\n\n\t\tthis.statistics.title('RePlurk Badges', 'replurkbadges');\n\t\tthis.statistics.body(`\\\n\t\t\t<h4>What are RePlurk Badges consist of?</h4>\\\n\t\t\t<p>They are badges based on your activities in Plurk. Currently there are 16 badges in total, for activities such as:</p>\\\n\t\t\t<ol>\\\n\t\t\t\t<li>Creating lots of polls (Polling ${gender})</li>\\\n\t\t\t\t<li>Receiving lots of coins (Plurk Coins Billionaire)</li>\\\n\t\t\t\t<li>Writing lots of posts (Novelist and Keyboard Warrior)</li>\\\n\t\t\t\t<li>Sharing lots of pictures and links (Meme Lord & Missing Link)</li>\\\n\t\t\t\t<li>Sharing social medias urls (there are 7 badges)</li>\\\n\t\t\t\t<li>Posting lots of adult posts (Adult-er)</li>\\\n\t\t\t\t<li>Getting lots of replurks (Trendsetter)</li>\\\n\t\t\t\t<li>and, Constantly posting in Plurk almost everyday (Active Plurker)</li>\\\n\t\t\t</ol>\\\n\t\t\t`, `replurkbadges description`);\n\t\tif (this.statistics.poll_count >= 5) this.statistics.draw('spansmall spanhalf center badges pollbadges', \"<img src='https://api.iconify.design/fluent-emoji:ballot-box-with-ballot.svg' />\", \"<strong>Polling \" + gender + \"</strong>\");\n\t\tif (this.statistics.coins_count >= 5) this.statistics.draw('spansmall spanhalf center badges coinbadges', \"<img src='https://api.iconify.design/fluent-emoji:coin.svg' />\", \"<strong>Plurk Coins Billionaire</strong>\");\n\t\tif (this.statistics.most.types.words >= 50000) this.statistics.draw('spansmall spanhalf center badges novelistbadges', \"<img src='https://api.iconify.design/fluent-emoji:orange-book.svg' />\", \"<strong>Novelist</strong>\");\n\t\tif (this.statistics.most.types.chars >= 1000000) this.statistics.draw('spansmall spanhalf center badges keyboardbadges', \"<img src='https://api.iconify.design/fluent-emoji:keyboard.svg' />\", \"<strong>Keyboard Warrior</strong>\");\n\t\tif (this.statistics.most.links.pics.length >= 356) this.statistics.draw('spansmall spanhalf center badges memebadges', \"<img src='https://api.iconify.design/fluent-emoji:cat.svg' />\", \"<strong>Meme Lord</strong>\");\n\t\tif (this.statistics.most.links.links.length >= 356 / 2) this.statistics.draw('spansmall spanhalf center badges missingbadges', \"<img src='https://api.iconify.design/fluent-emoji:orangutan.svg' />\", \"<strong>The Missing Link</strong>\");\n\t\tif (this.statistics.instagrammer_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:camera.svg' />\", \"<strong>Instagrammer</strong>\");\n\t\tif (this.statistics.facebooker_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', facebook, \"<strong>Facebooker</strong>\");\n\t\tif (this.statistics.twitterer_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:hatching-chick.svg' />\", \"<strong>The Real Chief Twit</strong>\");\n\t\tif (this.statistics.redditor_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:robot.svg' />\", \"<strong>/r</strong>\");\n\t\tif (this.statistics.tiktoker_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', tiktok, \"<strong>Tiktoker</strong>\");\n\t\tif (this.statistics.imgurer_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:framed-picture.svg' />\", \"<strong>Imgur-er</strong>\");\n\t\tif (this.statistics.youtuber_count >= 10) this.statistics.draw('spansmall spanhalf center badges socmedbadges', \"<img src='https://api.iconify.design/fluent-emoji:movie-camera.svg' />\", \"<strong>Youtuber <img src='https://api.iconify.design/fluent-emoji:sleepy-face.svg' /></strong>\");\n\t\tif (this.statistics.porn_count >= 10) this.statistics.draw('spansmall spanhalf center badges adultbadges', \"<img src='https://api.iconify.design/fluent-emoji:face-with-peeking-eye.svg' />\", \"<strong>Adult-er</strong>\");\n\t\tif (this.statistics.replurker_count >= 50) this.statistics.draw('spansmall spanhalf center badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:trophy.svg' />\", \"<strong>Trendsetter</strong>\");\n\t\tif (this.statistics.plurks_count >= 356 * 1.5) this.statistics.draw('spansmall spanhalf center badges plurkerbadges', \"<img src='https://api.iconify.design/fluent-emoji:military-medal.svg' />\", \"<strong>Active Plurker \" + plurker + \"</strong>\");\n\n\t\tthis.logSessionStrorageSize();\n\t}\n\n\t// Display LocalStorage stats\n\tlogSessionStrorageSize() {\n\t\tfunction getSessionStorageSize() {\n\t\t\tvar totalBytes = 0;\n\n\t\t\tfor (var key in sessionStorage) {\n\t\t\t\tif (sessionStorage.hasOwnProperty(key)) {\n\t\t\t\t\tvar itemValue = sessionStorage.getItem(key);\n\t\t\t\t\ttotalBytes += itemValue.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Convert bytes to Megabytes\n\t\t\tvar totalMegabytes = Math.round((totalBytes / 1024 / 1024) * 100) / 100;\n\n\t\t\treturn totalMegabytes;\n\t\t}\n\n\t\t// Usage\n\t\tvar sessionStorageSize = getSessionStorageSize();\n\t\tconsole.info('SessionStorage Size: ' + sessionStorageSize + ' MB');\n\t}\n\n\t// Check login status\n\tasync login(clear) {\n\t\tvar next = this.next;\n\n\t\tthis.me = { id: 0 }\n\t\tthis.plurks = [];\n\n\t\tscroll.destroy();\n\n\t\twindow.scrollTo(0, 0);\n\t\tthis.browserColor(\"yellow\");\n\n\t\t// Scroll animation menu and logout\n\t\tthis.scroll.menu();\n\n\t\t// Check is server have open session\n\t\tvar tl = gsap.timeline();\n\t\ttl.set(next.querySelector(\"#hello .arrow-big\"), {\n\t\t\topacity: 0\n\t\t});\n\n\t\tvar data = await api.call(\"?\");\n\t\tvar interval = null;\n\t\tif (data.success) {\n\t\t\tthis.me = data.message\n\t\t\tthis.friends = new friends()\n\t\t\tthis.statistics = new statistics(next, this.me, this.friends, this.year)\n\n\t\t\t// Initial Plurk statistics\n\t\t\tawait this.displayPlurkerData();\n\n\t\t\t// Display the rest of the statistics\n\t\t\tthis.displayStatistics();\n\n\t\t\t// Scroll top top\n\t\t\tawait animate.top(next);\n\n\t\t\t// Hide login page\n\t\t\tif (clear) next.querySelector(\"#permission\").style.display = \"none\";\n\t\t\telse tl = this.hideLoginPage(tl);\n\n\t\t\t// Show statistic pages\n\t\t\tawait this.showStatisticPages(tl);\n\n\t\t\t// Add logout event\n\t\t\tnext.querySelector(\"#logout\").onclick = () => this.requestLogout();\n\n\t\t\t// Scroll animate statistics\n\t\t\tthis.scroll.statistics();\n\t\t\t// Scroll browser bar\n\t\t\tthis.scroll.browserBar();\n\n\t\t\tscroll.refresh();\n\t\t} else {\n\t\t\t// Hide statistic pages\n\t\t\tif (clear) next.querySelectorAll(\".grant\").forEach(function (el) { el.style.display = \"none\"; });\n\t\t\t// Show login page\n\t\t\tthis.showLoginPage(tl);\n\t\t\t// Request token\n\t\t\tthis.requestToken();\n\n\t\t\t// Scroll animation permission section\n\t\t\tthis.scroll.permisions();\n\t\t\t// Scroll browser bar\n\t\t\tthis.scroll.browserBar(false);\n\n\t\t\tscroll.refresh();\n\n\t\t\t// Automatic login\n\t\t\tinterval = setInterval(async () => {\n\t\t\t\tvar data = await api.call(\"?\");\n\n\t\t\t\tif (data.success) {\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tthis.login();\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\t// Snap\n\t\tnext.querySelectorAll(\"section.snap\").forEach(el => scroll.snap(el));\n\t\tnext.querySelectorAll(\"section.snap-bottom\").forEach(el => scroll.snap(el, \"bottom\"));\n\t}\n\n\t// Run the API call\n\trun(el) {\n\t\treturn new Promise(resolve => {\n\t\t\tvar length = reduceMotionFilter(1);\n\t\t\tthis.next = el;\n\t\t\tthis.browserColor(\"yellow\");\n\n\t\t\t// Run the login\n\t\t\tgsap.fromTo(this.next.querySelectorAll('#credits'), {\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: length,\n\t\t\t\tease: \"power3.in\",\n\t\t\t\tonComplete: async () => {\n\t\t\t\t\t// Change color\n\t\t\t\t\tthis.browserColor(\"yellow\", 0);\n\n\t\t\t\t\t// Display login\n\t\t\t\t\tawait this.login(true);\n\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default replurk;"],"names":["constructor","this","data","unavailable","add","new_friends","Object","assign","find","user_id","findIndex","el","result","api","call","success","temp","message","user_info","id","push","findByUsername","nick_name","index","toLowerCase","getAvatar","has_profile_image","avatar","getAvatarByUsername","user_name","document","createElement","classname","classList","html","innerHTML","update","text","textContent","oldcolor","randomcolors","allColorArrays","arrayIndex","Math","floor","Date","now","length","colors","getRandomColor","color","utils","shuffle","slice","pop","avatarurl","customcreate","user","value","attached","hidden","count","position","created","counts","class","create","setAttribute","name","display_name","appendChild","insertTo","element","insertAdjacentElement","destroy","remove","statistics","me","friends","year","responders","parent","async","response","sort","i","attach","draw","drawImage","mentions","dataAll","content","findregex","replace","idx","undefined","plurker","myemoticons","drawHTML","hashtags","links","pics","replurk","loved","match","includes","pic","split","url","link","drawLinks","max","toString","drawDiv","drawPics","types","words","chars","responses","a","b","response_count","posts","post","owner_id","plurk_type","drawPost","plurk_id","posted","replurkers_count","favorite","favorite_count","interaction","multiplier","content_raw","drawUserList","console","info","mvp","type","error","regex","storage","countAll","datediff","empty","next","whispers_count","poll_count","poll_responder_count","coins_count","porn_count","noresponse_count","private_count","replurker_count","replurker_list","favourite_count","favorite_list","responded_count","responded_other_count","responded_other_list","plurks_count","most","inactive","querySelector","MutationObserver","mutationsList","forEach","mutation","addedNodes","afterDraw","observe","attributes","childList","subtree","clear","listCount","list","collection","title","style","loading","span","insertAdjacentHTML","body","anim","set","background","to","opacity","duration","ease","screen","matchMedia","tl","fromTo","children","y","window","innerHeight","trigger","start","end","animation","scrub","number","Number","load","progress","snap","onUpdate","toggleActions","querySelectorAll","x","height","getAttribute","capture","refresh","onclick","generating","cursor","canvas","html2canvas","backgroundColor","logging","proxy","useCORS","display","download","href","toDataURL","click","removeChild","setTimeout","wrapper","drawGraph","image","badge","drawLink","users","friend","outerHTML","scale","stagger","amount","from","charttitle","node","chart","zIndex","maxTop","top","currentTop","killTweensOf","onComplete","drawAll","plurks","response_percentage","round","prev_count","clean","isComplete","item","Promise","resolve","done","loop","month","fakeupdate","forcedone","width","padding","margin","overflow","credits","reduceMotionFilter","ScrollTrigger","permisions","rotation","menu","el1","el2","direction","gsap","_qAll","browserBar","login","onLeave","browserColor","onEnterBack","onEnter","scroll","startDate","endDate","days","fulldays","getSetStateColor","state","darkmode","browserColorDark","browserColorLight","setDarkMode","showLoginPage","hideLoginPage","showStatisticPages","timeline","onStart","hideStatisticPages","animate","quick","loginmessage","requestLogout","abort","requestToken","tokenlink","then","displayPlurkerData","extra","anniversary","years","avatar_big","oneday","join","join_date","getMonth","getFullYear","getDate","badges","displayStatistics","getTimeline","offset","plurk_users","concat","lastposted","largest_poll_result","plurk","responded","replurkers","favorers","anonymous","coins","porn","instagrammer_count","facebooker_count","twitterer_count","redditor_count","tiktoker_count","imgurer_count","youtuber_count","with_poll","poll","poll_popular_plurk","displayExtendedStatistics","date","gender","tiktok","facebook","logSessionStrorageSize","sessionStorageSize","totalBytes","key","sessionStorage","hasOwnProperty","getItem","getSessionStorageSize","scrollTo","interval","setInterval","clearInterval","run"],"sourceRoot":""}