{"version":3,"file":"474.bundle.js","mappings":"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","sources":["webpack://dwaan/./src/js/helpers/replurk.js"],"sourcesContent":["\"use strict\";\n\nimport { gsap, ScrollTrigger } from \"gsap/all\";\nimport api from \"../helpers/api\";\nimport scroll from \"../helpers/scroll\";\nimport darkmode from \"../helpers/darkmode\";\nimport animate from \"../helpers/animate\";\nimport html2canvas from \"html2canvas\";\nimport { _q, _qAll, hasClass, plural, monthNames, animateNumber, datediff, pluralinwords, reduceMotionFilter, waitForImg } from '../helpers/helper';\n\n/*\n    Simple span element object:\n\n    1. update(text): update the content with text value, and animate it if it's number\n    2. updateHTML(text): update the content with html value\n*/\n\nvar iconLink = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\"><path id=\"right\" d=\"M19.188,12.001c0,1.1-0.891,2.015-1.988,2.015l-4.195-0.015C13.543,15.089,13.968,16,15.002,16h3C19.658,16,21,13.657,21,12s-1.342-4-2.998-4h-3c-1.034,0-1.459,0.911-1.998,1.999l4.195-0.015C18.297,9.984,19.188,10.901,19.188,12.001z\"/><path id=\"center\" d=\"M8,12c0,0.535,0.42,1,0.938,1h6.109c0.518,0,0.938-0.465,0.938-1c0-0.534-0.42-1-0.938-1H8.938C8.42,11,8,11.466,8,12z\"/><path id=\"left\" d=\"M4.816,11.999c0-1.1,0.891-2.015,1.988-2.015L11,9.999C10.461,8.911,10.036,8,9.002,8h-3c-1.656,0-2.998,2.343-2.998,4s1.342,4,2.998,4h3c1.034,0,1.459-0.911,1.998-1.999l-4.195,0.015C5.707,14.016,4.816,13.099,4.816,11.999z\"/></svg>';\nclass span {\n    constructor(classname, text) {\n        this.el = document.createElement('span');\n        this.el.setAttribute(\"class\", classname);\n        this.el.innerHTML = text;\n    }\n\n    update(text) {\n        animateNumber(this.el.textContent, text, (text) => {\n            this.el.textContent = text;\n        });\n    }\n\n    updateHTML(text) {\n        this.el.innerHTML = text;\n    }\n}\n\n/*\n    Color randomizer\n\n    1. colors: array of colors value\n    2. getRandomColor(): get the randomized color from colors list\n*/\nclass colors {\n    constructor() {\n        this.oldcolor = \"\";\n        this.randomcolors = [];\n        this.colors = ['rgb(63,94,251)', 'rgb(252,70,107)', 'rgb(34,193,195)', 'rgb(253,187,45)', 'rgb(195,34,190)', 'rgb(219,158,0)', 'rgb(75,231,152)', 'rgb(195,34,103)', 'rgb(45,182,253)'];\n    }\n\n    getRandomColor() {\n        var color;\n        do {\n            this.randomcolors = gsap.utils.shuffle(this.colors).slice();\n        } while (this.oldcolor == (color = this.randomcolors.pop()));\n        this.oldcolor = color;\n        return color;\n    }\n}\n\n/*\n    Plurk element object spesification:\n\n    1. id: contain the id name\n    2. user: contain user object\n    3. attached: status of element is attached in DOM or not\n    4. create(): create the DOM element\n    4. destroy(): remove the DOM element\n    4. update(): update the DOM element based on it's current value\n    5. insertTo(element): insert DOM element to spesific element, also will check if it's already created or not\n\n*/\nclass plurkerElement {\n    constructor(id, data, avatarurl, customcreate) {\n        this.id = id;\n        this.user = data;\n        this.user_id = data.id;\n        this.value = data.nick_name;\n        this.nick_name = data.nick_name;\n        this.attached = false;\n        this.hidden = true;\n        this.count = 1;\n        this.position = 0;\n        this.customcreate = customcreate;\n        this.el = document.createElement('a');\n        this.created = false;\n        this.avatarurl = avatarurl;\n        this.counts = new span('count', this.count);\n    }\n\n    create() {\n        this.created = true;\n\n        this.el.setAttribute(\"id\", this.id + this.user_id);\n        this.el.setAttribute(\"class\", 'plurkers');\n        this.el.setAttribute(\"href\", 'https://plurk.com/' + this.user.nick_name);\n        this.el.setAttribute(\"target\", '_BLANK');\n\n        if (!this.customcreate) {\n            this.avatar = new span('avatar', '<img src=\"' + this.avatarurl + '\" />');\n            this.name = new span('name', this.user.display_name);\n            this.counts = new span('count', this.count);\n            this.el.appendChild(this.avatar.el);\n            this.el.appendChild(this.name.el);\n            this.el.appendChild(this.counts.el);\n        } else {\n            this.customcreate(this);\n        }\n    }\n\n    insertTo(element) {\n        if (!this.created) this.create();\n\n        this.attached = true;\n        element.insertAdjacentElement(\"beforeend\", this.el);\n    }\n\n    destroy() {\n        this.attached = false;\n\n        if (this.el) {\n            this.el.remove();\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    update() {\n        // Only update when it's attached\n        if (this.attached) {\n            this.counts.update(this.count);\n        }\n    }\n}\n\n\n/*\n    Replurk class\n*/\nclass replurk {\n    // Draw in which element?\n    next = document.createElement('div');\n    // Plurks array\n    plurks = [];\n    // Plurker profile object\n    me = { \"id\": 3203568, \"has_profile_image\": 1, \"timeline_privacy\": 0, \"nick_name\": \"dwan\", \"display_name\": \"Dwan\", \"date_of_birth\": \"Sat, 29 Oct 1983 00:01:00 GMT\", \"avatar\": 41917598, \"gender\": 1, \"karma\": 199.24, \"premium\": true, \"verified_account\": false, \"dateformat\": 3, \"default_lang\": \"en\", \"friend_list_privacy\": \"public\", \"name_color\": \"FFA59A\", \"full_name\": \"Dwan B.\", \"location\": \"Tel Aviv-Yafo, Dan, Israel\", \"timezone\": \"Asia/Jerusalem\", \"phone_verified\": 0, \"bday_privacy\": 1, \"plurks_count\": 14598, \"response_count\": 79484, \"pinned_plurk_id\": 0, \"background_id\": 0, \"show_ads\": false, \"show_location\": 0, \"profile_views\": 36112, \"avatar_small\": \"https://avatars.plurk.com/3203568-small41917598.gif\", \"avatar_medium\": \"https://avatars.plurk.com/3203568-medium41917598.gif\", \"avatar_big\": \"https://avatars.plurk.com/3203568-big41917598.jpg\", \"about\": \"Mr. Goat\\u2019s dad and full-time husband\", \"about_renderred\": \"Mr. Goat\\u2019s dad and full-time husband\", \"page_title\": \"The world revolve around me\", \"recruited\": 14, \"relationship\": \"married\", \"friends_count\": 571, \"fans_count\": 498, \"join_date\": \"Wed, 15 Oct 2008 07:48:05 GMT\", \"privacy\": \"world\", \"accept_private_plurk_from\": \"all\", \"post_anonymous_plurk\": false, \"badges\": [\"10_invites\", \"14\", \"9\", \"10000_views\", \"10000_plurks\", \"50000_comments\", \"upload_profile_image\", \"50_fans\", \"coin\"], \"link_facebook\": false, \"setup_facebook_sync\": false, \"setup_twitter_sync\": false, \"setup_weibo_sync\": false, \"filter\": { \"porn\": 2, \"anonymous\": 0, \"keywords\": null }, \"anniversary\": { \"years\": 13, \"days\": 27 }, \"phone_number\": null, \"creature\": 0, \"creature_url\": null, \"creature_special\": 1, \"creature_special_url\": null };\n\n    /*\n        Friends object spesification:\n\n        1. data: contains all the friends collection data\n        2. add(data): add friend to friends collection data\n        3. find(user_id): return friend data based on their id\n        4. findByUsername(nick_name): return friend data based on their nick name\n        5. getAvatar(user_id): return avatar url based on their id for from friends collection data\n        6. getAvatarByUsername(user_id): return avatar url based on their nick name for from friends collection data\n    */\n    friends = {\n        data: {},\n        unavailable: [],\n        parent: this,\n        init: function () {\n            this.data = {};\n        },\n        add: function (new_friends) {\n            Object.assign(this.data, new_friends);\n        },\n        find: async function (user_id) {\n            if (this.unavailable.findIndex(el => el == user_id) >= 0) return false;\n\n            if (this.data && this.data[user_id]) {\n                return this.data[user_id];\n            } else {\n                var result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&user_id=\" + user_id);\n\n                if (result.success) {\n                    var temp = {};\n                    temp[result.message.user_info.id] = result.message.user_info;\n                    this.add(temp);\n                    return result.message.user_info;\n                } else {\n                    this.unavailable.push(user_id);\n                    return false;\n                }\n            }\n        },\n        findByUsername: async function (nick_name) {\n            var user_id = false;\n\n            if (this.unavailable.findIndex(el => el == nick_name) >= 0) return false;\n\n            for (var index in this.data) {\n                if (this.data[index].nick_name.toLowerCase() == nick_name.toLowerCase()) {\n                    user_id = index;\n                    break;\n                }\n            }\n\n            if (user_id) {\n                return this.data[user_id];\n            } else {\n                var result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&nick_name=\" + nick_name);\n\n                if (result.success) {\n                    var temp = {};\n                    temp[result.message.user_info.id] = result.message.user_info;\n                    this.add(temp);\n                    return result.message.user_info;\n                } else {\n                    this.unavailable.push(nick_name);\n                    return false;\n                }\n            }\n        },\n        getAvatar: function (user_id) {\n            if (user_id && this.data && this.data[user_id]) {\n                if (this.data[user_id].has_profile_image) {\n                    var avatar = \"\";\n                    if (this.data[user_id].avatar) avatar = this.data[user_id].avatar;\n                    return 'https://avatars.plurk.com/' + user_id + '-big' + avatar + '.jpg';\n                }\n            }\n            return 'https://plurk.com/static/default_big.jpg';\n        },\n        getAvatarByUsername: function (user_name) {\n            var user_id = false;\n\n            if (user_name) {\n                for (var index in this.data) {\n                    if (this.data[index].nick_name.toLowerCase() == user_name.toLowerCase()) {\n                        user_id = index;\n                        break;\n                    }\n                }\n            }\n\n            return this.getAvatar(user_id);\n        }\n    }\n\n    // Statistics plurker object renderer\n    statistics = {\n        // Storage\n        whispers_count: 0,\n        coins_count: 0,\n        porn_count: 0,\n        noresponse_count: 0,\n        private_count: 0,\n        replurker_count: 0,\n        replurker_list: [],\n        favourite_count: 0,\n        favorite_list: [],\n        response_count: 0,\n        responded_count: 0,\n        responded_other_count: 0,\n        responded_other_list: [],\n        plurks_count: 0,\n        id: 0,\n        // Other\n        next: document.createElement('div'),\n        el: document.createElement('div'),\n        randomcolors: [],\n        parent: this,\n        init: function (next) {\n            this.whispers_count = 0;\n            this.coins_count = 0;\n            this.porn_count = 0;\n            this.noresponse_count = 0;\n            this.private_count = 0;\n            this.replurker_count = 0;\n            this.replurker_list = [];\n            this.favourite_count = 0;\n            this.favorite_list = [];\n            this.response_count = 0;\n            this.responded_count = 0;\n            this.responded_other_count = 0;\n            this.responded_other_list = [];\n            this.plurks_count = 0;\n            this.id = 0;\n            this.next = next;\n            this.randomcolors = [];\n\n            this.el = this.next.querySelector(\"#statistics\");\n\n            // Obverse when element is added to DOM\n            var observer = new MutationObserver((mutationsList) => {\n                mutationsList.forEach(mutation => {\n                    mutation.addedNodes.forEach(el => {\n                        this.afterDraw(el);\n                    });\n                });\n            });\n            observer.observe(this.el, {\n                attributes: true,\n                childList: true,\n                subtree: false\n            });\n        },\n        clear: function () {\n            this.el.innerHTML = \"\";\n        },\n        listCount: function (list, collection) {\n            if (collection.length > 0) {\n                collection.forEach(value => {\n                    var index = list.findIndex(el => el.id == value)\n\n                    if (index < 0) list.push({ id: value, count: 1 });\n                    else list[index].count++;\n                });\n            }\n\n            return list;\n        },\n        title: function (text, style = \"\", loading = false) {\n            if (loading) this.el.insertAdjacentHTML('beforeend', '<div class=\"statistics middle title ' + style + '\"><h3><span>' + text + '</span><span class=\"loading\"><i/></span></h3></div>');\n            else this.el.insertAdjacentHTML('beforeend', '<div class=\"statistics middle title ' + style + '\"><h3><span>' + text + '</span><span class=\"line\"><i/></span></h3></div>');\n        },\n        afterDraw: function (el) {\n            if (hasClass(el, 'wrap')) {\n                var color = new colors();\n                var randomcolors = [color.getRandomColor(), color.getRandomColor()]\n                var anim = el.querySelector(\".anim\");\n\n                gsap.set(anim, {\n                    background: 'radial-gradient(at 10% 10%, ' + randomcolors[0] + ' 0%, ' + randomcolors[1] + ' 100%)'\n                });\n\n                gsap.fromTo(anim, {\n                    opacity: 0\n                }, {\n                    opacity: 1,\n                    duration: reduceMotionFilter(0.5),\n                    ease: \"power3.out\"\n                }, 0);\n\n                // Scroll animation wrap section\n                var screen = gsap.matchMedia();\n                screen.add(\"(min-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: window.innerHeight * 1 / 5\n                        }, {\n                            y: 0,\n                            ease: \"ease.out\"\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"0 100%-=100px\",\n                            animation: tl,\n                            scrub: 2\n                        });\n                    });\n                });\n                screen.add(\"(max-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: 0\n                        }, {\n                            y: 0\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"100px 100%-=100px\",\n                            animation: tl,\n                            scrub: 1\n                        });\n                    });\n                });\n\n                scroll.push(function (tl) {\n                    if (el.querySelector(\".big\")) {\n                        var number = Number(el.querySelector(\".big\").textContent);\n                        if (number > 0) {\n                            var load = { progress: 0 };\n                            var duration = 1;\n                            if (number >= 500 && number < 1000) duration = 2;\n                            else if (number >= 1000 && number < 99999) duration = 3;\n                            else if (number >= 99999) duration = 4;\n                            tl.to(load, {\n                                progress: number,\n                                snap: \"progress\",\n                                ease: \"power3.out\",\n                                duration: reduceMotionFilter(duration),\n                                onUpdate: () => {\n                                    el.querySelector(\".big\").textContent = plural(load.progress);\n                                }\n                            }, 0);\n                        }\n                    }\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"0 100%-=100px\",\n                        end: \"100px 100%-=100px\",\n                        animation: tl,\n                        toggleActions: \"play none none none\"\n                    });\n                });\n            } else {\n                // Scroll animation line section\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelectorAll(\"i\"), {\n                        x: \"-100%\"\n                    }, {\n                        x: \"0%\",\n                        ease: \"ease.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"100% 100%\",\n                        end: \"100% 0\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'drawgraph')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".graph\"), {\n                        y: 100\n                    }, {\n                        y: 0\n                    }, 0);\n\n                    tl.fromTo(el.querySelector(\".graph i\"), {\n                        height: \"0%\"\n                    }, {\n                        height: el.querySelector(\".graph i\").getAttribute(\"data-number\") + \"%\"\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'coins')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".big\"), {\n                        y: \"50%\"\n                    }, {\n                        y: 0,\n                        ease: \"power3.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 2\n                    });\n                });\n            }\n\n            // Capture function\n            var capture = el.querySelector(\".capture small\");\n            if (capture) {\n                capture.onclick = async () => {\n                    if (!capture.generating) {\n                        capture.innerHTML = \"Downloading images...\";\n                        capture.generating = true;\n                        document.body.style.cursor = \"wait\";\n\n                        el.querySelectorAll(\"img\").forEach(img => {\n                            if (!img.localUrl) {\n                                img.localUrl = true;\n                                img.setAttribute(\"src\", api.url + \"?img=\" + img.getAttribute(\"src\"));\n                            }\n                        });\n\n                        // Load and cache image\n                        await waitForImg(el.querySelectorAll(\"img\"), (_, progress) => {\n                            capture.innerHTML = \"Downloading images... (\" + Math.round(progress) + \"%)\";\n                        });\n                        capture.innerHTML = \"Processing...\";\n\n                        html2canvas(el.querySelector(\".anim\"), {\n                            backgroundColor: null,\n                            logging: false\n                        }).then(canvas => {\n                            // Download the output\n                            var link = document.createElement(\"a\");\n                            link.style.display = \"none\";\n                            link.download = \"replurk\" + this.parent.year + \"-\" + Date.now() + \".webp\";\n                            link.href = canvas.toDataURL();\n                            document.body.appendChild(link);\n                            link.click();\n                            document.body.removeChild(link);\n                            link.remove();\n\n                            capture.innerHTML = \"Done\";\n                            document.body.style.cursor = \"default\";\n                            setTimeout(() => {\n                                capture.innerHTML = \"Redownload\";\n                                capture.generating = false;\n                            }, 3000);\n                        });\n                    }\n                }\n            }\n\n            scroll.refresh();\n        },\n        wrapper: function (style, text, background) {\n            if (background) return '<div class=\"statistics middle wrap ' + style + '\"><div class=\"anim\">' + text + '</div><div class=\"capture\"><small>Capture</small></div></div>';\n            else return '<div class=\"statistics middle wrap ' + style + '\"><div class=\"anim\" style=\"background-images:url(' + background + ')\">' + text + '</div><div class=\"capture\"><small>Download</small></div></div>';\n        },\n        draw: function (style, number, text, background) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"big\">' + number + '</span>\\\n\t\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'), background);\n            }\n        },\n        drawDiv: function (style, text) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '<div class=\"box\">' + text + '</div>'));\n        },\n        drawGraph: function (style, number, text) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawgraph movetitle\", '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"graph\"><i data-number=\"' + number + '\"></i></span>\\\n\t\t\t\t\t\t<span class=\"info\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'));\n            }\n        },\n        drawImage: function (style, image, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawimage\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span class=\"avatar\"><img src=\"' + image + '\" /></span>\\\n\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawHTML: function (style, title, html) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawhtml\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<div class=\"htmlcontent\">' + html + '</div>\\\n\t\t\t\t\t<div class=\"title\">' + title + '</div>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawLink: function (style, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawlink\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span>' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawPost: function (style, id, title, text, badge) {\n            var url = \"\";\n            if (id) url = 'https://plurk.com/p/' + id.toString(36);\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawpost\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<a href=\"' + url + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<p class=\"post\">' + text + '</p>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawUserList: async function (style, id, title, list) {\n            var html = \"\";\n            var max = list.length >= 5 ? 5 : list.length;\n\n            this.drawHTML(style + \" drawuserlist movetitle \" + id, title, \"<span class='info'>Downloading user data</span>\");\n            for (var index = 0; index < max; index++) {\n                var value = list[index];\n                if (value) {\n                    var friends = this.parent.friends;\n                    var friend = await friends.find(value.id);\n                    if (friend) {\n                        var plurker = new plurkerElement(value.id, friend, \"\", plurker => {\n                            plurker.avatar = new span('avatar', '<img src=\"' + friends.getAvatar(plurker.user.id) + '\" />');\n                            plurker.name = new span('name', plurker.user.display_name);\n                            plurker.counts = new span('count', value.count);\n                            plurker.el.appendChild(plurker.avatar.el);\n                            plurker.el.appendChild(plurker.name.el);\n                            plurker.el.appendChild(plurker.counts.el);\n                            plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.user.nick_name);\n                        });\n                        plurker.create();\n                        html += plurker.el.outerHTML;\n                    } else {\n                        max++;\n                    }\n                }\n            }\n            this.el.querySelector(\".\" + id + \" .htmlcontent\").innerHTML = html;\n\n            // Stagger animation\n            if (id == 'mostinteraction' || id == 'mvp') {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        scale: .3,\n                        opacity: 0\n                    }, {\n                        scale: 1,\n                        opacity: 1,\n                        ease: \"elastic.out(1.2, 0.5)\",\n                        duration: reduceMotionFilter(.75),\n                        stagger: {\n                            amount: .3,\n                            from: \"end\"\n                        }\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"50% 100%\",\n                        end: \"50% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            } else {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        y: 50,\n                        opacity: 0\n                    }, {\n                        y: 0,\n                        opacity: 1,\n                        duration: reduceMotionFilter(1),\n                        ease: \"power3.out\",\n                        stagger: .3\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"0% 100%\",\n                        end: \"0% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            }\n        },\n        attach: function (charttitle, node, max) {\n            var that = this;\n            var id = node.id;\n            var chart;\n            var title;\n            var text;\n            var anim;\n            var wrapper;\n            var capture;\n\n            var opacity = 0;\n            var position = max;\n            var zIndex = 0;\n            var hidden = true;\n\n            if (node.position <= max) {\n                hidden = false;\n                zIndex = position = (node.position - 1);\n                opacity = 1;\n            }\n\n            // Create the box\n            if (!that.next.querySelector(\".\" + id)) {\n                chart = document.createElement('div');\n                chart.setAttribute('class', 'chart');\n\n                title = document.createElement('div');\n                title.setAttribute('class', 'title');\n                title.innerHTML = charttitle;\n\n                text = document.createElement('div');\n                text.setAttribute('class', 'text');\n                text.appendChild(chart);\n                text.appendChild(title);\n\n                anim = document.createElement('div');\n                anim.setAttribute('class', 'anim');\n                anim.appendChild(text);\n\n                text = document.createElement('small');\n                text.innerHTML = \"Download\";\n                capture = document.createElement('div');\n                capture.setAttribute('class', 'capture');\n                capture.appendChild(text);\n\n                wrapper = document.createElement('div');\n                wrapper.setAttribute('class', 'statistics middle wrap attach ' + id);\n                wrapper.appendChild(anim);\n                wrapper.appendChild(capture);\n\n                that.el.insertAdjacentElement(\"beforeend\", wrapper);\n            }\n\n            // Add  element\n            if (!hidden && !node.attached) {\n                var maxTop = max / (max - 1) * 100;\n\n                node.insertTo(that.el.querySelector(\".\" + id + ' .chart'));\n\n                gsap.set(node.el, {\n                    top: maxTop + \"%\",\n                    opacity: 0,\n                    zIndex: 0,\n                });\n            }\n            // Update position\n            if (!hidden || !node.hidden) {\n                var currentTop = position / (max - 1) * 100;\n\n                gsap.killTweensOf(node.el);\n                gsap.to(node.el, {\n                    top: currentTop + \"%\",\n                    opacity: opacity,\n                    zIndex: zIndex,\n                    duration: reduceMotionFilter(.5),\n                    ease: \"power3.out\",\n                    onComplete: function () {\n                        if (hidden) {\n                            node.destroy();\n                        }\n                    }\n                });\n                node.hidden = hidden;\n            }\n\n            node.update();\n        },\n        drawAll: async function (plurks) {\n            var response_percentage = Math.round((this.plurks_count - this.noresponse_count) / this.plurks_count * 100);\n\n            this.parent.most.responses.draw(plurks);\n            this.drawGraph('center graph percentage', response_percentage, 'Around <i>' + response_percentage + '%</i> of my plurks got 💬 responses ' + ((response_percentage <= 50) ? '😢' : '🤩'));\n\n            this.draw('spansmall recievereplurk', this.replurker_count, 'I received <i>📢 ' + plural(this.replurker_count, 'replurk') + '</i>');\n            this.parent.most.replurk.draw(plurks);\n\n            this.parent.most.favorite.draw(plurks);\n            this.draw('spansmall recievelove', this.favourite_count, 'I recieved <i>❤️ ' + plural(this.favourite_count, 'love') + '</i>');\n\n            this.draw('spansmall privateplurk', this.private_count, 'I posted <i>💋 ' + plural(this.private_count, 'private plurk') + '</i>');\n            this.draw('spansmall whisper', this.whispers_count, 'I posted <i>🤫 ' + plural(this.whispers_count, 'whisper') + '</i>');\n            this.draw('spansmall porn', this.porn_count, 'I posted <i>🤤 ' + plural(this.porn_count, 'adult plurk') + '</i>');\n\n            this.draw('span2 responsecount', this.plurks_count + \" &rarr; \" + this.response_count, 'I received <i>💬 ' + plural(this.response_count, 'response') + '</i> from <i>' + plural(this.plurks_count, 'plurk') + '</i>');\n            this.draw('spansmall center coins', this.coins_count, 'I recieved <i>🪙 ' + plural(this.coins_count, 'coin') + '</i>');\n\n            if (this.favorite_list.length > 0) this.drawUserList(\"avatar\", \"loved\", \"These Plurkers <i>❤️ Loved</i> My Posts\", this.favorite_list.sort(this.parent.most.sort));\n            if (this.replurker_list.length > 0) this.drawUserList(\"avatar\", \"replurked\", \"These Plurkers likes to <i>📢 Replurked</i> My Posts\", this.replurker_list.sort(this.parent.most.sort));\n        }\n    };\n\n    // Most statistics object renderer\n    most = {\n        parent: this,\n        sort: function (a, b) {\n            return b.count - a.count;\n        },\n        // Find and count all based on regex\n        findregex: function (regex, replace, content, storage) {\n            var result = content.match(regex);\n\n            for (var index in result) {\n                var value = replace(result[index]);\n                var idx = storage.findIndex(el => el.value == value);\n\n                if (idx < 0) {\n                    storage.push({\n                        id: value,\n                        value: value,\n                        count: 1\n                    });\n                } else {\n                    storage[idx].count++;\n                }\n            }\n\n            return result;\n        },\n        init: function () {\n            this.responders.data = [];\n            this.mentions.data = [];\n            this.mentions.dataAll = [];\n            this.myemoticons.data = [];\n            this.hashtags.data = [];\n            this.links.links = [];\n            this.links.pics = [];\n            this.types.words = 0;\n            this.types.chars = 0;\n        },\n        countAll: async function (data) {\n            // Find and count all my emoticons from my post\n            if (data.user_id == this.parent.me.id) this.myemoticons.count(data.content);\n            // Find and count all mentions from my post\n            await this.mentions.count(data.content_raw);\n            // Find and count all hashtags from my post\n            if (data.user_id == this.parent.me.id) this.hashtags.count(data.content);\n            // Find and count all links and pictures post from my post\n            if (data.user_id == this.parent.me.id) this.links.count(data.content, data.plurk_id, data.response_count, data.replurkers_count, data.favorite_count);\n            // Find and count characther and words from my post\n            if (data.user_id == this.parent.me.id) this.types.count(data.content_raw);\n        },\n        responders: {\n            data: [],\n            parent: this,\n            count: async function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.user_id == response.user_id;\n                });\n\n                if (index < 0) {\n                    var friends = this.parent.friends;\n                    var user = await friends.find(response.user_id);\n                    this.data.push(new plurkerElement('mostresponders', user, friends.getAvatar(user.id)));\n                } else {\n                    this.data[index].count++;\n                }\n                this.data.sort(this.parent.most.sort);\n\n                // Update top 5\n                var index = 1;\n                for (var i = 0; i < this.data.length; i++) {\n                    this.data[i].position = this.data.length;\n                    if (this.data[i].user_id != this.parent.me.id && this.data[i].user_id != 99999) {\n                        this.data[i].position = index++;\n                        this.parent.statistics.attach('<i>Top 💬 Responders</i> <strong>of My Timeline</strong>', this.data[i], 5);\n                    }\n                }\n            },\n            draw: function () {\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatar(this.data[index].user_id), 'https://plurk.com/' + this.data[index].user.nick_name, '<i>Most Responder</i>', this.data[index].user.display_name, this.data[index].count);\n                }\n            }\n        },\n        mentions: {\n            data: [],\n            dataAll: [],\n            parent: this,\n            count: async function (content) {\n                var result = this.parent.most.findregex(/\\@(\\w{1,30})[\\ |\\:]/g, value => value.replace(/\\@|\\ |\\:/g, ''), content, this.data);\n                var max = 5;\n                var index = 1;\n\n                if (result) {\n                    // Update top 5\n                    this.data.sort(this.parent.most.sort);\n                    for (var idx = 0; idx < this.data.length; idx++) {\n                        this.data[idx].position = this.data.length;\n\n                        if (index <= max) {\n                            var user = await this.parent.friends.findByUsername(this.data[idx].value);\n\n                            if (this.data[idx].el == undefined) {\n                                this.data[idx] = new plurkerElement('mostmentionedbyme', user, \"\", plurker => {\n                                    plurker.avatar = new span('avatar', '<img src=\"' + this.parent.friends.getAvatar(plurker.user_id) + '\" />');\n                                    plurker.name = new span('name', \"@\" + plurker.nick_name);\n                                    plurker.counts = new span('count', plurker.count);\n                                    plurker.el.appendChild(plurker.avatar.el);\n                                    plurker.el.appendChild(plurker.name.el);\n                                    plurker.el.appendChild(plurker.counts.el);\n                                    plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.nick_name);\n                                });\n                            }\n\n                            if (user.id != this.parent.me.id && user.id != 99999) {\n                                this.data[idx].position = index++;\n                                this.parent.statistics.attach('<i>Most 🙋 Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                            }\n                        }\n\n                        if (this.data[idx].el) this.parent.statistics.attach('<i>Most 🙋 Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                    }\n                }\n            },\n            draw: function () {\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatarByUsername(this.data[index].value), 'https://plurk.com/' + this.data[index].value, '<i>Most Mentioned</i> by me', \"@\" + this.data[index].value, this.data[index].count);\n                }\n            }\n        },\n        myemoticons: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/emoticon_my\\\" src=\\\"(.*?)\\\"/g, function (value) {\n                    return value.replace(/emoticon_my\\\" src=\\\"|\\\"/gi, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 7;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><img src=\"' + this.data[i].value + '\" /> <span class=\"count\">' + this.data[i].count + '</span></div>';\n                if (html != \"\") this.parent.statistics.drawHTML(\"smallspan grid emoticons\", 'Most Used <i>My Emoticons</i>', html);\n            }\n        },\n        hashtags: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/hashtag\\\"\\>(.*?)\\</g, function (value) {\n                    return value.replace(/hashtag\\\"\\>\\#|\\.\\<|\\</g, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 5;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><a href=\"https://plurk.com/search?q=' + this.data[i].value + '\" target=\"_BLANK\" /><span class=\"count\">' + this.data[i].count + '</span> #' + this.data[i].value + '</a></div>';\n                if (html != \"\") {\n                    html = \"<strong>#</strong>\" + html;\n                    this.parent.statistics.drawHTML(\"hashtags\", 'Most Used <i>Hashtags</i>', html);\n                }\n            }\n        },\n        links: {\n            data: [],\n            links: [],\n            pics: [],\n            parent: this,\n            count: function (content, id, response, replurk, loved) {\n                var result = content.match(/href\\=\\\"(.*?)\\\"\\ class=\\\"(.*?)\\\"\\ rel/g);\n                var count = 0;\n                var pics = [];\n                var links = [];\n\n                if (result) for (var data of result) {\n                    if (!this.data[id]) {\n                        count = response + (replurk * 250) + (loved * 50);\n                    }\n\n                    if (data.includes(\"pictureservices\")) {\n                        this.pics.push(data);\n                        if (count > 0) {\n                            var pic = data.split('\\\"')\n                            pics.push({\n                                url: pic[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n                    }\n                    else {\n                        this.links.push(data);\n                        if (count > 0) {\n                            var link = data.split('\\\"')\n                            links.push({\n                                url: link[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n\n                    }\n                }\n\n                if (count) this.data.push({\n                    id: id,\n                    pics: pics,\n                    links: links,\n                    count: count,\n                    content: content\n                });\n            },\n            drawLinks: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].links.length > 0) {\n                        var link = this.data[index].links[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].id.toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"post\"><div class=\"info\">' + this.data[index].content + '</div><div class=\"meta\"><span class=\"response\">💬 ' + link.response + '</span><span class=\"replurk\">📢 ' + link.replurk + '</span><span class=\"loved\">❤️ ' + link.loved + '</span>' + url + '</div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n                if (this.links.length > 0) this.parent.statistics.drawDiv('spansmall sharedlinks', \"<div class='title'>I shared <i>🔗 \" + plural(this.links.length, 'link') + '</i> and this is the most popular one</div>' + result);\n            },\n            drawPics: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].pics.length > 0) {\n                        var pics = this.data[index].pics[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"box\"><div class=\"image\" style=\"background-image: url(' + api.url + \"?img=\" + pics.url + ')\"></div><div class=\"post\">' + this.data[index].content + '<div class=\"meta\"><span class=\"response\">💬 ' + pics.response + '</span><span class=\"replurk\">📢 ' + pics.replurk + '</span><span class=\"loved\">❤️ ' + pics.loved + '</span>' + url + '</div></div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n\n                if (this.pics.length > 0) this.parent.statistics.draw('spansmall sharedpictures', this.pics.length, 'I shared <i>🖼 ' + plural(this.pics.length, 'image') + '</i>');\n                if (result != \"\") this.parent.statistics.drawHTML('span2 previewpics', '<i>🖼 Most Popular Image</i>', result);\n            }\n        },\n        types: {\n            words: 0,\n            chars: 0,\n            parent: this,\n            count: function (content) {\n                var words = content.split(\" \");\n\n                this.chars += content.length;\n                this.words += words.length;\n            },\n            draw: function () {\n                if (this.chars > 0) this.parent.statistics.draw('span2 mediumnumber', this.chars, 'I typed more than  <i>' + pluralinwords(this.chars, 'character') + '</i>, around <i>' + pluralinwords(this.words, 'word') + '</i> this year');\n            }\n        },\n        responses: {\n            parent: this,\n            sort: function (a, b) {\n                return b.response_count - a.response_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.response_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostresponded', value.plurk_id, '<i>💬 Most Responded</i> ' + datediff(value.posted), value.content, value.response_count);\n                        return;\n                    }\n                }\n            }\n        },\n        replurk: {\n            parent: this,\n            sort: function (a, b) {\n                return b.replurkers_count - a.replurkers_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.replurkers_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostreplurked', value.plurk_id, '<i>📢 Most Replurked</i> ' + datediff(value.posted), value.content, value.replurkers_count);\n                        return;\n                    }\n                }\n            }\n        },\n        favorite: {\n            parent: this,\n            sort: function (a, b) {\n                return b.favorite_count - a.favorite_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.favorite_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostfavorited', value.plurk_id, '<i>❤️ Most Loved</i> ' + datediff(value.posted), value.content, value.favorite_count);\n                        return;\n                    }\n                }\n            }\n        },\n        interaction: {\n            data: [],\n            parent: this,\n            count: function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier++;\n                    else this.data[index].multiplier = 1;\n                    this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span2\", \"mostinteraction\", \"Plurkers who really like to <i>🗣 interact</i> with me\", result);\n                } catch {\n                    console.info(\"Error while counting most interacted plurker\");\n                }\n            }\n        },\n        mvp: {\n            data: [],\n            parent: this,\n            count: function (response, type) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (type == \"replurk\") {\n                        this.data[index].count += (response.count * 250);\n                    } else if (type == \"favorite\") {\n                        this.data[index].count += (response.count * 50);\n                    } else if (response.content_raw.length > 16) {\n                        if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier += .5;\n                        else this.data[index].multiplier = .5;\n                        this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                    }\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span3\", \"mvp\", \"My \" + this.parent.year + \" <i>👄 MVP</i>\", result);\n                } catch (error) {\n                    console.info(\"Error while counting my mvp\", error);\n                }\n            }\n        }\n    };\n\n    // Inactive plurker object\n    inactive = {\n        draw: (data, year) => {\n            this.statistics.draw('inactive', year + \" &#8617;\", 'I\\'ve been inactive since ' + year + ' <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n            this.statistics.drawPost('postcontent span2 inactivemore', data.plurk_id, '<i>My last Plurk</i> ' + datediff(data.posted), data.content, data.response_count);\n        },\n        empty: () => {\n            this.statistics.draw('inactive', '-', 'I didn\\'t post anything at this year <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n        }\n    }\n\n    // Loading object\n    loading = {\n        count: 0,\n        prev_count: 0,\n        counts: -1,\n        clean: false,\n        next: document.createElement('div'),\n        parent: this,\n        isComplete: function () { return this.count == this.counts },\n        init: function (next) {\n            this.count = 0;\n            this.prev_count = 0;\n            this.counts = -1;\n            this.clean = false;\n            this.next = next;\n        },\n        draw: function (item) {\n            return new Promise(resolve => {\n                this.prev_count = item;\n\n                if (!this.next.querySelector(\".statistics.loading\")) {\n                    this.parent.statistics.draw(\"loading\", item + \"%\", \"<i class='month'>Data from \" + this.year + \"</i>. Loading. <small>As long as you didn't close this browser tab, You can resume later by refreshing this page.</small>\");\n                }\n\n                // Animate loading\n                var load = { progress: this.prev_count };\n                gsap.to(load, {\n                    progress: Math.round(item),\n                    snap: \"progress\",\n                    ease: \"linear\",\n                    duration: reduceMotionFilter(.24),\n                    onUpdate: () => {\n                        var el = this.next.querySelector(\".loading .big\");\n                        if (el) el.innerHTML = load.progress + \"%\";\n                    },\n                    onComplete: async () => {\n                        if (this.clean) await this.done();\n                        resolve();\n                    }\n                });\n            });\n        },\n        loop: async function (length) {\n            this.clean = true;\n            this.counts = length;\n            await this.draw(0);\n        },\n        update: async function (month, value) {\n            var el = this.next.querySelector(\".loading .month\");\n            if (month && el) el.innerHTML = month;\n\n            if (this.counts >= 0) {\n                this.count = value ? value : this.count + 1;\n                await this.draw(Math.round(100 * (this.count / this.counts)));\n            }\n        },\n        fakeupdate: async function () {\n            if (this.counts >= 0) {\n                this.count++;\n                if (this.count >= (this.counts - 10)) this.count = (this.counts - 10);\n                await this.draw(100 * (this.count / this.counts));\n            }\n        },\n        forcedone: async function () {\n            this.count = this.counts;\n            await this.draw(100);\n        },\n        done: function () {\n            return new Promise(resolve => {\n                if (this.isComplete()) {\n                    var el = this.next.querySelector(\".statistics.loading\");\n\n                    this.clean = false;\n                    gsap.to(el, {\n                        opacity: 0,\n                        width: 0,\n                        height: 0,\n                        padding: 0,\n                        margin: 0,\n                        overflow: \"hidden\",\n                        duration: reduceMotionFilter(.5),\n                        ease: \"power3.out\",\n                        onComplete: () => {\n                            el.remove();\n                            scroll.refresh();\n                            resolve();\n                        }\n                    })\n                }\n            });\n        }\n    }\n\n    // Scroll Animation\n    scrollAnimate = {\n        credits: (tl) => {\n            var next = this.next;\n\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation, #credits .made\"), {\n                y: window.innerHeight * 1 / 8\n            }, {\n                y: 0,\n                ease: \"linear\",\n                duration: reduceMotionFilter(2),\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                stagger: {\n                    from: 'end',\n                    amount: .1\n                },\n                duration: reduceMotionFilter(1),\n                ease: \"power3.in\"\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .made\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: reduceMotionFilter(1),\n                ease: \"power3.in\"\n            }, .3);\n\n            return tl;\n        },\n        statistics: () => {\n            var next = this.next;\n\n            // Scroll animate statistics\n            scroll.push((tl) => {\n                tl = this.scrollAnimate.credits(tl);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#statistics\"),\n                    start: \"100%-=\" + window.innerHeight + \" 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n        },\n        permisions: () => {\n            var next = this.next;\n\n            // Scroll animation permission section\n            scroll.push((tl) => {\n                tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n                    y: 0\n                }, {\n                    y: window.innerHeight * -3 / 4,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sup\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * -1 / 10,\n                    rotation: -10,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sub\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * 1 / 10,\n                    rotation: 10,\n                    ease: \"linear\"\n                }, 0);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n            scroll.push((tl) => {\n                tl = this.scrollAnimate.credits(tl);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n        },\n        menu: () => {\n            var next = this.next;\n\n            // Scroll animation menu and logout\n            scroll.push((tl) => {\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: 'main',\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    onUpdate: (update) => {\n                        var el1 = '.logo, .size, .lamp, .switch';\n                        var el2 = el1 + \", .footer > *\";\n\n                        if (update.direction > 0) {\n                            gsap.killTweensOf(_qAll(el2));\n                            gsap.to(_qAll(el1), { y: -100, opacity: 0 });\n                            gsap.to(_qAll('.footer > *'), { y: 100, opacity: 0 });\n                        } else {\n                            gsap.to(_qAll(el2), { y: 0, opacity: 1 });\n                        }\n                    }\n                });\n            });\n        },\n        browserBar: (login = true) => {\n            if (login) {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#hello',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#statistics',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnter: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"white\");\n                        }\n                    });\n                });\n            } else {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#permission',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n            }\n        }\n    }\n\n    constructor(year) {\n        // Which year?\n        this.year = year;\n        this.startDate = this.year + '-10-29T09:00:00';\n        this.endDate = new Date((this.year - 1) + '-10-29T09:00:00');\n        this.days = 60 * 60 * 24 * 1000;\n        this.fulldays = 365;\n    }\n\n    // Browser color\n    getSetStateColor(state) {\n        if (typeof (state) == \"object\" && state.length >= 1) {\n            if (state.length == 1) {\n                darkmode.browserColorDark = state[0];\n                darkmode.browserColorLight = state[0];\n            } else {\n                darkmode.browserColorDark = state[1];\n                darkmode.browserColorLight = state[0];\n            }\n        } else if (state == \"green\") {\n            darkmode.browserColorDark = \"#0d4f03\";\n            darkmode.browserColorLight = \"#60e670\";\n        } else if (state == \"yellow\") {\n            darkmode.browserColorDark = \"#705f02\";\n            darkmode.browserColorLight = \"#FFD700\";\n        } else {\n            darkmode.browserColorDark = \"#000000\";\n            darkmode.browserColorLight = \"#FFFFFF\";\n        }\n\n        return [darkmode.browserColorLight, darkmode.browserColorDark];\n    }\n    browserColor(state, duration, ease) {\n        this.getSetStateColor(state);\n        darkmode.setDarkMode(duration, ease);\n    }\n\n    // Show/hide Animations\n    // Login Pages\n    showLoginPage(tl) {\n        var next = this.next;\n\n        this.browserColor(\"green\", 1);\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            display: \"\",\n            opacity: 0,\n            top: 0\n        }, {\n            opacity: 1,\n            duration: reduceMotionFilter(1),\n            ease: \"power3.in\"\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: .2,\n            duration: reduceMotionFilter(1),\n            ease: \"power3.out\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    top: \"\"\n                });\n            }\n        }, \">-.5\");\n\n        return tl;\n    }\n    hideLoginPage(tl) {\n        var next = this.next;\n\n        tl.set(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            top: 0,\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *, #permission form\"), {\n            y: 0,\n            opacity: 1,\n        }, {\n            y: 200,\n            opacity: 0,\n            stagger: {\n                from: \"end\",\n                amount: .2\n            },\n            duration: reduceMotionFilter(1),\n            ease: \"power3.in\",\n            onComplete: () => {\n                this.browserColor(\"yellow\");\n            }\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            opacity: 1\n        }, {\n            opacity: 0,\n            duration: reduceMotionFilter(1),\n            ease: \"power3.in\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    display: \"none\",\n                    top: \"\"\n                }, \">\");\n            }\n        }, \">-.2\");\n\n        return tl;\n    }\n    // Statistic Pages\n    showStatisticPages(tl) {\n        var next = this.next;\n\n        tl.fromTo(next.querySelectorAll(\"#hello\"), {\n            display: \"\",\n            opacity: 0\n        }, {\n            opacity: 1,\n            ease: \"power3.in\",\n            duration: reduceMotionFilter(1),\n            onStart: () => {\n                this.browserColor(\"green\", .5);\n            }\n        }, \">-.25\");\n        tl.fromTo(next.querySelectorAll(\"#hello .bgtext > *\"), {\n            display: \"\",\n            opacity: 0,\n            y: 200\n        }, {\n            opacity: 1,\n            y: 0,\n            duration: reduceMotionFilter(1),\n            stagger: .2,\n            ease: \"power3.out\"\n        }, \">-.5\");\n        tl.fromTo(next.querySelectorAll(\" #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n            display: \"\",\n            opacity: 0,\n            y: 200\n        }, {\n            opacity: 1,\n            y: 0,\n            duration: reduceMotionFilter(1),\n            stagger: .2,\n            ease: \"power3.out\"\n        }, \">-.5\");\n        tl.fromTo(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n            display: \"\",\n            opacity: 0\n        }, {\n            opacity: 1,\n            duration: reduceMotionFilter(.5),\n        }, \">-.5\");\n\n        return tl;\n    }\n    hideStatisticPages(tl) {\n        var next = this.next;\n\n        tl = animate.top(next, tl);\n        tl.fromTo(next.querySelectorAll(\".footer > *, #hello .bgtext > *, #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n            opacity: 1,\n            y: 0\n        }, {\n            opacity: 0,\n            y: 200,\n            duration: reduceMotionFilter(1),\n            stagger: {\n                from: \"end\",\n                amount: .2\n            },\n            ease: \"power3.in\"\n        }, \">-.2\");\n        tl.set(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n            opacity: 0\n        }, \">-.5\");\n        tl.fromTo(next.querySelectorAll(\"#hello\"), {\n            opacity: 1\n        }, {\n            opacity: 0,\n            duration: reduceMotionFilter(1),\n            ease: \"power3.in\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\".grant\"), { display: \"none\" });\n            }\n        }, \">-.5\");\n\n        return tl;\n    }\n\n    // Login messages\n    message(message, quick) {\n        var next = this.next;\n\n        var loginmessage = next.querySelector(\"#login-message\");\n\n        if (quick) {\n            loginmessage.innerHTML = message;\n        } else {\n            gsap.to(loginmessage, {\n                opacity: 0,\n                onComplete: function () {\n                    loginmessage.innerHTML = message;\n                    gsap.to(loginmessage, {\n                        opacity: 1\n                    });\n                }\n            });\n        }\n    }\n\n    // Logout\n    requestLogout() {\n        var tl = gsap.timeline();\n\n        api.abort();\n\n        // Hide statistic pages\n        tl = this.hideStatisticPages(tl);\n        tl.set(this.next, {\n            onComplete: async () => {\n                await api.call(\"?fetch=logout\");\n                this.statistics.clear();\n                api.clear();\n                this.login();\n                scroll.refresh();\n            }\n        });\n    }\n\n    // Request token\n    async requestToken(text) {\n        var next = this.next;\n        var tokenlink = next.querySelector(\"#tokenurl\");\n        tokenlink.textContent = \"Connecting Plurk...\";\n\n        var tl = gsap.timeline();\n        tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            duration: reduceMotionFilter(1),\n            ease: \"power3.out\"\n        }, 1);\n        tl.fromTo(next.querySelectorAll(\"#permission h1, #permission li\"), {\n            display: \"\",\n            y: 50,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: .1,\n            duration: reduceMotionFilter(1),\n            ease: \"power3.out\"\n        }, 1);\n\n        api.call(\"?request=token\").then(data => {\n            if (text) {\n                message(text);\n            } else {\n                tokenlink.textContent = \"Grant Access\";\n                tokenlink.setAttribute(\"href\", api.url + \"?redirect=\" + data.message.url);\n            }\n        }, () => {\n            message(\"Error when requesting verification from Plurk, please reload your browser again.\");\n        });\n\n        if (!text) next.querySelector(\"#permission form\").style.display = \"none\";\n    }\n\n    // Display current Plurker data\n    async displayPlurkerData() {\n        var plurker = this.me;\n        var next = this.next;\n        var extra = \"\";\n\n        // plurks_count\n        var days = (plurker.anniversary.years * 365) + plurker.anniversary.days;\n        var responses = Math.round(plurker.response_count / days);\n\n        next.querySelector(\"#hello .thumbs\").innerHTML = \"<img src='\" + plurker.avatar_big + \"' />\";\n        if (this.year == 2021) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>If \" + this.year + \" have been a rough year you, hopefully RePlurk will cheer you by bringing some good memories</p>\";\n        else next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>This is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\n        // Draw statistic\n        this.statistics.title('All Time', 'alltime');\n        if (plurker.anniversary.years && plurker.anniversary.days) {\n            this.statistics.draw('spansmall center posted', Math.round(plurker.plurks_count / days), \"I posted around <i>💬 \" + plural(Math.round(plurker.plurks_count / days), \"plurk\") + \" per day</i>\");\n\n            // Responses\n            var oneday = 16;\n            if (responses <= oneday) extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday / responses), \"hour\") + '</i>';\n            else extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday * 60 / responses), \"minute\") + '</i>';\n            this.statistics.draw('span2 center responded', responses, \"I responded around <i>💬 \" + plural(responses, \"time\") + \"</i> per day. \" + extra + \" when I'm not asleep\");\n\n            var join = new Date(plurker.join_date)\n            this.statistics.draw('spansmall center anniversary', \"<strong><i>\" + monthNames[join.getMonth()] + \"</i> <i>\" + join.getFullYear() + \"</i></strong> <em>\" + join.getDate() + \"</em>\", \"I joined Plurk <i>\" + plural(plurker.anniversary.years, \"year\") + \"</i> and <i>\" + plural(plurker.anniversary.days, \"day\") + \"</i> ago\");\n            this.statistics.draw('spansmall center badges', \"9\", \"I have <i>🛡 \" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        } else {\n            this.statistics.draw('', '-', \"There is no data in my timeline\");\n            this.statistics.draw('', plurker.badges.length, \"But at least I have <i>\" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        }\n\n        // Scroll animation hello section\n        scroll.push(tl => {\n            tl.fromTo(next.querySelectorAll(\"#hello .text, #hello .thumbs\"), {\n                y: 0\n            }, {\n                y: window.innerHeight * -3 / 4,\n                ease: \"linear\",\n                duration: reduceMotionFilter(1),\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sup\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * -1 / 10,\n                rotation: -10,\n                ease: \"linear\",\n                duration: reduceMotionFilter(1),\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sub\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * 1 / 10,\n                rotation: 10,\n                ease: \"linear\",\n                duration: reduceMotionFilter(1),\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .arrow-big\"), {\n                y: 0,\n                opacity: 1\n            }, {\n                y: window.innerHeight * 1 / 4,\n                opacity: 0,\n                ease: \"linear\",\n                duration: reduceMotionFilter(.25),\n            }, 0);\n            return tl;\n        }, tl => ScrollTrigger.create({\n            trigger: next.querySelectorAll(\"#hello\"),\n            start: \"0 0\",\n            end: \"100% 0\",\n            animation: tl,\n            scrub: true\n        }));\n        scroll.refresh();\n    }\n    // Display statistics\n    async displayStatistics() {\n        this.statistics.title('This Year', 'thisyear');\n        this.statistics.draw(\"loading thisyearloading\", \"\", \"<i class='month'>Data from December</i>1 of 2. Loading \" + this.year + \" timeline. It can take up to 1 minute.\");\n\n        this.loading.init(this.next);\n        this.loading.loop(this.fulldays);\n\n        // Load loop timeline\n        var getTimeline = async (offset) => {\n            offset = (!offset) ? \"\" : \"&offset=\" + offset;\n\n            var data = await api.call(\"?fetch=plurk&filter=my\" + offset, 1);\n            if (data.success) {\n                this.friends.add(data.message.plurk_users);\n                this.plurks = this.plurks.concat(data.message.plurks);\n\n                if (data.message.plurks.length > 0) {\n                    var lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\n                    if (lastposted >= this.endDate) {\n                        this.loading.update(\"Data from \" + monthNames[lastposted.getMonth()] + \" \" + lastposted.getFullYear(), this.fulldays - Math.floor((lastposted - this.endDate) / this.days));\n\n                        // Load next plurks\n                        await getTimeline(data.message.offset);\n                    } else {\n                        while (lastposted < this.endDate && this.plurks.length > 1) {\n                            this.plurks.pop();\n                            lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n                        }\n                        await this.loading.forcedone();\n                    }\n                } else {\n                    await this.loading.forcedone();\n                }\n            } else {\n                this.requestLogout();\n            }\n        }\n        await getTimeline(this.startDate);\n\n        // When loading done\n        if (this.plurks.length > 1) {\n            // Count user statistics\n            this.statistics.plurks_count = 0;\n            this.plurks.forEach(plurk => {\n                // Calculate the statistics\n                if (plurk.responded) this.statistics.responded_count++;\n                if (plurk.owner_id == this.me.id) {\n                    this.statistics.plurks_count++;\n                    this.statistics.replurker_count += plurk.replurkers.length;\n                    this.statistics.replurker_list = this.statistics.listCount(this.statistics.replurker_list, plurk.replurkers);\n                    this.statistics.favourite_count += plurk.favorers.length;\n                    this.statistics.favorite_list = this.statistics.listCount(this.statistics.favorite_list, plurk.favorers);\n                    if (plurk.anonymous) this.statistics.whispers_count++;\n                    if (plurk.coins) this.statistics.coins_count += plurk.coins;\n                    if (plurk.porn) this.statistics.porn_count++;\n                    if (!plurk.response_count) this.statistics.noresponse_count++;\n                    if (plurk.plurk_type == 3) this.statistics.private_count++;\n                    this.statistics.response_count += plurk.response_count;\n                } else if (plurk.responded) this.statistics.responded_other_count++;\n            });\n\n            // Sort based on date\n            this.plurks.sort((a, b) => new Date(b.posted) - new Date(a.posted));\n\n            // Draw statistics\n            try {\n                await this.statistics.drawAll(this.plurks);\n            } catch (error) {\n                console.info(\"Error while counting statistics\", error);\n            }\n\n            // Display extended statistics\n            this.displayExtendedStatistics();\n        } else {\n            if (this.plurks[0]) {\n                var date = new Date(plurk[0].posted);\n                inactive.draw(plurk[0], date.getFullYear());\n            }\n            else inactive.empty();\n        }\n    }\n    // Display extended statistics\n    async displayExtendedStatistics() {\n        // Deeper user statistics\n        this.statistics.title('Dig Deeper', 'digdeeper');\n        this.statistics.draw(\"loading digdeeperloading\", \"\", \"<i class='month'>Data from \" + this.year + \"</i> 2 of 2. Loading all responses. <small>If the loading seems to stop, refresh your browser tab to resume your download. Closing your browser tab will clear all downloaded data.</small>\");\n\n        // Load each post responses and calculate statistics\n        this.loading.init(this.next);\n        this.loading.loop(this.plurks.length);\n\n        // Get the responses for each plurks in parallel\n        var index = 0;\n        this.plurks.sort((a, b) => new Date(a.posted) < new Date(b.posted));\n        for (var plurk of this.plurks) {\n            var date = new Date(plurk.posted);\n            this.loading.update(\"Data from \" + monthNames[date.getMonth()] + \" \" + date.getFullYear());\n\n            // Count all\n            await this.most.countAll(plurk);\n\n            // Count responses\n            if (plurk.response_count > 0 && (plurk.responded || plurk.owner_id == this.me.id)) {\n                var result = await api.call(\"?fetch=response&plurk_ids=\" + plurk.plurk_id);\n                if (result.success) for (var message of result.message) {\n                    // Add friends from response lists\n                    this.friends.add(message.friends);\n\n                    // Count the rest of statistics\n                    for (var response of message.responses) {\n                        // Find and count all responders\n                        await this.most.responders.count(response);\n                        this.most.interaction.count(response);\n                        this.most.mvp.count(response, \"response\");\n                        // Count all\n                        await this.most.countAll(response);\n                    }\n                } else {\n                    this.requestLogout();\n                    break;\n                }\n            }\n        }\n\n        // Display How Many Links\n        this.most.links.drawLinks();\n        // Display How Many Pictures\n        this.most.links.drawPics();\n\n        // Draw Results\n        // Display Most Responder\n        // this.most.responders.draw();\n\n        // Display Most Interaction\n        this.most.interaction.draw();\n\n        // Display Most Mentioned by me\n        // this.most.mentions.draw();\n\n        // Display How Many Words-Characters\n        this.most.types.draw();\n\n        // Display Most hashtags by me\n        this.most.hashtags.draw();\n\n        // Display Most My Emoticons\n        this.most.myemoticons.draw();\n\n        // Display MVP\n        this.statistics.replurker_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"replurk\");\n        });\n        this.statistics.favorite_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"favorite\");\n        });\n        this.most.mvp.draw();\n\n    }\n\n    // Check login status\n    async login(clear) {\n        var next = this.next;\n\n        this.me = { id: 0 };\n        this.friends.init();\n        this.statistics.init(next);\n        this.most.init();\n        this.plurks = [];\n\n        scroll.destroy();\n\n        window.scrollTo(0, 0);\n        this.browserColor(\"yellow\");\n\n        // Scroll animation menu and logout\n        this.scrollAnimate.menu();\n\n        // Check is server have open session\n        var tl = gsap.timeline();\n        tl.set(next.querySelector(\"#hello .arrow-big\"), {\n            opacity: 0\n        });\n\n        var data = await api.call(\"?\");\n        if (data.success) {\n            this.me = data.message;\n\n            await this.displayPlurkerData();\n\n            // Scroll top top\n            tl = animate.top(next, tl);\n\n            // Hide login page\n            if (clear) next.querySelector(\"#permission\").style.display = \"none\";\n            else tl = this.hideLoginPage(tl);\n\n            // Show statistic pages\n            this.showStatisticPages(tl);\n\n            // Add logout event\n            next.querySelector(\"#logout\").onclick = () => {\n                this.requestLogout();\n            }\n\n            // Scroll animate statistics\n            this.scrollAnimate.statistics();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar();\n\n            scroll.refresh();\n\n            this.displayStatistics();\n        } else {\n            // Hide statistic pages\n            if (clear) next.querySelectorAll(\".grant\").forEach(function (el) { el.style.display = \"none\"; });\n            // Show login page\n            this.showLoginPage(tl);\n            // Request token\n            this.requestToken();\n\n            // Scroll animation permission section\n            this.scrollAnimate.permisions();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar(false);\n\n            scroll.refresh();\n        }\n\n        // Snap\n        next.querySelectorAll(\"section.snap\").forEach(el => {\n            scroll.snap(el);\n        });\n        next.querySelectorAll(\"section.snap-bottom\").forEach(el => {\n            scroll.snap(el, \"bottom\");\n        });\n    }\n\n    // Run the API call\n    run(el) {\n        return new Promise(resolve => {\n            this.next = el;\n            this.browserColor(\"yellow\");\n\n            // Run the login\n            gsap.fromTo(this.next.querySelectorAll('#credits'), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: reduceMotionFilter(.5),\n                ease: \"power3.in\",\n                onComplete: async () => {\n                    // Change color\n                    this.browserColor(\"yellow\", 0);\n\n                    // Display login\n                    await this.login(true);\n\n                    resolve();\n                }\n            });\n        });\n    }\n}\n\n\nexport default replurk;"],"names":["iconLink","span","constructor","classname","text","this","el","document","createElement","setAttribute","innerHTML","update","textContent","updateHTML","colors","oldcolor","randomcolors","getRandomColor","color","slice","pop","plurkerElement","id","data","avatarurl","customcreate","user","user_id","value","nick_name","attached","hidden","count","position","created","counts","create","avatar","name","display_name","appendChild","insertTo","element","insertAdjacentElement","destroy","remove","next","plurks","me","friends","unavailable","parent","init","add","new_friends","Object","assign","find","async","findIndex","result","success","temp","message","user_info","push","findByUsername","index","toLowerCase","getAvatar","has_profile_image","getAvatarByUsername","user_name","statistics","whispers_count","coins_count","porn_count","noresponse_count","private_count","replurker_count","replurker_list","favourite_count","favorite_list","response_count","responded_count","responded_other_count","responded_other_list","plurks_count","querySelector","MutationObserver","mutationsList","forEach","mutation","addedNodes","afterDraw","observe","attributes","childList","subtree","clear","listCount","list","collection","length","title","style","loading","insertAdjacentHTML","anim","background","opacity","duration","ease","screen","tl","fromTo","children","y","window","innerHeight","trigger","start","end","animation","scrub","number","Number","load","progress","to","snap","onUpdate","toggleActions","querySelectorAll","x","height","getAttribute","capture","onclick","generating","body","cursor","img","localUrl","_","Math","round","backgroundColor","logging","then","canvas","link","display","download","year","Date","now","href","toDataURL","click","removeChild","setTimeout","wrapper","draw","drawDiv","drawGraph","drawImage","image","badge","drawHTML","html","drawLink","drawPost","url","toString","drawUserList","max","friend","plurker","outerHTML","scale","stagger","amount","from","attach","charttitle","node","chart","that","zIndex","maxTop","top","currentTop","onComplete","drawAll","response_percentage","most","responses","replurk","favorite","sort","a","b","findregex","regex","replace","content","storage","match","idx","responders","mentions","dataAll","myemoticons","hashtags","links","pics","types","words","chars","countAll","content_raw","plurk_id","replurkers_count","favorite_count","response","i","undefined","loved","includes","pic","split","drawLinks","drawPics","owner_id","plurk_type","posted","interaction","multiplier","console","info","mvp","type","error","inactive","empty","prev_count","clean","isComplete","item","Promise","resolve","done","loop","month","fakeupdate","forcedone","width","padding","margin","overflow","scrollAnimate","credits","permisions","rotation","menu","el1","el2","direction","browserBar","login","onLeave","browserColor","onEnterBack","onEnter","startDate","endDate","days","fulldays","getSetStateColor","state","showLoginPage","hideLoginPage","set","showStatisticPages","onStart","hideStatisticPages","quick","loginmessage","requestLogout","tokenlink","extra","anniversary","years","avatar_big","oneday","join","join_date","getMonth","getFullYear","getDate","badges","getTimeline","offset","plurk_users","concat","lastposted","floor","plurk","responded","replurkers","favorers","anonymous","coins","porn","displayExtendedStatistics","date","scrollTo","displayPlurkerData","displayStatistics","requestToken","run"],"sourceRoot":""}