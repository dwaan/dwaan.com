{"version":3,"file":"474.bundle.js","mappings":"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","sources":["webpack://dwaan/./src/js/helpers/replurk.js"],"sourcesContent":["\"use strict\";\n\nimport { gsap, ScrollTrigger } from \"gsap/all\";\nimport api from \"../helpers/api\";\nimport scroll from \"../helpers/scroll\";\nimport darkmode from \"../helpers/darkmode\";\nimport animate from \"../helpers/animate\";\nimport html2canvas from \"html2canvas\";\nimport { _q, _qAll, hasClass, plural, monthNames, animateNumber, datediff, pluralinwords, reduceMotionFilter, waitForImg } from '../helpers/helper';\n\n/*\n    Simple span element object:\n\n    1. update(text): update the content with text value, and animate it if it's number\n    2. updateHTML(text): update the content with html value\n*/\n\nvar iconLink = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\"><path id=\"right\" d=\"M19.188,12.001c0,1.1-0.891,2.015-1.988,2.015l-4.195-0.015C13.543,15.089,13.968,16,15.002,16h3C19.658,16,21,13.657,21,12s-1.342-4-2.998-4h-3c-1.034,0-1.459,0.911-1.998,1.999l4.195-0.015C18.297,9.984,19.188,10.901,19.188,12.001z\"/><path id=\"center\" d=\"M8,12c0,0.535,0.42,1,0.938,1h6.109c0.518,0,0.938-0.465,0.938-1c0-0.534-0.42-1-0.938-1H8.938C8.42,11,8,11.466,8,12z\"/><path id=\"left\" d=\"M4.816,11.999c0-1.1,0.891-2.015,1.988-2.015L11,9.999C10.461,8.911,10.036,8,9.002,8h-3c-1.656,0-2.998,2.343-2.998,4s1.342,4,2.998,4h3c1.034,0,1.459-0.911,1.998-1.999l-4.195,0.015C5.707,14.016,4.816,13.099,4.816,11.999z\"/></svg>';\nclass span {\n    constructor(classname, text) {\n        this.el = document.createElement('span');\n        this.el.setAttribute(\"class\", classname);\n        this.el.innerHTML = text;\n    }\n\n    update(text) {\n        animateNumber(this.el.textContent, text, (text) => {\n            this.el.textContent = text;\n        });\n    }\n\n    updateHTML(text) {\n        this.el.innerHTML = text;\n    }\n}\n\n/*\n    Color randomizer\n\n    1. colors: array of colors value\n    2. getRandomColor(): get the randomized color from colors list\n*/\nclass colors {\n    constructor() {\n        this.oldcolor = \"\";\n        this.randomcolors = [];\n        this.colors = ['rgb(63,94,251)', 'rgb(252,70,107)', 'rgb(34,193,195)', 'rgb(253,187,45)', 'rgb(195,34,190)', 'rgb(219,158,0)', 'rgb(75,231,152)', 'rgb(195,34,103)', 'rgb(45,182,253)'];\n    }\n\n    getRandomColor() {\n        var color;\n        do {\n            this.randomcolors = gsap.utils.shuffle(this.colors).slice();\n        } while (this.oldcolor == (color = this.randomcolors.pop()));\n        this.oldcolor = color;\n        return color;\n    }\n}\n\n/*\n    Plurk element object spesification:\n\n    1. id: contain the id name\n    2. user: contain user object\n    3. attached: status of element is attached in DOM or not\n    4. create(): create the DOM element\n    4. destroy(): remove the DOM element\n    4. update(): update the DOM element based on it's current value\n    5. insertTo(element): insert DOM element to spesific element, also will check if it's already created or not\n\n*/\nclass plurkerElement {\n    constructor(id, data, avatarurl, customcreate) {\n        this.id = id;\n        this.user = data;\n        this.user_id = data.id;\n        this.value = data.nick_name;\n        this.nick_name = data.nick_name;\n        this.attached = false;\n        this.hidden = true;\n        this.count = 1;\n        this.position = 0;\n        this.customcreate = customcreate;\n        this.el = document.createElement('a');\n        this.created = false;\n        this.avatarurl = avatarurl;\n        this.counts = new span('count', this.count);\n    }\n\n    create() {\n        this.created = true;\n\n        this.el.setAttribute(\"id\", this.id + this.user_id);\n        this.el.setAttribute(\"class\", 'plurkers');\n        this.el.setAttribute(\"href\", 'https://plurk.com/' + this.user.nick_name);\n        this.el.setAttribute(\"target\", '_BLANK');\n\n        if (!this.customcreate) {\n            this.avatar = new span('avatar', '<img src=\"' + this.avatarurl + '\" />');\n            this.name = new span('name', this.user.display_name);\n            this.counts = new span('count', this.count);\n            this.el.appendChild(this.avatar.el);\n            this.el.appendChild(this.name.el);\n            this.el.appendChild(this.counts.el);\n        } else {\n            this.customcreate(this);\n        }\n    }\n\n    insertTo(element) {\n        if (!this.created) this.create();\n\n        this.attached = true;\n        element.insertAdjacentElement(\"beforeend\", this.el);\n    }\n\n    destroy() {\n        this.attached = false;\n\n        if (this.el) {\n            this.el.remove();\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    update() {\n        // Only update when it's attached\n        if (this.attached) {\n            this.counts.update(this.count);\n        }\n    }\n}\n\n\n/*\n    Replurk class\n*/\nclass replurk {\n    // Draw in which element?\n    next = document.createElement('div');\n    // Plurks array\n    plurks = [];\n    // Plurker profile object\n    me = { \"id\": 3203568, \"has_profile_image\": 1, \"timeline_privacy\": 0, \"nick_name\": \"dwan\", \"display_name\": \"Dwan\", \"date_of_birth\": \"Sat, 29 Oct 1983 00:01:00 GMT\", \"avatar\": 41917598, \"gender\": 1, \"karma\": 199.24, \"premium\": true, \"verified_account\": false, \"dateformat\": 3, \"default_lang\": \"en\", \"friend_list_privacy\": \"public\", \"name_color\": \"FFA59A\", \"full_name\": \"Dwan B.\", \"location\": \"Tel Aviv-Yafo, Dan, Israel\", \"timezone\": \"Asia/Jerusalem\", \"phone_verified\": 0, \"bday_privacy\": 1, \"plurks_count\": 14598, \"response_count\": 79484, \"pinned_plurk_id\": 0, \"background_id\": 0, \"show_ads\": false, \"show_location\": 0, \"profile_views\": 36112, \"avatar_small\": \"https://avatars.plurk.com/3203568-small41917598.gif\", \"avatar_medium\": \"https://avatars.plurk.com/3203568-medium41917598.gif\", \"avatar_big\": \"https://avatars.plurk.com/3203568-big41917598.jpg\", \"about\": \"Mr. Goat\\u2019s dad and full-time husband\", \"about_renderred\": \"Mr. Goat\\u2019s dad and full-time husband\", \"page_title\": \"The world revolve around me\", \"recruited\": 14, \"relationship\": \"married\", \"friends_count\": 571, \"fans_count\": 498, \"join_date\": \"Wed, 15 Oct 2008 07:48:05 GMT\", \"privacy\": \"world\", \"accept_private_plurk_from\": \"all\", \"post_anonymous_plurk\": false, \"badges\": [\"10_invites\", \"14\", \"9\", \"10000_views\", \"10000_plurks\", \"50000_comments\", \"upload_profile_image\", \"50_fans\", \"coin\"], \"link_facebook\": false, \"setup_facebook_sync\": false, \"setup_twitter_sync\": false, \"setup_weibo_sync\": false, \"filter\": { \"porn\": 2, \"anonymous\": 0, \"keywords\": null }, \"anniversary\": { \"years\": 13, \"days\": 27 }, \"phone_number\": null, \"creature\": 0, \"creature_url\": null, \"creature_special\": 1, \"creature_special_url\": null };\n\n    /*\n        Friends object spesification:\n\n        1. data: contains all the friends collection data\n        2. add(data): add friend to friends collection data\n        3. find(user_id): return friend data based on their id\n        4. findByUsername(nick_name): return friend data based on their nick name\n        5. getAvatar(user_id): return avatar url based on their id for from friends collection data\n        6. getAvatarByUsername(user_id): return avatar url based on their nick name for from friends collection data\n    */\n    friends = {\n        data: {},\n        unavailable: [],\n        parent: this,\n        init: function () {\n            this.data = {};\n        },\n        add: function (new_friends) {\n            Object.assign(this.data, new_friends);\n        },\n        find: async function (user_id) {\n            if (this.unavailable.findIndex(el => el == user_id) >= 0) return false;\n\n            if (this.data && this.data[user_id]) {\n                return this.data[user_id];\n            } else {\n                var result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&user_id=\" + user_id);\n\n                if (result.success) {\n                    var temp = {};\n                    temp[result.message.user_info.id] = result.message.user_info;\n                    this.add(temp);\n                    return result.message.user_info;\n                } else {\n                    this.unavailable.push(user_id);\n                    return false;\n                }\n            }\n        },\n        findByUsername: async function (nick_name) {\n            var user_id = false;\n\n            if (this.unavailable.findIndex(el => el == nick_name) >= 0) return false;\n\n            for (var index in this.data) {\n                if (this.data[index].nick_name.toLowerCase() == nick_name.toLowerCase()) {\n                    user_id = index;\n                    break;\n                }\n            }\n\n            if (user_id) {\n                return this.data[user_id];\n            } else {\n                var result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&nick_name=\" + nick_name);\n\n                if (result.success) {\n                    var temp = {};\n                    temp[result.message.user_info.id] = result.message.user_info;\n                    this.add(temp);\n                    return result.message.user_info;\n                } else {\n                    this.unavailable.push(nick_name);\n                    return false;\n                }\n            }\n        },\n        getAvatar: function (user_id) {\n            if (user_id && this.data && this.data[user_id]) {\n                if (this.data[user_id].has_profile_image) {\n                    var avatar = \"\";\n                    if (this.data[user_id].avatar) avatar = this.data[user_id].avatar;\n                    return 'https://avatars.plurk.com/' + user_id + '-big' + avatar + '.jpg';\n                }\n            }\n            return 'https://plurk.com/static/default_big.jpg';\n        },\n        getAvatarByUsername: function (user_name) {\n            var user_id = false;\n\n            if (user_name) {\n                for (var index in this.data) {\n                    if (this.data[index].nick_name.toLowerCase() == user_name.toLowerCase()) {\n                        user_id = index;\n                        break;\n                    }\n                }\n            }\n\n            return this.getAvatar(user_id);\n        }\n    }\n\n    // Statistics plurker object renderer\n    statistics = {\n        // Storage\n        whispers_count: 0,\n        coins_count: 0,\n        porn_count: 0,\n        noresponse_count: 0,\n        private_count: 0,\n        replurker_count: 0,\n        replurker_list: [],\n        favourite_count: 0,\n        favorite_list: [],\n        response_count: 0,\n        responded_count: 0,\n        responded_other_count: 0,\n        responded_other_list: [],\n        plurks_count: 0,\n        poll_count: 0,\n        poll_responder_count: 0,\n        poll_popular_plurk: {},\n        redditor_count: 0,\n        tiktoker_count: 0,\n        instagrammer_count: 0,\n        imgurer_count: 0,\n        facebooker_count: 0,\n        twitterer_count: 0,\n        youtuber_count: 0,\n        id: 0,\n        // Other\n        next: document.createElement('div'),\n        el: document.createElement('div'),\n        randomcolors: [],\n        parent: this,\n        init: function (next) {\n            this.whispers_count = 0;\n            this.coins_count = 0;\n            this.porn_count = 0;\n            this.noresponse_count = 0;\n            this.private_count = 0;\n            this.replurker_count = 0;\n            this.replurker_list = [];\n            this.favourite_count = 0;\n            this.favorite_list = [];\n            this.response_count = 0;\n            this.responded_count = 0;\n            this.responded_other_count = 0;\n            this.responded_other_list = [];\n            this.plurks_count = 0;\n            this.id = 0;\n            this.next = next;\n            this.randomcolors = [];\n\n            this.el = this.next.querySelector(\"#statistics\");\n\n            // Obverse when element is added to DOM\n            var observer = new MutationObserver((mutationsList) => {\n                mutationsList.forEach(mutation => {\n                    mutation.addedNodes.forEach(el => {\n                        this.afterDraw(el);\n                    });\n                });\n            });\n            observer.observe(this.el, {\n                attributes: true,\n                childList: true,\n                subtree: false\n            });\n        },\n        clear: function () {\n            this.el.innerHTML = \"\";\n        },\n        listCount: function (list, collection) {\n            if (collection.length > 0) {\n                collection.forEach(value => {\n                    var index = list.findIndex(el => el.id == value)\n\n                    if (index < 0) list.push({ id: value, count: 1 });\n                    else list[index].count++;\n                });\n            }\n\n            return list;\n        },\n        title: function (text, style = \"\", loading = false) {\n            if (loading) this.el.insertAdjacentHTML('beforeend', '<div class=\"statistics middle title ' + style + '\"><h3><span>' + text + '</span><span class=\"loading\"><i/></span></h3></div>');\n            else this.el.insertAdjacentHTML('beforeend', '<div class=\"statistics middle title ' + style + '\"><h3><span>' + text + '</span><span class=\"line\"><i/></span></h3></div>');\n        },\n        afterDraw: function (el) {\n            var length = reduceMotionFilter(1);\n\n            if (hasClass(el, 'wrap')) {\n                var color = new colors();\n                var randomcolors = [color.getRandomColor(), color.getRandomColor()]\n                var anim = el.querySelector(\".anim\");\n\n                gsap.set(anim, {\n                    background: 'radial-gradient(at 10% 10%, ' + randomcolors[0] + ' 0%, ' + randomcolors[1] + ' 100%)'\n                });\n\n                gsap.fromTo(anim, {\n                    opacity: 0\n                }, {\n                    opacity: 1,\n                    duration: length / 2,\n                    ease: \"power3.out\"\n                }, 0);\n\n                // Scroll animation wrap section\n                var screen = gsap.matchMedia();\n                screen.add(\"(min-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: window.innerHeight * 1 / 5\n                        }, {\n                            y: 0,\n                            ease: \"ease.out\"\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"0 100%-=100px\",\n                            animation: tl,\n                            scrub: 2\n                        });\n                    });\n                });\n                screen.add(\"(max-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: 0\n                        }, {\n                            y: 0\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"100px 100%-=100px\",\n                            animation: tl,\n                            scrub: 1\n                        });\n                    });\n                });\n\n                scroll.push(function (tl) {\n                    if (el.querySelector(\".big\")) {\n                        var number = Number(el.querySelector(\".big\").textContent);\n                        if (number > 0) {\n                            var load = { progress: 0 };\n                            var duration = 1;\n                            if (number >= 500 && number < 1000) duration = 2;\n                            else if (number >= 1000 && number < 99999) duration = 3;\n                            else if (number >= 99999) duration = 4;\n                            tl.to(load, {\n                                progress: number,\n                                snap: \"progress\",\n                                ease: \"power3.out\",\n                                duration: duration,\n                                onUpdate: () => {\n                                    el.querySelector(\".big\").textContent = plural(load.progress);\n                                }\n                            }, 0);\n                        }\n                    }\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"0 100%-=100px\",\n                        end: \"100px 100%-=100px\",\n                        animation: tl,\n                        toggleActions: \"play none none none\"\n                    });\n                });\n            } else {\n                // Scroll animation line section\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelectorAll(\"i\"), {\n                        x: \"-100%\"\n                    }, {\n                        x: \"0%\",\n                        ease: \"ease.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"100% 100%\",\n                        end: \"100% 0\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'drawgraph')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".graph\"), {\n                        y: 100\n                    }, {\n                        y: 0\n                    }, 0);\n\n                    tl.fromTo(el.querySelector(\".graph i\"), {\n                        height: \"0%\"\n                    }, {\n                        height: el.querySelector(\".graph i\").getAttribute(\"data-number\") + \"%\"\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'coins')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".big\"), {\n                        y: \"50%\"\n                    }, {\n                        y: 0,\n                        ease: \"power3.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 2\n                    });\n                });\n            }\n\n            // Capture function\n            this.capture(el);\n\n            scroll.refresh();\n        },\n        capture: (el) => {\n            var capture = el.querySelector(\".capture small\");\n            if (!capture) return;\n\n            capture.onclick = async () => {\n                if (capture.generating) return;\n\n                var imgs = el.querySelectorAll(\"img\");\n\n                // Informing user the process is starting\n                capture.generating = true;\n                document.body.style.cursor = \"wait\";\n\n                // Proxying images\n                imgs.forEach(img => {\n                    if (!img.getAttribute(\"src\").includes(\"http\") || img.localUrl) return;\n\n                    img.localUrl = true;\n                    img.setAttribute(\"src\", api.url + \"?img=\" + img.getAttribute(\"src\"));\n                });\n                // Load and cache image\n                await waitForImg(imgs, (_, progress) => {\n                    capture.innerHTML = \"Downloading images... (\" + Math.round(progress) + \"%)\";\n                });\n\n                // HTML to Canvas magic\n                capture.innerHTML = \"Processing...\";\n                var canvas = await html2canvas(el.querySelector(\".anim\"), {\n                    backgroundColor: null,\n                    logging: false,\n                });\n\n                // Download the output\n                var link = document.createElement(\"a\");\n                link.style.display = \"none\";\n                link.download = \"replurk\" + this.year + \"-\" + Date.now() + \".png\";\n                link.href = canvas.toDataURL();\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n                link.remove();\n\n                // Reset button after 3s\n                capture.innerHTML = \"Done\";\n                document.body.style.cursor = \"default\";\n                setTimeout(() => {\n                    capture.innerHTML = \"Redownload\";\n                    capture.generating = false;\n                }, 3000);\n            }\n        },\n        wrapper: function (style, text, background) {\n            if (background) return '<div class=\"statistics middle wrap ' + style + '\"><div class=\"anim\">' + text + '</div><div class=\"capture\"><small>Capture</small></div></div>';\n            else return '<div class=\"statistics middle wrap ' + style + '\"><div class=\"anim\" style=\"background-images:url(' + background + ')\">' + text + '</div><div class=\"capture\"><small>Download</small></div></div>';\n        },\n        draw: function (style, number, text, background) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"big\">' + number + '</span>\\\n\t\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'), background);\n            }\n        },\n        drawDiv: function (style, text) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '<div class=\"box\">' + text + '</div>'));\n        },\n        drawGraph: function (style, number, text) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawgraph movetitle\", '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"graph\"><i data-number=\"' + number + '\"></i></span>\\\n\t\t\t\t\t\t<span class=\"info\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'));\n            }\n        },\n        drawImage: function (style, image, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawimage\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span class=\"avatar\"><img src=\"' + image + '\" /></span>\\\n\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawHTML: function (style, title, html) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawhtml\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<div class=\"htmlcontent\">' + html + '</div>\\\n\t\t\t\t\t<div class=\"title\">' + title + '</div>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawLink: function (style, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawlink\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span>' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawPost: function (style, id, title, text, badge) {\n            var url = \"\";\n            if (id) url = 'https://plurk.com/p/' + id.toString(36);\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawpost\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<a href=\"' + url + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<p class=\"post\">' + text + '</p>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawUserList: async function (style, id, title, list) {\n            var html = \"\";\n            var max = list.length >= 5 ? 5 : list.length;\n            var length = reduceMotionFilter(1);\n\n            this.drawHTML(style + \" drawuserlist movetitle \" + id, title, \"<span class='info'>Downloading user data</span>\");\n            for (var index = 0; index < max; index++) {\n                var value = list[index];\n                if (value) {\n                    var friends = this.parent.friends;\n                    var friend = await friends.find(value.id);\n                    if (friend) {\n                        var plurker = new plurkerElement(value.id, friend, \"\", plurker => {\n                            plurker.avatar = new span('avatar', '<img src=\"' + friends.getAvatar(plurker.user.id) + '\" />');\n                            plurker.name = new span('name', plurker.user.display_name);\n                            plurker.counts = new span('count', value.count);\n                            plurker.el.appendChild(plurker.avatar.el);\n                            plurker.el.appendChild(plurker.name.el);\n                            plurker.el.appendChild(plurker.counts.el);\n                            plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.user.nick_name);\n                        });\n                        plurker.create();\n                        html += plurker.el.outerHTML;\n                    } else {\n                        max++;\n                    }\n                }\n            }\n            this.el.querySelector(\".\" + id + \" .htmlcontent\").innerHTML = html;\n\n            // Stagger animation\n            if (id == 'mostinteraction' || id == 'mvp') {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        scale: .3,\n                        opacity: 0\n                    }, {\n                        scale: 1,\n                        opacity: 1,\n                        ease: \"elastic.out(1.2, 0.5)\",\n                        duration: length * 3 / 4,\n                        stagger: {\n                            amount: length / 3,\n                            from: \"end\"\n                        }\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"50% 100%\",\n                        end: \"50% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            } else {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        y: 50,\n                        opacity: 0\n                    }, {\n                        y: 0,\n                        opacity: 1,\n                        duration: length,\n                        ease: \"power3.out\",\n                        stagger: length / 3\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"0% 100%\",\n                        end: \"0% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            }\n        },\n        attach: function (charttitle, node, max) {\n            var that = this;\n            var id = node.id;\n            var chart;\n            var title;\n            var text;\n            var anim;\n            var wrapper;\n            var capture;\n\n            var opacity = 0;\n            var position = max;\n            var zIndex = 0;\n            var hidden = true;\n\n            if (node.position <= max) {\n                hidden = false;\n                zIndex = position = (node.position - 1);\n                opacity = 1;\n            }\n\n            // Create the box\n            if (!that.next.querySelector(\".\" + id)) {\n                chart = document.createElement('div');\n                chart.setAttribute('class', 'chart');\n\n                title = document.createElement('div');\n                title.setAttribute('class', 'title');\n                title.innerHTML = charttitle;\n\n                text = document.createElement('div');\n                text.setAttribute('class', 'text');\n                text.appendChild(chart);\n                text.appendChild(title);\n\n                anim = document.createElement('div');\n                anim.setAttribute('class', 'anim');\n                anim.appendChild(text);\n\n                text = document.createElement('small');\n                text.innerHTML = \"Download\";\n                capture = document.createElement('div');\n                capture.setAttribute('class', 'capture');\n                capture.appendChild(text);\n\n                wrapper = document.createElement('div');\n                wrapper.setAttribute('class', 'statistics middle wrap attach ' + id);\n                wrapper.appendChild(anim);\n                wrapper.appendChild(capture);\n\n                that.el.insertAdjacentElement(\"beforeend\", wrapper);\n            }\n\n            // Add  element\n            if (!hidden && !node.attached) {\n                var maxTop = max / (max - 1) * 100;\n\n                node.insertTo(that.el.querySelector(\".\" + id + ' .chart'));\n\n                gsap.set(node.el, {\n                    top: maxTop + \"%\",\n                    opacity: 0,\n                    zIndex: 0,\n                });\n            }\n            // Update position\n            if (!hidden || !node.hidden) {\n                var currentTop = position / (max - 1) * 100;\n                var length = reduceMotionFilter(1);\n\n                gsap.killTweensOf(node.el);\n                gsap.to(node.el, {\n                    top: currentTop + \"%\",\n                    opacity: opacity,\n                    zIndex: zIndex,\n                    duration: length / 2,\n                    ease: \"power3.out\",\n                    onComplete: function () {\n                        if (hidden) {\n                            node.destroy();\n                        }\n                    }\n                });\n                node.hidden = hidden;\n            }\n\n            node.update();\n        },\n        drawAll: async function (plurks) {\n            var response_percentage = Math.round((this.plurks_count - this.noresponse_count) / this.plurks_count * 100);\n\n            this.parent.most.responses.draw(plurks);\n            this.drawGraph('center graph percentage', response_percentage, 'Around <i>' + response_percentage + '%</i> of my plurks got 💬 responses ' + ((response_percentage <= 50) ? '😢' : '🤩'));\n\n            this.draw('spansmall recievereplurk', this.replurker_count, 'I received <i>📢 ' + plural(this.replurker_count, 'replurk') + '</i>');\n            this.parent.most.replurk.draw(plurks);\n\n            this.parent.most.favorite.draw(plurks);\n            this.draw('spansmall recievelove', this.favourite_count, 'I recieved <i>❤️ ' + plural(this.favourite_count, 'love') + '</i>');\n\n            this.draw('spansmall privateplurk', this.private_count, 'I posted <i>💋 ' + plural(this.private_count, 'private plurk') + '</i>');\n            this.draw('spansmall whisper', this.whispers_count, 'I posted <i>🤫 ' + plural(this.whispers_count, 'whisper') + '</i>');\n            this.draw('spansmall porn', this.porn_count, 'I posted <i>🤤 ' + plural(this.porn_count, 'adult plurk') + '</i>');\n\n            this.draw('span2 responsecount', this.plurks_count + \" &rarr; \" + this.response_count, 'I received <i>💬 ' + plural(this.response_count, 'response') + '</i> from <i>' + plural(this.plurks_count, 'plurk') + '</i>');\n            this.draw('spansmall center coins', this.coins_count, 'I recieved <i>🪙 ' + plural(this.coins_count, 'coin') + '</i>');\n\n            if (this.favorite_list.length > 0) this.drawUserList(\"avatar\", \"loved\", \"These Plurkers <i>❤️ Loved</i> My Posts\", this.favorite_list.sort(this.parent.most.sort));\n            if (this.replurker_list.length > 0) this.drawUserList(\"avatar\", \"replurked\", \"These Plurkers likes to <i>📢 Replurked</i> My Posts\", this.replurker_list.sort(this.parent.most.sort));\n        }\n    };\n\n    // Most statistics object renderer\n    most = {\n        parent: this,\n        sort: function (a, b) {\n            return b.count - a.count;\n        },\n        // Find and count all based on regex\n        findregex: function (regex, replace, content, storage) {\n            var result = content.match(regex);\n\n            for (var index in result) {\n                var value = replace(result[index]);\n                var idx = storage.findIndex(el => el.value == value);\n\n                if (idx < 0) {\n                    storage.push({\n                        id: value,\n                        value: value,\n                        count: 1\n                    });\n                } else {\n                    storage[idx].count++;\n                }\n            }\n\n            return result;\n        },\n        init: function () {\n            this.responders.data = [];\n            this.mentions.data = [];\n            this.mentions.dataAll = [];\n            this.myemoticons.data = [];\n            this.hashtags.data = [];\n            this.links.links = [];\n            this.links.pics = [];\n            this.types.words = 0;\n            this.types.chars = 0;\n        },\n        countAll: async function (data) {\n            // Find and count all my emoticons from my post\n            if (data.user_id == this.parent.me.id) this.myemoticons.count(data.content);\n            // Find and count all mentions from my post\n            await this.mentions.count(data.content_raw);\n            // Find and count all hashtags from my post\n            if (data.user_id == this.parent.me.id) this.hashtags.count(data.content);\n            // Find and count all links and pictures post from my post\n            if (data.user_id == this.parent.me.id) this.links.count(data.content, data.plurk_id, data.response_count, data.replurkers_count, data.favorite_count);\n            // Find and count characther and words from my post\n            if (data.user_id == this.parent.me.id) this.types.count(data.content_raw);\n        },\n        responders: {\n            data: [],\n            parent: this,\n            count: async function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.user_id == response.user_id;\n                });\n\n                if (index < 0) {\n                    var friends = this.parent.friends;\n                    var user = await friends.find(response.user_id);\n                    this.data.push(new plurkerElement('mostresponders', user, friends.getAvatar(user.id)));\n                } else {\n                    this.data[index].count++;\n                }\n                this.data.sort(this.parent.most.sort);\n\n                // Update top 5\n                var index = 1;\n                for (var i = 0; i < this.data.length; i++) {\n                    this.data[i].position = this.data.length;\n                    if (this.data[i].user_id != this.parent.me.id && this.data[i].user_id != 99999) {\n                        this.data[i].position = index++;\n                        this.parent.statistics.attach('<i>Top 💬 Responders</i> <strong>of My Timeline</strong>', this.data[i], 5);\n                    }\n                }\n            },\n            draw: function () {\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatar(this.data[index].user_id), 'https://plurk.com/' + this.data[index].user.nick_name, '<i>Most Responder</i>', this.data[index].user.display_name, this.data[index].count);\n                }\n            }\n        },\n        mentions: {\n            data: [],\n            dataAll: [],\n            parent: this,\n            count: async function (content) {\n                var result = this.parent.most.findregex(/\\@(\\w{1,30})[\\ |\\:]/g, value => value.replace(/\\@|\\ |\\:/g, ''), content, this.data);\n                var max = 5;\n                var index = 1;\n\n                if (result) {\n                    // Update top 5\n                    this.data.sort(this.parent.most.sort);\n                    for (var idx = 0; idx < this.data.length; idx++) {\n                        this.data[idx].position = this.data.length;\n\n                        if (index <= max) {\n                            var user = await this.parent.friends.findByUsername(this.data[idx].value);\n\n                            if (this.data[idx].el == undefined) {\n                                this.data[idx] = new plurkerElement('mostmentionedbyme', user, \"\", plurker => {\n                                    plurker.avatar = new span('avatar', '<img src=\"' + this.parent.friends.getAvatar(plurker.user_id) + '\" />');\n                                    plurker.name = new span('name', \"@\" + plurker.nick_name);\n                                    plurker.counts = new span('count', plurker.count);\n                                    plurker.el.appendChild(plurker.avatar.el);\n                                    plurker.el.appendChild(plurker.name.el);\n                                    plurker.el.appendChild(plurker.counts.el);\n                                    plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.nick_name);\n                                });\n                            }\n\n                            if (user.id != this.parent.me.id && user.id != 99999) {\n                                this.data[idx].position = index++;\n                                this.parent.statistics.attach('<i>Most 🙋 Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                            }\n                        }\n\n                        if (this.data[idx].el) this.parent.statistics.attach('<i>Most 🙋 Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                    }\n                }\n            },\n            draw: function () {\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatarByUsername(this.data[index].value), 'https://plurk.com/' + this.data[index].value, '<i>Most Mentioned</i> by me', \"@\" + this.data[index].value, this.data[index].count);\n                }\n            }\n        },\n        myemoticons: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/emoticon_my\\\" src=\\\"(.*?)\\\"/g, function (value) {\n                    return value.replace(/emoticon_my\\\" src=\\\"|\\\"/gi, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 7;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><img src=\"' + this.data[i].value + '\" /> <span class=\"count\">' + this.data[i].count + '</span></div>';\n                if (html != \"\") this.parent.statistics.drawHTML(\"smallspan grid emoticons\", 'Most Used <i>My Emoticons</i>', html);\n            }\n        },\n        hashtags: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/hashtag\\\"\\>(.*?)\\</g, function (value) {\n                    return value.replace(/hashtag\\\"\\>\\#|\\.\\<|\\</g, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 5;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><a href=\"https://plurk.com/search?q=' + this.data[i].value + '\" target=\"_BLANK\" /><span class=\"count\">' + this.data[i].count + '</span> #' + this.data[i].value + '</a></div>';\n                if (html != \"\") {\n                    html = \"<strong>#</strong>\" + html;\n                    this.parent.statistics.drawHTML(\"hashtags\", 'Most Used <i>Hashtags</i>', html);\n                }\n            }\n        },\n        links: {\n            data: [],\n            links: [],\n            pics: [],\n            parent: this,\n            count: function (content, id, response, replurk, loved) {\n                var result = content.match(/href\\=\\\"(.*?)\\\"\\ class=\\\"(.*?)\\\"\\ rel/g);\n                var count = 0;\n                var pics = [];\n                var links = [];\n\n                if (result) for (var data of result) {\n                    if (!this.data[id]) {\n                        count = response + (replurk * 250) + (loved * 50);\n                    }\n\n                    if (data.includes(\"pictureservices\")) {\n                        this.pics.push(data);\n                        if (count > 0) {\n                            var pic = data.split('\\\"')\n                            pics.push({\n                                url: pic[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n                    }\n                    else {\n                        this.links.push(data);\n                        if (count > 0) {\n                            var link = data.split('\\\"')\n                            links.push({\n                                url: link[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n\n                    }\n                }\n\n                if (count) this.data.push({\n                    id: id,\n                    pics: pics,\n                    links: links,\n                    count: count,\n                    content: content\n                });\n            },\n            drawLinks: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].links.length > 0) {\n                        var link = this.data[index].links[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].id.toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"post\"><div class=\"info\">' + this.data[index].content + '</div><div class=\"meta\"><span class=\"response\">💬 ' + link.response + '</span><span class=\"replurk\">📢 ' + link.replurk + '</span><span class=\"loved\">❤️ ' + link.loved + '</span>' + url + '</div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n                if (this.links.length > 0) this.parent.statistics.drawDiv('spansmall sharedlinks', \"<div class='title'>I shared <i>🔗 \" + plural(this.links.length, 'link') + '</i> and this is the most popular one</div>' + result);\n            },\n            drawPics: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].pics.length > 0) {\n                        var pics = this.data[index].pics[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"box\"><div class=\"image\" style=\"background-image: url(' + api.url + \"?img=\" + pics.url + ')\"></div><div class=\"post\">' + this.data[index].content + '<div class=\"meta\"><span class=\"response\">💬 ' + pics.response + '</span><span class=\"replurk\">📢 ' + pics.replurk + '</span><span class=\"loved\">❤️ ' + pics.loved + '</span>' + url + '</div></div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n\n                if (this.pics.length > 0) this.parent.statistics.draw('spansmall sharedpictures', this.pics.length, 'I shared <i>🖼 ' + plural(this.pics.length, 'image') + '</i>');\n                if (result != \"\") this.parent.statistics.drawHTML('span2 previewpics', '<i>🖼 Most Popular Image</i>', result);\n            }\n        },\n        types: {\n            words: 0,\n            chars: 0,\n            parent: this,\n            count: function (content) {\n                var words = content.split(\" \");\n\n                this.chars += content.length;\n                this.words += words.length;\n            },\n            draw: function () {\n                if (this.chars > 0) this.parent.statistics.draw('span2 mediumnumber', this.chars, 'I typed more than  <i>' + pluralinwords(this.chars, 'character') + '</i>, around <i>' + pluralinwords(this.words, 'word') + '</i> this year');\n            }\n        },\n        responses: {\n            parent: this,\n            sort: function (a, b) {\n                return b.response_count - a.response_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.response_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostresponded', value.plurk_id, '<i>💬 Most Responded</i> ' + datediff(value.posted), value.content, value.response_count);\n                        return;\n                    }\n                }\n            }\n        },\n        replurk: {\n            parent: this,\n            sort: function (a, b) {\n                return b.replurkers_count - a.replurkers_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.replurkers_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostreplurked', value.plurk_id, '<i>📢 Most Replurked</i> ' + datediff(value.posted), value.content, value.replurkers_count);\n                        return;\n                    }\n                }\n            }\n        },\n        favorite: {\n            parent: this,\n            sort: function (a, b) {\n                return b.favorite_count - a.favorite_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.favorite_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostfavorited', value.plurk_id, '<i>❤️ Most Loved</i> ' + datediff(value.posted), value.content, value.favorite_count);\n                        return;\n                    }\n                }\n            }\n        },\n        interaction: {\n            data: [],\n            parent: this,\n            count: function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier++;\n                    else this.data[index].multiplier = 1;\n                    this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span2\", \"mostinteraction\", \"Plurkers who really like to <i>🗣 interact</i> with me\", result);\n                } catch {\n                    console.info(\"Error while counting most interacted plurker\");\n                }\n            }\n        },\n        mvp: {\n            data: [],\n            parent: this,\n            count: function (response, type) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (type == \"replurk\") {\n                        this.data[index].count += (response.count * 250);\n                    } else if (type == \"favorite\") {\n                        this.data[index].count += (response.count * 50);\n                    } else if (response.content_raw.length > 16) {\n                        if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier += .5;\n                        else this.data[index].multiplier = .5;\n                        this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                    }\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span3\", \"mvp\", \"My \" + this.parent.year + \" <i>👄 MVP</i>\", result);\n                } catch (error) {\n                    console.info(\"Error while counting my mvp\", error);\n                }\n            }\n        }\n    };\n\n    // Inactive plurker object\n    inactive = {\n        draw: (data, year) => {\n            this.statistics.draw('inactive', year + \" &#8617;\", 'I\\'ve been inactive since ' + year + ' <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n            this.statistics.drawPost('postcontent span2 inactivemore', data.plurk_id, '<i>My last Plurk</i> ' + datediff(data.posted), data.content, data.response_count);\n        },\n        empty: () => {\n            this.statistics.draw('inactive', '-', 'I didn\\'t post anything at this year <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n        }\n    }\n\n    // Loading object\n    loading = {\n        count: 0,\n        prev_count: 0,\n        counts: -1,\n        clean: false,\n        next: document.createElement('div'),\n        parent: this,\n        isComplete: function () { return this.count == this.counts },\n        init: function (next) {\n            this.count = 0;\n            this.prev_count = 0;\n            this.counts = -1;\n            this.clean = false;\n            this.next = next;\n        },\n        draw: function (item) {\n            return new Promise(resolve => {\n                var length = reduceMotionFilter(1);\n                this.prev_count = item;\n\n                if (!this.next.querySelector(\".statistics.loading\")) {\n                    this.parent.statistics.draw(\"loading\", item + \"%\", \"<i class='month'>Data from \" + this.year + \"</i>. Loading. <small>As long as you didn't close this browser tab, You can resume later by refreshing this page.</small>\");\n                }\n\n                // Animate loading\n                var load = { progress: this.prev_count };\n                gsap.to(load, {\n                    progress: Math.round(item),\n                    snap: \"progress\",\n                    ease: \"linear\",\n                    duration: length / 4,\n                    onUpdate: () => {\n                        var el = this.next.querySelector(\".loading .big\");\n                        if (el) el.innerHTML = load.progress + \"%\";\n                    },\n                    onComplete: async () => {\n                        if (this.clean) await this.done();\n                        resolve();\n                    }\n                });\n            });\n        },\n        loop: async function (length) {\n            this.clean = true;\n            this.counts = length;\n            await this.draw(0);\n        },\n        update: async function (month, value) {\n            var el = this.next.querySelector(\".loading .month\");\n            if (month && el) el.innerHTML = month;\n\n            if (this.counts >= 0) {\n                this.count = value ? value : this.count + 1;\n                await this.draw(Math.round(100 * (this.count / this.counts)));\n            }\n        },\n        fakeupdate: async function () {\n            if (this.counts >= 0) {\n                this.count++;\n                if (this.count >= (this.counts - 10)) this.count = (this.counts - 10);\n                await this.draw(100 * (this.count / this.counts));\n            }\n        },\n        forcedone: async function () {\n            this.count = this.counts;\n            await this.draw(100);\n        },\n        done: function () {\n            return new Promise(resolve => {\n                var length = reduceMotionFilter(1);\n\n                if (this.isComplete()) {\n                    var el = this.next.querySelector(\".statistics.loading\");\n\n                    this.clean = false;\n                    gsap.to(el, {\n                        opacity: 0,\n                        width: 0,\n                        height: 0,\n                        padding: 0,\n                        margin: 0,\n                        overflow: \"hidden\",\n                        duration: length / 2,\n                        ease: \"power3.out\",\n                        onComplete: () => {\n                            el.remove();\n                            scroll.refresh();\n                            resolve();\n                        }\n                    });\n                } else resolve();\n            });\n        }\n    }\n\n    // Scroll Animation\n    scrollAnimate = {\n        credits: (tl) => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation, #credits .made\"), {\n                y: window.innerHeight * 1 / 8\n            }, {\n                y: 0,\n                ease: \"linear\",\n                duration: length * 2,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                stagger: {\n                    from: 'end',\n                    amount: length / 10\n                },\n                duration: length,\n                ease: \"power3.in\"\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .made\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length,\n                ease: \"power3.in\"\n            }, length * 3 / 10);\n\n            return tl;\n        },\n        statistics: () => {\n            var next = this.next;\n\n            // Scroll animate statistics\n            scroll.push(tl => this.scrollAnimate.credits(tl), tl => ScrollTrigger.create({\n                trigger: next.querySelectorAll(\"#statistics\"),\n                start: \"100%-=\" + window.innerHeight + \" 0\",\n                end: \"100% 0\",\n                animation: tl,\n                scrub: .5\n            }));\n        },\n        permisions: () => {\n            var next = this.next;\n\n            // Scroll animation permission section\n            scroll.push((tl) => {\n                tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n                    y: 0\n                }, {\n                    y: window.innerHeight * -3 / 4,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sup\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * -1 / 10,\n                    rotation: -10,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sub\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * 1 / 10,\n                    rotation: 10,\n                    ease: \"linear\"\n                }, 0);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n            scroll.push((tl) => {\n                tl = this.scrollAnimate.credits(tl);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n        },\n        menu: () => {\n            // Scroll animation menu and logout\n            scroll.push(tl => tl, tl => {\n                return ScrollTrigger.create({\n                    trigger: 'main',\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    onUpdate: update => {\n                        var el1 = '.logo, .size, .lamp, .switch';\n                        var el2 = el1 + \", .footer > *\";\n\n                        if (update.direction > 0) {\n                            gsap.killTweensOf(_qAll(el2));\n                            gsap.to(_qAll(el1), { y: -100, opacity: 0 });\n                            gsap.to(_qAll('.footer > *'), { y: 100, opacity: 0 });\n                        } else {\n                            gsap.to(_qAll(el2), { y: 0, opacity: 1 });\n                        }\n                    }\n                });\n            });\n        },\n        browserBar: (login = true) => {\n            if (login) {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#hello',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#statistics',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnter: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"white\");\n                        }\n                    });\n                });\n            } else {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#permission',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n            }\n        }\n    }\n\n    constructor(year) {\n        // Which year?\n        this.year = year;\n        this.startDate = this.year + '-10-29T09:00:00';\n        this.endDate = new Date((this.year - 1) + '-10-29T09:00:00');\n        this.days = 60 * 60 * 24 * 1000;\n        this.fulldays = 365;\n    }\n\n    // Browser color\n    getSetStateColor(state) {\n        if (typeof (state) == \"object\" && state.length >= 1) {\n            if (state.length == 1) {\n                darkmode.browserColorDark = state[0];\n                darkmode.browserColorLight = state[0];\n            } else {\n                darkmode.browserColorDark = state[1];\n                darkmode.browserColorLight = state[0];\n            }\n        } else if (state == \"green\") {\n            darkmode.browserColorDark = \"#0d4f03\";\n            darkmode.browserColorLight = \"#60e670\";\n        } else if (state == \"yellow\") {\n            darkmode.browserColorDark = \"#705f02\";\n            darkmode.browserColorLight = \"#FFD700\";\n        } else {\n            darkmode.browserColorDark = \"#000000\";\n            darkmode.browserColorLight = \"#FFFFFF\";\n        }\n\n        return [darkmode.browserColorLight, darkmode.browserColorDark];\n    }\n    browserColor(state, duration, ease) {\n        this.getSetStateColor(state);\n        darkmode.setDarkMode(duration, ease);\n    }\n\n    // Show/hide Animations\n    // Login Pages\n    showLoginPage(tl) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n\n        this.browserColor(\"green\", 1);\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            display: \"\",\n            opacity: 0,\n            top: 0\n        }, {\n            opacity: 1,\n            duration: length,\n            ease: \"power3.in\"\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: length / 5,\n            duration: length,\n            ease: \"power3.out\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    top: \"\"\n                });\n            }\n        }, \">-\" + (length / 2));\n\n        return tl;\n    }\n    hideLoginPage(tl) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n\n        tl.set(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            top: 0,\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *, #permission form\"), {\n            y: 0,\n            opacity: 1,\n        }, {\n            y: 200,\n            opacity: 0,\n            stagger: {\n                from: \"end\",\n                amount: length / 5\n            },\n            duration: length,\n            ease: \"power3.in\",\n            onComplete: () => {\n                this.browserColor(\"yellow\");\n            }\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            opacity: 1\n        }, {\n            opacity: 0,\n            duration: length,\n            ease: \"power3.in\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    display: \"none\",\n                    top: \"\"\n                }, \">\");\n            }\n        }, \">-\" + (length / 4));\n\n        return tl;\n    }\n    // Statistic Pages\n    showStatisticPages() {\n        return new Promise(resolve => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n            var tl = gsap.timeline();\n\n            tl.fromTo(next.querySelectorAll(\"#hello\"), {\n                display: \"\",\n                opacity: 0\n            }, {\n                opacity: 1,\n                ease: \"power3.in\",\n                duration: length,\n                onStart: () => this.browserColor(\"green\", .5)\n            }, length / 4);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext > *\"), {\n                display: \"\",\n                opacity: 0,\n                y: 200\n            }, {\n                opacity: 1,\n                y: 0,\n                duration: length,\n                stagger: length / 5,\n                ease: \"power3.out\"\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\" #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n                display: \"\",\n                opacity: 0,\n                y: 200\n            }, {\n                opacity: 1,\n                y: 0,\n                duration: length,\n                stagger: length / 5,\n                ease: \"power3.out\"\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n                display: \"\",\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length / 2,\n                onComplete: () => resolve()\n            }, length / 2);\n        });\n    }\n    hideStatisticPages() {\n        return new Promise(async resolve => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n            var tl = gsap.timeline();\n\n            await animate.top(next);\n\n            tl.fromTo(next.querySelectorAll(\".footer > *, #hello .bgtext > *, #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n                opacity: 1,\n                y: 0\n            }, {\n                opacity: 0,\n                y: 200,\n                duration: length,\n                stagger: {\n                    from: \"end\",\n                    amount: length / 5\n                },\n                ease: \"power3.in\"\n            }, length / 5);\n            tl.set(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n                opacity: 0\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\"#hello\"), {\n                opacity: 1\n            }, {\n                opacity: 0,\n                duration: length,\n                ease: \"power3.in\",\n                onComplete: () => {\n                    gsap.set(next.querySelectorAll(\".grant\"), { display: \"none\" });\n                    resolve();\n                }\n            }, length / 2);\n        });\n    }\n\n    // Login messages\n    message(message, quick) {\n        var next = this.next;\n\n        var loginmessage = next.querySelector(\"#login-message\");\n\n        if (quick) {\n            loginmessage.innerHTML = message;\n        } else {\n            gsap.to(loginmessage, {\n                opacity: 0,\n                onComplete: function () {\n                    loginmessage.innerHTML = message;\n                    gsap.to(loginmessage, {\n                        opacity: 1\n                    });\n                }\n            });\n        }\n    }\n\n    // Logout\n    async requestLogout() {\n        var tl = gsap.timeline();\n\n        api.abort();\n\n        // Hide statistic pages\n        await this.hideStatisticPages(tl);\n\n        // Logout\n        await api.call(\"?fetch=logout\");\n        this.statistics.clear();\n        api.clear();\n        this.login();\n\n        scroll.refresh();\n    }\n\n    // Request token\n    async requestToken(text) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n        var tokenlink = next.querySelector(\"#tokenurl\");\n        tokenlink.textContent = \"Connecting Plurk...\";\n\n        var tl = gsap.timeline();\n        tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            duration: length,\n            ease: \"power3.out\"\n        }, length);\n        tl.fromTo(next.querySelectorAll(\"#permission h1, #permission li\"), {\n            display: \"\",\n            y: 50,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: length / 10,\n            duration: length,\n            ease: \"power3.out\"\n        }, length);\n\n        api.call(\"?request=token\").then(data => {\n            if (text) {\n                message(text);\n            } else {\n                tokenlink.textContent = \"Grant Access\";\n                tokenlink.setAttribute(\"href\", api.url + \"?redirect=\" + data.message.url);\n            }\n        }, () => {\n            message(\"Error when requesting verification from Plurk, please reload your browser again.\");\n        });\n\n        if (!text) next.querySelector(\"#permission form\").style.display = \"none\";\n    }\n\n    // Display current Plurker data\n    async displayPlurkerData() {\n        var plurker = this.me;\n        var next = this.next;\n        var extra = \"\";\n        var length = reduceMotionFilter(1);\n\n        // plurks_count\n        var days = (plurker.anniversary.years * 365) + plurker.anniversary.days;\n        var responses = Math.round(plurker.response_count / days);\n\n        next.querySelector(\"#hello .thumbs\").innerHTML = \"<img src='\" + plurker.avatar_big + \"' />\";\n        if (this.year == 2021) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>If \" + this.year + \" have been a rough year you, hopefully RePlurk will cheer you by bringing some good memories</p>\";\n        else if (this.year == 2022) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>It's 2020 v2, and this is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n        else next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>This is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\n        // Draw statistic\n        this.statistics.title('All Time', 'alltime');\n        if (plurker.anniversary.years && plurker.anniversary.days) {\n            this.statistics.draw('spansmall center posted', Math.round(plurker.plurks_count / days), \"I posted around <i>💬 \" + plural(Math.round(plurker.plurks_count / days), \"plurk\") + \" per day</i>\");\n\n            // Responses\n            var oneday = 16;\n            if (responses <= oneday) extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday / responses), \"hour\") + '</i>';\n            else extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday * 60 / responses), \"minute\") + '</i>';\n            this.statistics.draw('span2 center responded', responses, \"I responded around <i>💬 \" + plural(responses, \"time\") + \"</i> per day. \" + extra + \" when I'm not asleep\");\n\n            var join = new Date(plurker.join_date)\n            this.statistics.draw('spansmall center anniversary', \"<strong><i>\" + monthNames[join.getMonth()] + \"</i> <i>\" + join.getFullYear() + \"</i></strong> <em>\" + join.getDate() + \"</em>\", \"I joined Plurk <i>\" + plural(plurker.anniversary.years, \"year\") + \"</i> and <i>\" + plural(plurker.anniversary.days, \"day\") + \"</i> ago\");\n            this.statistics.draw('spansmall center badges', plurker.badges.length, \"I have <i>🛡 \" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        } else {\n            this.statistics.draw('', '-', \"There is no data in my timeline\");\n            this.statistics.draw('', plurker.badges.length, \"But at least I have <i>\" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        }\n\n        // Scroll animation hello section\n        scroll.push(tl => {\n            tl.fromTo(next.querySelectorAll(\"#hello .text, #hello .thumbs\"), {\n                y: 0\n            }, {\n                y: window.innerHeight * -3 / 4,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sup\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * -1 / 10,\n                rotation: -10,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sub\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * 1 / 10,\n                rotation: 10,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .arrow-big\"), {\n                y: 0,\n                opacity: 1\n            }, {\n                y: window.innerHeight * 1 / 4,\n                opacity: 0,\n                ease: \"linear\",\n                duration: length / 4,\n            }, 0);\n            return tl;\n        }, tl => ScrollTrigger.create({\n            trigger: next.querySelectorAll(\"#hello\"),\n            start: \"0 0\",\n            end: \"100% 0\",\n            animation: tl,\n            scrub: true\n        }));\n        scroll.refresh();\n    }\n    // Display statistics\n    async displayStatistics() {\n        this.statistics.title('This Year', 'thisyear');\n        this.statistics.draw(\"loading thisyearloading\", \"\", \"<i class='month'>Data from December</i>1 of 2. Loading \" + this.year + \" timeline. It can take up to 1 minute.\");\n\n        this.loading.init(this.next);\n        this.loading.loop(this.fulldays);\n\n        // Load loop timeline\n        var getTimeline = async (offset) => {\n            offset = (!offset) ? \"\" : \"&offset=\" + offset;\n\n            var data = await api.call(\"?fetch=plurk&filter=my\" + offset, 1);\n            if (data.success) {\n                this.friends.add(data.message.plurk_users);\n                this.plurks = this.plurks.concat(data.message.plurks);\n\n                if (data.message.plurks.length > 0) {\n                    var lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\n                    if (lastposted >= this.endDate) {\n                        this.loading.update(\"Data from \" + monthNames[lastposted.getMonth()] + \" \" + lastposted.getFullYear(), this.fulldays - Math.floor((lastposted - this.endDate) / this.days));\n\n                        // Load next plurks\n                        await getTimeline(data.message.offset);\n                    } else {\n                        while (lastposted < this.endDate && this.plurks.length > 1) {\n                            this.plurks.pop();\n                            lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n                        }\n                        await this.loading.forcedone();\n                    }\n                } else {\n                    await this.loading.forcedone();\n                }\n            } else {\n                this.requestLogout();\n            }\n        }\n        await getTimeline(this.startDate);\n\n        // When loading done\n        var largest_poll_result = 0;\n        if (this.plurks.length > 1) {\n            // Count user statistics\n            this.statistics.plurks_count = 0;\n            this.plurks.forEach(plurk => {\n                // Calculate the statistics\n                if (plurk.responded) this.statistics.responded_count++;\n                if (plurk.owner_id == this.me.id) {\n                    this.statistics.plurks_count++;\n                    this.statistics.replurker_count += plurk.replurkers.length;\n                    this.statistics.replurker_list = this.statistics.listCount(this.statistics.replurker_list, plurk.replurkers);\n                    this.statistics.favourite_count += plurk.favorers.length;\n                    this.statistics.favorite_list = this.statistics.listCount(this.statistics.favorite_list, plurk.favorers);\n                    if (plurk.anonymous) this.statistics.whispers_count++;\n                    if (plurk.coins) this.statistics.coins_count += plurk.coins;\n                    if (plurk.porn) this.statistics.porn_count++;\n                    if (!plurk.response_count) this.statistics.noresponse_count++;\n                    if (plurk.plurk_type == 3) this.statistics.private_count++;\n                    this.statistics.response_count += plurk.response_count;\n\n                    if (plurk.content_raw.includes(\"instagram.com\")) this.statistics.instagrammer_count++;\n                    if (plurk.content_raw.includes(\"facebook.com\")) this.statistics.facebooker_count++;\n                    else if (plurk.content_raw.includes(\"fb.watch\")) this.statistics.facebooker_count++;\n                    if (plurk.content_raw.includes(\"twitter.com\")) this.statistics.twitterer_count++;\n                    if (plurk.content_raw.includes(\"reddit.com\")) this.statistics.redditor_count++;\n                    if (plurk.content_raw.includes(\"tiktok.com\")) this.statistics.tiktoker_count++;\n                    if (plurk.content_raw.includes(\"imgur.com\")) this.statistics.imgurer_count++;\n                    if (plurk.content_raw.includes(\"youtube.com\")) this.statistics.youtuber_count++;\n\n                    // Calculate polls\n                    if (plurk.with_poll) {\n                        var response_count = plurk.poll.response.response_count;\n                        this.statistics.poll_count++;\n                        this.statistics.poll_responder_count += response_count;\n\n                        if (largest_poll_result < response_count) {\n                            largest_poll_result = response_count;\n                            this.statistics.poll_popular_plurk = plurk;\n                        }\n                    }\n                } else if (plurk.responded) this.statistics.responded_other_count++;\n            });\n\n            // Sort based on date\n            this.plurks.sort((a, b) => new Date(b.posted) - new Date(a.posted));\n\n            // Draw statistics\n            try {\n                await this.statistics.drawAll(this.plurks);\n            } catch (error) {\n                console.info(\"Error while counting statistics\", error);\n            }\n\n            // Display extended statistics\n            this.displayExtendedStatistics();\n        } else {\n            if (this.plurks[0]) {\n                var date = new Date(plurk[0].posted);\n                inactive.draw(plurk[0], date.getFullYear());\n            }\n            else inactive.empty();\n        }\n    }\n    // Display extended statistics\n    async displayExtendedStatistics() {\n        // Deeper user statistics\n        this.statistics.title('Dig Deeper', 'digdeeper');\n        this.statistics.draw(\"loading digdeeperloading\", \"\", \"<i class='month'>Data from \" + this.year + \"</i> 2 of 2. Loading all responses. <small>If the loading seems to stop, refresh your browser tab to resume your download. Closing your browser tab will clear all downloaded data.</small>\");\n\n        // Load each post responses and calculate statistics\n        this.loading.init(this.next);\n        this.loading.loop(this.plurks.length);\n\n        // Get the responses for each plurks in parallel\n        this.plurks.sort((a, b) => new Date(a.posted) < new Date(b.posted));\n        for (var plurk of this.plurks) {\n            var date = new Date(plurk.posted);\n            this.loading.update(\"Data from \" + monthNames[date.getMonth()] + \" \" + date.getFullYear());\n\n            // Count all\n            await this.most.countAll(plurk);\n\n            // Count responses\n            if (plurk.response_count > 0 && (plurk.responded || plurk.owner_id == this.me.id)) {\n                var result = await api.call(\"?fetch=response&plurk_ids=\" + plurk.plurk_id);\n                if (result.success) for (var message of result.message) {\n                    // Add friends from response lists\n                    this.friends.add(message.friends);\n\n                    // Count the rest of statistics\n                    for (var response of message.responses) {\n                        // Find and count all responders\n                        await this.most.responders.count(response);\n                        this.most.interaction.count(response);\n                        this.most.mvp.count(response, \"response\");\n                        // Count all\n                        await this.most.countAll(response);\n                    }\n                } else {\n                    this.requestLogout();\n                    break;\n                }\n            }\n        }\n\n        // Display How Many Links\n        this.most.links.drawLinks();\n        // Display How Many Pictures\n        this.most.links.drawPics();\n\n        // Draw Results\n        // Display Most Responder\n        // this.most.responders.draw();\n\n        // Display Most Interaction\n        this.most.interaction.draw();\n\n        // Display Most Mentioned by me\n        // this.most.mentions.draw();\n\n        // Display How Many Words-Characters\n        this.most.types.draw();\n\n        // Display Most hashtags by me\n        this.most.hashtags.draw();\n\n        // Display Most My Emoticons\n        this.most.myemoticons.draw();\n\n        // Display MVP\n        this.statistics.replurker_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"replurk\");\n        });\n        this.statistics.favorite_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"favorite\");\n        });\n        this.most.mvp.draw();\n\n        // Replurk Badges\n        var gender = \"👑 Leader\";\n        if (this.me.gender == 1) gender = \"👑 King\";\n        if (this.me.gender == 0) gender = \"👑 Queen\";\n\n        var tiktok = \"🪩\";\n        if (this.me.gender == 1) tiktok = \"🕺\";\n        if (this.me.gender == 0) tiktok = \"💃\";\n\n        var facebook = \"🧓\";\n        if (this.me.gender == 1) facebook = \"👴\";\n        if (this.me.gender == 0) facebook = \"👵\";\n\n        var plurker = \"🙇\";\n        if (this.me.gender == 1) plurker = \"🙇‍♂️\";\n        if (this.me.gender == 0) plurker = \"🙇‍♀️\";\n\n        this.statistics.title('RePlurk Badges', 'replurkbadges');\n        this.statistics.title('What are RePlurk Badges consist of? They are badges based on your activities in Plurk. Currently there are 16 badges in total, for activities such as: creating lots of polls (Polling ' + gender + '), receiving lots of coins (Plurk Coins Billionaire), writing lots of posts (Novelist and Keyboard Warrior), sharing lots of pictures and links (Meme Lord & Mising Link), sharing social medias urls (there are 7 badges), posting lots of adult posts (Adult-er), getting lots of replurks (Trendsetter), and constantly posting in Plurk almost everyday (Active Plurker).', 'replurkbadges description');\n        if (this.statistics.poll_count >= 5) this.statistics.draw('spansmall center badges pollbadges', \"🗳️\", \"<strong>Polling \" + gender + \"</strong>\");\n        if (this.statistics.coins_count >= 5) this.statistics.draw('spansmall center badges coinbadges', \"🪙\", \"<strong>Plurk Coins Billionaire</strong>\");\n        if (this.most.types.words >= 50000) this.statistics.draw('spansmall center badges novelistbadges', \"📓\", \"<strong>Novelist</strong>\");\n        if (this.most.types.chars >= 1000000) this.statistics.draw('spansmall center badges keyboardbadges', \"⌨️\", \"<strong>Keyboard Warrior</strong>\");\n        if (this.most.links.pics.length >= 356) this.statistics.draw('spansmall center badges memebadges', \"🐈\", \"<strong>Meme Lord</strong>\");\n        if (this.most.links.links.length >= 356 / 2) this.statistics.draw('spansmall center badges missingbadges', \"🦧\", \"<strong>The Missing Link</strong>\");\n        if (this.statistics.instagrammer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"📷\", \"<strong>Instagrammer</strong>\");\n        if (this.statistics.facebooker_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', facebook, \"<strong>Facebooker</strong>\");\n        if (this.statistics.twitterer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"🐣\", \"<strong>The Real Chief Twit</strong>\");\n        if (this.statistics.redditor_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"🤖\", \"<strong>/r</strong>\");\n        if (this.statistics.tiktoker_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', tiktok, \"<strong>Tiktoker</strong>\");\n        if (this.statistics.imgurer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"🎆\", \"<strong>Imgur-er</strong>\");\n        if (this.statistics.youtuber_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"🎥\", \"<strong>Youtuber 😮‍💨</strong>\");\n        if (this.statistics.porn_count >= 10) this.statistics.draw('spansmall center badges adultbadges', \"😍\", \"<strong>Adult-er</strong>\");\n        if (this.statistics.replurker_count >= 50) this.statistics.draw('spansmall center badges plurkerbadges', \"🏆\", \"<strong>Trendsetter</strong>\");\n        if (this.statistics.plurks_count >= 356 * 1.5) this.statistics.draw('spansmall center badges plurkerbadges', \"🎖️\", \"<strong>Active Plurker \" + plurker + \"</strong>\");\n    }\n\n    // Check login status\n    async login(clear) {\n        var next = this.next;\n\n        this.me = { id: 0 };\n        this.friends.init();\n        this.statistics.init(next);\n        this.most.init();\n        this.plurks = [];\n\n        scroll.destroy();\n\n        window.scrollTo(0, 0);\n        this.browserColor(\"yellow\");\n\n        // Scroll animation menu and logout\n        this.scrollAnimate.menu();\n\n        // Check is server have open session\n        var tl = gsap.timeline();\n        tl.set(next.querySelector(\"#hello .arrow-big\"), {\n            opacity: 0\n        });\n\n        var data = await api.call(\"?\");\n        if (data.success) {\n            this.me = data.message;\n\n            // Initial Plurk statistics\n            await this.displayPlurkerData();\n\n            // Display the rest of the statistics\n            this.displayStatistics();\n\n            // Scroll top top\n            await animate.top(next);\n\n            // Hide login page\n            if (clear) next.querySelector(\"#permission\").style.display = \"none\";\n            else tl = this.hideLoginPage(tl);\n\n            // Show statistic pages\n            await this.showStatisticPages(tl);\n\n            // Add logout event\n            next.querySelector(\"#logout\").onclick = () => this.requestLogout();\n\n            // Scroll animate statistics\n            this.scrollAnimate.statistics();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar();\n\n            scroll.refresh();\n        } else {\n            // Hide statistic pages\n            if (clear) next.querySelectorAll(\".grant\").forEach(function (el) { el.style.display = \"none\"; });\n            // Show login page\n            this.showLoginPage(tl);\n            // Request token\n            this.requestToken();\n\n            // Scroll animation permission section\n            this.scrollAnimate.permisions();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar(false);\n\n            scroll.refresh();\n        }\n\n        // Snap\n        next.querySelectorAll(\"section.snap\").forEach(el => scroll.snap(el));\n        next.querySelectorAll(\"section.snap-bottom\").forEach(el => scroll.snap(el, \"bottom\"));\n    }\n\n    // Run the API call\n    run(el) {\n        return new Promise(resolve => {\n            var length = reduceMotionFilter(1);\n            this.next = el;\n            this.browserColor(\"yellow\");\n\n            // Run the login\n            gsap.fromTo(this.next.querySelectorAll('#credits'), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length,\n                ease: \"power3.in\",\n                onComplete: async () => {\n                    // Change color\n                    this.browserColor(\"yellow\", 0);\n\n                    // Display login\n                    await this.login(true);\n\n                    resolve();\n                }\n            });\n        });\n    }\n}\n\nexport default replurk;"],"names":["iconLink","span","constructor","classname","text","this","el","document","createElement","setAttribute","innerHTML","update","textContent","updateHTML","colors","oldcolor","randomcolors","getRandomColor","color","slice","pop","plurkerElement","id","data","avatarurl","customcreate","user","user_id","value","nick_name","attached","hidden","count","position","created","counts","create","avatar","name","display_name","appendChild","insertTo","element","insertAdjacentElement","destroy","remove","next","plurks","me","friends","unavailable","parent","init","add","new_friends","Object","assign","find","async","findIndex","result","success","temp","message","user_info","push","findByUsername","index","toLowerCase","getAvatar","has_profile_image","getAvatarByUsername","user_name","statistics","whispers_count","coins_count","porn_count","noresponse_count","private_count","replurker_count","replurker_list","favourite_count","favorite_list","response_count","responded_count","responded_other_count","responded_other_list","plurks_count","poll_count","poll_responder_count","poll_popular_plurk","redditor_count","tiktoker_count","instagrammer_count","imgurer_count","facebooker_count","twitterer_count","youtuber_count","querySelector","MutationObserver","mutationsList","forEach","mutation","addedNodes","afterDraw","observe","attributes","childList","subtree","clear","listCount","list","collection","length","title","style","loading","insertAdjacentHTML","anim","background","opacity","duration","ease","screen","tl","fromTo","children","y","window","innerHeight","trigger","start","end","animation","scrub","number","Number","load","progress","to","snap","onUpdate","toggleActions","querySelectorAll","x","height","getAttribute","capture","onclick","generating","imgs","body","cursor","img","includes","localUrl","_","Math","round","canvas","backgroundColor","logging","link","display","download","year","Date","now","href","toDataURL","click","removeChild","setTimeout","wrapper","draw","drawDiv","drawGraph","drawImage","image","badge","drawHTML","html","drawLink","drawPost","url","toString","drawUserList","max","friend","plurker","outerHTML","scale","stagger","amount","from","attach","charttitle","node","chart","that","zIndex","maxTop","top","currentTop","onComplete","drawAll","response_percentage","most","responses","replurk","favorite","sort","a","b","findregex","regex","replace","content","storage","match","idx","responders","mentions","dataAll","myemoticons","hashtags","links","pics","types","words","chars","countAll","content_raw","plurk_id","replurkers_count","favorite_count","response","i","undefined","loved","pic","split","drawLinks","drawPics","owner_id","plurk_type","posted","interaction","multiplier","console","info","mvp","type","error","inactive","empty","prev_count","clean","isComplete","item","Promise","resolve","done","loop","month","fakeupdate","forcedone","width","padding","margin","overflow","scrollAnimate","credits","permisions","rotation","menu","el1","el2","direction","browserBar","login","onLeave","browserColor","onEnterBack","onEnter","startDate","endDate","days","fulldays","getSetStateColor","state","showLoginPage","hideLoginPage","set","showStatisticPages","onStart","hideStatisticPages","quick","loginmessage","tokenlink","then","extra","anniversary","years","avatar_big","oneday","join","join_date","getMonth","getFullYear","getDate","badges","getTimeline","offset","plurk_users","concat","lastposted","floor","requestLogout","largest_poll_result","plurk","responded","replurkers","favorers","anonymous","coins","porn","with_poll","poll","displayExtendedStatistics","date","gender","tiktok","facebook","scrollTo","displayPlurkerData","displayStatistics","requestToken","run"],"sourceRoot":""}