{"version":3,"file":"474.bundle.js","mappings":"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","sources":["webpack://dwaan/./src/js/helpers/replurk.js"],"sourcesContent":["\"use strict\";\n\nimport { gsap, ScrollTrigger } from \"gsap/all\";\nimport api from \"../helpers/api\";\nimport scroll from \"../helpers/scroll\";\nimport darkmode from \"../helpers/darkmode\";\nimport animate from \"../helpers/animate\";\nimport html2canvas from \"html2canvas\";\nimport { _q, _qAll, hasClass, plural, monthNames, animateNumber, datediff, pluralinwords, reduceMotionFilter, waitForImg } from '../helpers/helper';\n\n/*\n    Simple span element object:\n\n    1. update(text): update the content with text value, and animate it if it's number\n    2. updateHTML(text): update the content with html value\n*/\n\nvar iconLink = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" style=\"enable-background:new 0 0 24 24;\" xml:space=\"preserve\"><path id=\"right\" d=\"M19.188,12.001c0,1.1-0.891,2.015-1.988,2.015l-4.195-0.015C13.543,15.089,13.968,16,15.002,16h3C19.658,16,21,13.657,21,12s-1.342-4-2.998-4h-3c-1.034,0-1.459,0.911-1.998,1.999l4.195-0.015C18.297,9.984,19.188,10.901,19.188,12.001z\"/><path id=\"center\" d=\"M8,12c0,0.535,0.42,1,0.938,1h6.109c0.518,0,0.938-0.465,0.938-1c0-0.534-0.42-1-0.938-1H8.938C8.42,11,8,11.466,8,12z\"/><path id=\"left\" d=\"M4.816,11.999c0-1.1,0.891-2.015,1.988-2.015L11,9.999C10.461,8.911,10.036,8,9.002,8h-3c-1.656,0-2.998,2.343-2.998,4s1.342,4,2.998,4h3c1.034,0,1.459-0.911,1.998-1.999l-4.195,0.015C5.707,14.016,4.816,13.099,4.816,11.999z\"/></svg>';\nclass span {\n    constructor(classname, text) {\n        this.el = document.createElement('span');\n        this.el.setAttribute(\"class\", classname);\n        this.el.innerHTML = text;\n    }\n\n    update(text) {\n        animateNumber(this.el.textContent, text, (text) => {\n            this.el.textContent = text;\n        });\n    }\n\n    updateHTML(text) {\n        this.el.innerHTML = text;\n    }\n}\n\n/*\n    Color randomizer\n\n    1. colors: array of colors value\n    2. getRandomColor(): get the randomized color from colors list\n*/\nclass colors {\n    constructor() {\n        this.oldcolor = \"\";\n        this.randomcolors = [];\n        this.colors = ['rgb(63,94,251)', 'rgb(252,70,107)', 'rgb(34,193,195)', 'rgb(253,187,45)', 'rgb(195,34,190)', 'rgb(219,158,0)', 'rgb(75,231,152)', 'rgb(195,34,103)', 'rgb(45,182,253)'];\n    }\n\n    getRandomColor() {\n        var color;\n        do {\n            this.randomcolors = gsap.utils.shuffle(this.colors).slice();\n        } while (this.oldcolor == (color = this.randomcolors.pop()));\n        this.oldcolor = color;\n        return color;\n    }\n}\n\n/*\n    Plurk element object spesification:\n\n    1. id: contain the id name\n    2. user: contain user object\n    3. attached: status of element is attached in DOM or not\n    4. create(): create the DOM element\n    4. destroy(): remove the DOM element\n    4. update(): update the DOM element based on it's current value\n    5. insertTo(element): insert DOM element to spesific element, also will check if it's already created or not\n\n*/\nclass plurkerElement {\n    constructor(id, data, avatarurl, customcreate) {\n        this.id = id;\n        this.user = data;\n        this.user_id = data.id;\n        this.value = data.nick_name;\n        this.nick_name = data.nick_name;\n        this.attached = false;\n        this.hidden = true;\n        this.count = 1;\n        this.position = 0;\n        this.customcreate = customcreate;\n        this.el = document.createElement('a');\n        this.created = false;\n        this.avatarurl = avatarurl;\n        this.counts = new span('count', this.count);\n    }\n\n    create() {\n        this.created = true;\n\n        this.el.setAttribute(\"id\", this.id + this.user_id);\n        this.el.setAttribute(\"class\", 'plurkers');\n        this.el.setAttribute(\"href\", 'https://plurk.com/' + this.user.nick_name);\n        this.el.setAttribute(\"target\", '_BLANK');\n\n        if (!this.customcreate) {\n            this.avatar = new span('avatar', '<img src=\"' + this.avatarurl + '\" />');\n            this.name = new span('name', this.user.display_name);\n            this.counts = new span('count', this.count);\n            this.el.appendChild(this.avatar.el);\n            this.el.appendChild(this.name.el);\n            this.el.appendChild(this.counts.el);\n        } else {\n            this.customcreate(this);\n        }\n    }\n\n    insertTo(element) {\n        if (!this.created) this.create();\n\n        this.attached = true;\n        element.insertAdjacentElement(\"beforeend\", this.el);\n    }\n\n    destroy() {\n        this.attached = false;\n\n        if (this.el) {\n            this.el.remove();\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    update() {\n        // Only update when it's attached\n        if (this.attached) {\n            this.counts.update(this.count);\n        }\n    }\n}\n\n\n/*\n    Replurk class\n*/\nclass replurk {\n    // Draw in which element?\n    next = document.createElement('div');\n    // Plurks array\n    plurks = [];\n    // Plurker profile object\n    me = { \"id\": 3203568, \"has_profile_image\": 1, \"timeline_privacy\": 0, \"nick_name\": \"dwan\", \"display_name\": \"Dwan\", \"date_of_birth\": \"Sat, 29 Oct 1983 00:01:00 GMT\", \"avatar\": 41917598, \"gender\": 1, \"karma\": 199.24, \"premium\": true, \"verified_account\": false, \"dateformat\": 3, \"default_lang\": \"en\", \"friend_list_privacy\": \"public\", \"name_color\": \"FFA59A\", \"full_name\": \"Dwan B.\", \"location\": \"Tel Aviv-Yafo, Dan, Israel\", \"timezone\": \"Asia/Jerusalem\", \"phone_verified\": 0, \"bday_privacy\": 1, \"plurks_count\": 14598, \"response_count\": 79484, \"pinned_plurk_id\": 0, \"background_id\": 0, \"show_ads\": false, \"show_location\": 0, \"profile_views\": 36112, \"avatar_small\": \"https://avatars.plurk.com/3203568-small41917598.gif\", \"avatar_medium\": \"https://avatars.plurk.com/3203568-medium41917598.gif\", \"avatar_big\": \"https://avatars.plurk.com/3203568-big41917598.jpg\", \"about\": \"Mr. Goat\\u2019s dad and full-time husband\", \"about_renderred\": \"Mr. Goat\\u2019s dad and full-time husband\", \"page_title\": \"The world revolve around me\", \"recruited\": 14, \"relationship\": \"married\", \"friends_count\": 571, \"fans_count\": 498, \"join_date\": \"Wed, 15 Oct 2008 07:48:05 GMT\", \"privacy\": \"world\", \"accept_private_plurk_from\": \"all\", \"post_anonymous_plurk\": false, \"badges\": [\"10_invites\", \"14\", \"9\", \"10000_views\", \"10000_plurks\", \"50000_comments\", \"upload_profile_image\", \"50_fans\", \"coin\"], \"link_facebook\": false, \"setup_facebook_sync\": false, \"setup_twitter_sync\": false, \"setup_weibo_sync\": false, \"filter\": { \"porn\": 2, \"anonymous\": 0, \"keywords\": null }, \"anniversary\": { \"years\": 13, \"days\": 27 }, \"phone_number\": null, \"creature\": 0, \"creature_url\": null, \"creature_special\": 1, \"creature_special_url\": null };\n\n    /*\n        Friends object spesification:\n\n        1. data: contains all the friends collection data\n        2. add(data): add friend to friends collection data\n        3. find(user_id): return friend data based on their id\n        4. findByUsername(nick_name): return friend data based on their nick name\n        5. getAvatar(user_id): return avatar url based on their id for from friends collection data\n        6. getAvatarByUsername(user_id): return avatar url based on their nick name for from friends collection data\n    */\n    friends = {\n        data: {},\n        unavailable: [],\n        parent: this,\n        init: function () {\n            this.data = {};\n        },\n        add: function (new_friends) {\n            Object.assign(this.data, new_friends);\n        },\n        find: async function (user_id) {\n            if (this.unavailable.findIndex(el => el == user_id) >= 0) return false;\n\n            if (this.data && this.data[user_id]) {\n                return this.data[user_id];\n            } else {\n                var result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&user_id=\" + user_id);\n\n                if (result.success) {\n                    var temp = {};\n                    temp[result.message.user_info.id] = result.message.user_info;\n                    this.add(temp);\n                    return result.message.user_info;\n                } else {\n                    this.unavailable.push(user_id);\n                    return false;\n                }\n            }\n        },\n        findByUsername: async function (nick_name) {\n            var user_id = false;\n\n            if (this.unavailable.findIndex(el => el == nick_name) >= 0) return false;\n\n            for (var index in this.data) {\n                if (this.data[index].nick_name.toLowerCase() == nick_name.toLowerCase()) {\n                    user_id = index;\n                    break;\n                }\n            }\n\n            if (user_id) {\n                return this.data[user_id];\n            } else {\n                var result = await api.call(\"?fetch=APP&url=/Profile/getPublicProfile&nick_name=\" + nick_name);\n\n                if (result.success) {\n                    var temp = {};\n                    temp[result.message.user_info.id] = result.message.user_info;\n                    this.add(temp);\n                    return result.message.user_info;\n                } else {\n                    this.unavailable.push(nick_name);\n                    return false;\n                }\n            }\n        },\n        getAvatar: function (user_id) {\n            if (user_id && this.data && this.data[user_id]) {\n                if (this.data[user_id].has_profile_image) {\n                    var avatar = \"\";\n                    if (this.data[user_id].avatar) avatar = this.data[user_id].avatar;\n                    return 'https://avatars.plurk.com/' + user_id + '-big' + avatar + '.jpg';\n                }\n            }\n            return 'https://plurk.com/static/default_big.jpg';\n        },\n        getAvatarByUsername: function (user_name) {\n            var user_id = false;\n\n            if (user_name) {\n                for (var index in this.data) {\n                    if (this.data[index].nick_name.toLowerCase() == user_name.toLowerCase()) {\n                        user_id = index;\n                        break;\n                    }\n                }\n            }\n\n            return this.getAvatar(user_id);\n        }\n    }\n\n    // Statistics plurker object renderer\n    statistics = {\n        // Storage\n        whispers_count: 0,\n        coins_count: 0,\n        porn_count: 0,\n        noresponse_count: 0,\n        private_count: 0,\n        replurker_count: 0,\n        replurker_list: [],\n        favourite_count: 0,\n        favorite_list: [],\n        response_count: 0,\n        responded_count: 0,\n        responded_other_count: 0,\n        responded_other_list: [],\n        plurks_count: 0,\n        poll_count: 0,\n        poll_responder_count: 0,\n        poll_popular_plurk: {},\n        redditor_count: 0,\n        tiktoker_count: 0,\n        instagrammer_count: 0,\n        imgurer_count: 0,\n        facebooker_count: 0,\n        twitterer_count: 0,\n        youtuber_count: 0,\n        id: 0,\n        // Other\n        next: document.createElement('div'),\n        el: document.createElement('div'),\n        randomcolors: [],\n        parent: this,\n        init: function (next) {\n            this.whispers_count = 0;\n            this.coins_count = 0;\n            this.porn_count = 0;\n            this.noresponse_count = 0;\n            this.private_count = 0;\n            this.replurker_count = 0;\n            this.replurker_list = [];\n            this.favourite_count = 0;\n            this.favorite_list = [];\n            this.response_count = 0;\n            this.responded_count = 0;\n            this.responded_other_count = 0;\n            this.responded_other_list = [];\n            this.plurks_count = 0;\n            this.id = 0;\n            this.next = next;\n            this.randomcolors = [];\n\n            this.el = this.next.querySelector(\"#statistics\");\n\n            // Obverse when element is added to DOM\n            var observer = new MutationObserver((mutationsList) => {\n                mutationsList.forEach(mutation => {\n                    mutation.addedNodes.forEach(el => {\n                        this.afterDraw(el);\n                    });\n                });\n            });\n            observer.observe(this.el, {\n                attributes: true,\n                childList: true,\n                subtree: false\n            });\n        },\n        clear: function () {\n            this.el.innerHTML = \"\";\n        },\n        listCount: function (list, collection) {\n            if (collection.length > 0) {\n                collection.forEach(value => {\n                    var index = list.findIndex(el => el.id == value)\n\n                    if (index < 0) list.push({ id: value, count: 1 });\n                    else list[index].count++;\n                });\n            }\n\n            return list;\n        },\n        title: function (text, style = \"\", loading = false) {\n            if (loading) this.el.insertAdjacentHTML('beforeend', '<div class=\"statistics middle title ' + style + '\"><h3><span>' + text + '</span><span class=\"loading\"><i/></span></h3></div>');\n            else this.el.insertAdjacentHTML('beforeend', '<div class=\"statistics middle title ' + style + '\"><h3><span>' + text + '</span><span class=\"line\"><i/></span></h3></div>');\n        },\n        afterDraw: function (el) {\n            var length = reduceMotionFilter(1);\n\n            if (hasClass(el, 'wrap')) {\n                var color = new colors();\n                var randomcolors = [color.getRandomColor(), color.getRandomColor()]\n                var anim = el.querySelector(\".anim\");\n\n                gsap.set(anim, {\n                    background: 'radial-gradient(at 10% 10%, ' + randomcolors[0] + ' 0%, ' + randomcolors[1] + ' 100%)'\n                });\n\n                gsap.to(anim, {\n                    opacity: 1,\n                    duration: length / 2,\n                    ease: \"power3.out\"\n                }, 0);\n\n                // Scroll animation wrap section\n                var screen = gsap.matchMedia();\n                screen.add(\"(min-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: window.innerHeight * 1 / 5\n                        }, {\n                            y: 0,\n                            ease: \"ease.out\"\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"0 100%-=100px\",\n                            animation: tl,\n                            scrub: 2\n                        });\n                    });\n                });\n                screen.add(\"(max-aspect-ratio: 1/1)\", () => {\n                    scroll.push(tl => {\n                        tl.fromTo(el.children, {\n                            y: 0\n                        }, {\n                            y: 0\n                        }, 0);\n                        return tl;\n                    }, tl => {\n                        return ScrollTrigger.create({\n                            trigger: el,\n                            start: \"0 100%-=100px\",\n                            end: \"100px 100%-=100px\",\n                            animation: tl,\n                            scrub: 1\n                        });\n                    });\n                });\n\n                scroll.push(function (tl) {\n                    if (el.querySelector(\".big\")) {\n                        var number = Number(el.querySelector(\".big\").textContent);\n                        if (number > 0) {\n                            var load = { progress: 0 };\n                            var duration = 1;\n                            if (number >= 500 && number < 1000) duration = 2;\n                            else if (number >= 1000 && number < 99999) duration = 3;\n                            else if (number >= 99999) duration = 4;\n                            tl.to(load, {\n                                progress: number,\n                                snap: \"progress\",\n                                ease: \"power3.out\",\n                                duration: duration,\n                                onUpdate: () => {\n                                    el.querySelector(\".big\").textContent = plural(load.progress);\n                                }\n                            }, 0);\n                        }\n                    }\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"0 100%-=100px\",\n                        end: \"100px 100%-=100px\",\n                        animation: tl,\n                        toggleActions: \"play none none none\"\n                    });\n                });\n            } else {\n                // Scroll animation line section\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelectorAll(\"i\"), {\n                        x: \"-100%\"\n                    }, {\n                        x: \"0%\",\n                        ease: \"ease.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"100% 100%\",\n                        end: \"100% 0\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'drawgraph')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".graph\"), {\n                        y: 100\n                    }, {\n                        y: 0\n                    }, 0);\n\n                    tl.fromTo(el.querySelector(\".graph i\"), {\n                        height: \"0%\"\n                    }, {\n                        height: el.querySelector(\".graph i\").getAttribute(\"data-number\") + \"%\"\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 1\n                    });\n                });\n            }\n\n            if (hasClass(el, 'coins')) {\n                scroll.push(tl => {\n                    tl.fromTo(el.querySelector(\".big\"), {\n                        y: \"50%\"\n                    }, {\n                        y: 0,\n                        ease: \"power3.out\"\n                    }, 0);\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: el,\n                        start: \"50% 100%\",\n                        end: \"100% 100%\",\n                        animation: tl,\n                        scrub: 2\n                    });\n                });\n            }\n\n            // Capture function\n            this.capture(el);\n\n            scroll.refresh();\n        },\n        capture: (el) => {\n            var capture = el.querySelector(\".capture small\");\n            if (!capture) return;\n\n            capture.onclick = async () => {\n                if (capture.generating) return;\n\n                var imgs = el.querySelectorAll(\"img\");\n\n                // Informing user the process is starting\n                capture.generating = true;\n                document.body.style.cursor = \"wait\";\n\n                // Proxying images\n                imgs.forEach(img => {\n                    if (!img.getAttribute(\"src\").includes(\"http\") || img.localUrl) return;\n\n                    img.localUrl = true;\n                    img.setAttribute(\"src\", api.url + \"?img=\" + img.getAttribute(\"src\"));\n                });\n                // Load and cache image\n                await waitForImg(imgs, (_, progress) => {\n                    capture.innerHTML = \"Downloading images... (\" + Math.round(progress) + \"%)\";\n                });\n\n                // HTML to Canvas magic\n                capture.innerHTML = \"Processing...\";\n                var canvas = await html2canvas(el.querySelector(\".anim\"), {\n                    backgroundColor: null,\n                    logging: false,\n                });\n\n                // Download the output\n                var link = document.createElement(\"a\");\n                link.style.display = \"none\";\n                link.download = \"replurk\" + this.year + \"-\" + Date.now() + \".png\";\n                link.href = canvas.toDataURL();\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n                link.remove();\n\n                // Reset button after 3s\n                capture.innerHTML = \"Done\";\n                document.body.style.cursor = \"default\";\n                setTimeout(() => {\n                    capture.innerHTML = \"Redownload\";\n                    capture.generating = false;\n                }, 3000);\n            }\n        },\n        wrapper: function (style, text, background) {\n            if (background) return '<div class=\"statistics middle wrap ' + style + '\"><div class=\"anim\">' + text + '</div><div class=\"capture\"><small>Capture</small></div></div>';\n            else return '<div class=\"statistics middle wrap ' + style + '\"><div class=\"anim\" style=\"background-images:url(' + background + ')\">' + text + '</div><div class=\"capture\"><small>Download</small></div></div>';\n        },\n        draw: function (style, number, text, background) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"big\">' + number + '</span>\\\n\t\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'), background);\n            }\n        },\n        drawDiv: function (style, text) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style, '<div class=\"box\">' + text + '</div>'));\n        },\n        drawGraph: function (style, number, text) {\n            if (typeof number == \"string\" || (typeof number == \"number\" && number > 0)) {\n                this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawgraph movetitle\", '\\\n\t\t\t\t\t<p>\\\n\t\t\t\t\t\t<span class=\"graph\"><i data-number=\"' + number + '\"></i></span>\\\n\t\t\t\t\t\t<span class=\"info\">' + text + '</span>\\\n\t\t\t\t\t</p>\\\n\t\t\t\t'));\n            }\n        },\n        drawImage: function (style, image, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawimage\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span class=\"avatar\"><img src=\"' + image + '\" /></span>\\\n\t\t\t\t\t<span class=\"text\">' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawHTML: function (style, title, html) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawhtml\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<div class=\"htmlcontent\">' + html + '</div>\\\n\t\t\t\t\t<div class=\"title\">' + title + '</div>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawLink: function (style, link, title, text, badge) {\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawlink\", '\\\n\t\t\t\t<a href=\"' + link + '\" target=\"_BLANK\">\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<span>' + text + '</span>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</a>\\\n\t\t\t'));\n        },\n        drawPost: function (style, id, title, text, badge) {\n            var url = \"\";\n            if (id) url = 'https://plurk.com/p/' + id.toString(36);\n            this.el.insertAdjacentHTML('beforeend', this.wrapper(style + \" drawpost\", '\\\n\t\t\t\t<div>\\\n\t\t\t\t\t<a href=\"' + url + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>\\\n\t\t\t\t\t<span class=\"big\">' + badge + '</span>\\\n\t\t\t\t\t<p class=\"post\">' + text + '</p>\\\n\t\t\t\t\t<span class=\"title\">' + title + '</span>\\\n\t\t\t\t</div>\\\n\t\t\t'));\n        },\n        drawUserList: async function (style, id, title, list) {\n            var html = \"\";\n            var max = list.length >= 5 ? 5 : list.length;\n            var length = reduceMotionFilter(1);\n\n            this.drawHTML(style + \" drawuserlist movetitle \" + id, title, \"<span class='info'>Downloading user data</span>\");\n            for (var index = 0; index < max; index++) {\n                var value = list[index];\n                if (value) {\n                    var friends = this.parent.friends;\n                    var friend = await friends.find(value.id);\n                    if (friend) {\n                        var plurker = new plurkerElement(value.id, friend, \"\", plurker => {\n                            plurker.avatar = new span('avatar', '<img src=\"' + friends.getAvatar(plurker.user.id) + '\" />');\n                            plurker.name = new span('name', plurker.user.display_name);\n                            plurker.counts = new span('count', value.count);\n                            plurker.el.appendChild(plurker.avatar.el);\n                            plurker.el.appendChild(plurker.name.el);\n                            plurker.el.appendChild(plurker.counts.el);\n                            plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.user.nick_name);\n                        });\n                        plurker.create();\n                        html += plurker.el.outerHTML;\n                    } else {\n                        max++;\n                    }\n                }\n            }\n            this.el.querySelector(\".\" + id + \" .htmlcontent\").innerHTML = html;\n\n            // Stagger animation\n            if (id == 'mostinteraction' || id == 'mvp') {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        scale: .3,\n                        opacity: 0\n                    }, {\n                        scale: 1,\n                        opacity: 1,\n                        ease: \"elastic.out(1.2, 0.5)\",\n                        duration: length * 3 / 4,\n                        stagger: {\n                            amount: length / 3,\n                            from: \"end\"\n                        }\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"50% 100%\",\n                        end: \"50% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            } else {\n                scroll.push(tl => {\n                    tl.fromTo(this.el.querySelectorAll(\".\" + id + \" .plurkers\"), {\n                        y: 50,\n                        opacity: 0\n                    }, {\n                        y: 0,\n                        opacity: 1,\n                        duration: length,\n                        ease: \"power3.out\",\n                        stagger: length / 3\n                    }, 0);\n\n                    return tl;\n                }, tl => {\n                    return ScrollTrigger.create({\n                        trigger: this.el.querySelector(\".\" + id),\n                        start: \"0% 100%\",\n                        end: \"0% 100%\",\n                        animation: tl,\n                        toggleActions: \"play none none reverse\"\n                    });\n                });\n            }\n        },\n        attach: function (charttitle, node, max) {\n            var that = this;\n            var id = node.id;\n            var chart;\n            var title;\n            var text;\n            var anim;\n            var wrapper;\n            var capture;\n\n            var opacity = 0;\n            var position = max;\n            var zIndex = 0;\n            var hidden = true;\n\n            if (node.position <= max) {\n                hidden = false;\n                zIndex = position = (node.position - 1);\n                opacity = 1;\n            }\n\n            // Create the box\n            if (!that.next.querySelector(\".\" + id)) {\n                chart = document.createElement('div');\n                chart.setAttribute('class', 'chart');\n\n                title = document.createElement('div');\n                title.setAttribute('class', 'title');\n                title.innerHTML = charttitle;\n\n                text = document.createElement('div');\n                text.setAttribute('class', 'text');\n                text.appendChild(chart);\n                text.appendChild(title);\n\n                anim = document.createElement('div');\n                anim.setAttribute('class', 'anim');\n                anim.appendChild(text);\n\n                text = document.createElement('small');\n                text.innerHTML = \"Download\";\n                capture = document.createElement('div');\n                capture.setAttribute('class', 'capture');\n                capture.appendChild(text);\n\n                wrapper = document.createElement('div');\n                wrapper.setAttribute('class', 'statistics middle wrap attach ' + id);\n                wrapper.appendChild(anim);\n                wrapper.appendChild(capture);\n\n                that.el.insertAdjacentElement(\"beforeend\", wrapper);\n            }\n\n            // Add  element\n            if (!hidden && !node.attached) {\n                var maxTop = max / (max - 1) * 100;\n\n                node.insertTo(that.el.querySelector(\".\" + id + ' .chart'));\n\n                gsap.set(node.el, {\n                    top: maxTop + \"%\",\n                    opacity: 0,\n                    zIndex: 0,\n                });\n            }\n            // Update position\n            if (!hidden || !node.hidden) {\n                var currentTop = position / (max - 1) * 100;\n                var length = reduceMotionFilter(1);\n\n                gsap.killTweensOf(node.el);\n                gsap.to(node.el, {\n                    top: currentTop + \"%\",\n                    opacity: opacity,\n                    zIndex: zIndex,\n                    duration: length / 2,\n                    ease: \"power3.out\",\n                    onComplete: function () {\n                        if (hidden) {\n                            node.destroy();\n                        }\n                    }\n                });\n                node.hidden = hidden;\n            }\n\n            node.update();\n        },\n        drawAll: async function (plurks) {\n            var response_percentage = Math.round((this.plurks_count - this.noresponse_count) / this.plurks_count * 100);\n\n            this.parent.most.responses.draw(plurks);\n            this.drawGraph('center graph percentage', response_percentage, 'Around <i>' + response_percentage + '%</i> of my plurks got <img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> responses ' + ((response_percentage <= 50) ? '<img src=\"https://api.iconify.design/noto:crying-face.svg\" />' : '<img src=\"https://api.iconify.design/noto:star-struck.svg\" />'));\n\n            this.draw('spansmall recievereplurk', this.replurker_count, 'I received <i><img src=\"https://api.iconify.design/noto:megaphone.svg\" /> ' + plural(this.replurker_count, 'replurk') + '</i>');\n            this.parent.most.replurk.draw(plurks);\n\n            this.parent.most.favorite.draw(plurks);\n            this.draw('spansmall recievelove', this.favourite_count, 'I recieved <i><img src=\"https://api.iconify.design/noto:red-heart.svg\" /> ' + plural(this.favourite_count, 'love') + '</i>');\n\n            this.draw('spansmall privateplurk', this.private_count, 'I posted <i><img src=\"https://api.iconify.design/noto:lip.svg\" /> ' + plural(this.private_count, 'private plurk') + '</i>');\n            this.draw('spansmall whisper', this.whispers_count, 'I posted <i><img src=\"https://api.iconify.design/noto:face-in-clouds.svg\" /> ' + plural(this.whispers_count, 'whisper') + '</i>');\n            this.draw('spansmall porn', this.porn_count, 'I posted <i><img src=\"https://api.iconify.design/noto:face-with-peeking-eye.svg\" /> ' + plural(this.porn_count, 'adult plurk') + '</i>');\n\n            this.draw('span2 responsecount', this.plurks_count + \" &rarr; \" + this.response_count, 'I received <i><img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> ' + plural(this.response_count, 'response') + '</i> from <i>' + plural(this.plurks_count, 'plurk') + '</i>');\n            this.draw('spansmall center coins', this.coins_count, 'I recieved <i><img src=\"https://api.iconify.design/noto:coin.svg\" /> ' + plural(this.coins_count, 'coin') + '</i>');\n\n            if (this.favorite_list.length > 0) this.drawUserList(\"avatar\", \"loved\", 'These Plurkers <i><img src=\"https://api.iconify.design/noto:red-heart.svg\" /> Loved</i> My Posts', this.favorite_list.sort(this.parent.most.sort));\n            if (this.replurker_list.length > 0) this.drawUserList(\"avatar\", \"replurked\", 'These Plurkers likes to <i><img src=\"https://api.iconify.design/noto:megaphone.svg\" /> Replurked</i> My Posts', this.replurker_list.sort(this.parent.most.sort));\n        }\n    };\n\n    // Most statistics object renderer\n    most = {\n        parent: this,\n        sort: function (a, b) {\n            return b.count - a.count;\n        },\n        // Find and count all based on regex\n        findregex: function (regex, replace, content, storage) {\n            var result = content.match(regex);\n\n            for (var index in result) {\n                var value = replace(result[index]);\n                var idx = storage.findIndex(el => el.value == value);\n\n                if (idx < 0) {\n                    storage.push({\n                        id: value,\n                        value: value,\n                        count: 1\n                    });\n                } else {\n                    storage[idx].count++;\n                }\n            }\n\n            return result;\n        },\n        init: function () {\n            this.responders.data = [];\n            this.mentions.data = [];\n            this.mentions.dataAll = [];\n            this.myemoticons.data = [];\n            this.hashtags.data = [];\n            this.links.links = [];\n            this.links.pics = [];\n            this.types.words = 0;\n            this.types.chars = 0;\n        },\n        countAll: async function (data) {\n            // Find and count all my emoticons from my post\n            if (data.user_id == this.parent.me.id) this.myemoticons.count(data.content);\n            // Find and count all mentions from my post\n            await this.mentions.count(data.content_raw);\n            // Find and count all hashtags from my post\n            if (data.user_id == this.parent.me.id) this.hashtags.count(data.content);\n            // Find and count all links and pictures post from my post\n            if (data.user_id == this.parent.me.id) this.links.count(data.content, data.plurk_id, data.response_count, data.replurkers_count, data.favorite_count);\n            // Find and count characther and words from my post\n            if (data.user_id == this.parent.me.id) this.types.count(data.content_raw);\n        },\n        responders: {\n            data: [],\n            parent: this,\n            count: async function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.user_id == response.user_id;\n                });\n\n                if (index < 0) {\n                    var friends = this.parent.friends;\n                    var user = await friends.find(response.user_id);\n                    this.data.push(new plurkerElement('mostresponders', user, friends.getAvatar(user.id)));\n                } else {\n                    this.data[index].count++;\n                }\n                this.data.sort(this.parent.most.sort);\n\n                // Update top 5\n                var index = 1;\n                for (var i = 0; i < this.data.length; i++) {\n                    this.data[i].position = this.data.length;\n                    if (this.data[i].user_id != this.parent.me.id && this.data[i].user_id != 99999) {\n                        this.data[i].position = index++;\n                        this.parent.statistics.attach('<i>Top <img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> Responders</i> <strong>of My Timeline</strong>', this.data[i], 5);\n                    }\n                }\n            },\n            draw: function () {\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatar(this.data[index].user_id), 'https://plurk.com/' + this.data[index].user.nick_name, '<i>Most Responder</i>', this.data[index].user.display_name, this.data[index].count);\n                }\n            }\n        },\n        mentions: {\n            data: [],\n            dataAll: [],\n            parent: this,\n            count: async function (content) {\n                var result = this.parent.most.findregex(/\\@(\\w{1,30})[\\ |\\:]/g, value => value.replace(/\\@|\\ |\\:/g, ''), content, this.data);\n                var max = 5;\n                var index = 1;\n\n                if (result) {\n                    // Update top 5\n                    this.data.sort(this.parent.most.sort);\n                    for (var idx = 0; idx < this.data.length; idx++) {\n                        this.data[idx].position = this.data.length;\n\n                        if (index <= max) {\n                            var user = await this.parent.friends.findByUsername(this.data[idx].value);\n\n                            if (this.data[idx].el == undefined) {\n                                this.data[idx] = new plurkerElement('mostmentionedbyme', user, \"\", plurker => {\n                                    plurker.avatar = new span('avatar', '<img src=\"' + this.parent.friends.getAvatar(plurker.user_id) + '\" />');\n                                    plurker.name = new span('name', \"@\" + plurker.nick_name);\n                                    plurker.counts = new span('count', plurker.count);\n                                    plurker.el.appendChild(plurker.avatar.el);\n                                    plurker.el.appendChild(plurker.name.el);\n                                    plurker.el.appendChild(plurker.counts.el);\n                                    plurker.el.setAttribute(\"href\", 'https://plurk.com/' + plurker.nick_name);\n                                });\n                            }\n\n                            if (user.id != this.parent.me.id && user.id != 99999) {\n                                this.data[idx].position = index++;\n                                this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/noto:person-raising-hand-medium-dark-skin-tone.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                            }\n                        }\n\n                        if (this.data[idx].el) this.parent.statistics.attach('<i>Most <img src=\"https://api.iconify.design/noto:person-raising-hand-medium-dark-skin-tone.svg\" /> Mentioned</i> <strong>in My Timeline</strong>', this.data[idx], max);\n                    }\n                }\n            },\n            draw: function () {\n                var index = 0;\n                if (this.data.length > 0) {\n                    while ((this.data[index].user_id == this.parent.me.id || this.data[index].user_id == 99999) && index < this.data.length) index++;\n                    if (this.data[index]) this.parent.statistics.drawImage(\"avatar\", this.parent.friends.getAvatarByUsername(this.data[index].value), 'https://plurk.com/' + this.data[index].value, '<i>Most Mentioned</i> by me', \"@\" + this.data[index].value, this.data[index].count);\n                }\n            }\n        },\n        myemoticons: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/emoticon_my\\\" src=\\\"(.*?)\\\"/g, function (value) {\n                    return value.replace(/emoticon_my\\\" src=\\\"|\\\"/gi, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 7;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><img src=\"' + this.data[i].value + '\" /> <span class=\"count\">' + this.data[i].count + '</span></div>';\n                if (html != \"\") this.parent.statistics.drawHTML(\"smallspan grid emoticons\", 'Most Used <i>My Emoticons</i>', html);\n            }\n        },\n        hashtags: {\n            data: [],\n            parent: this,\n            count: function (content) {\n                this.parent.most.findregex(/hashtag\\\"\\>(.*?)\\</g, function (value) {\n                    return value.replace(/hashtag\\\"\\>\\#|\\.\\<|\\</g, '');\n                }, content, this.data);\n            },\n            draw: function () {\n                var html = \"\";\n                var max = 5;\n                this.data.sort(this.parent.most.sort);\n                for (var i = 0; i < (this.data.length < max ? this.data.length : max) && this.data[i]; i++)\n                    if (this.data[i].count > 1) html += '<div><a href=\"https://plurk.com/search?q=' + this.data[i].value + '\" target=\"_BLANK\" /><span class=\"count\">' + this.data[i].count + '</span> #' + this.data[i].value + '</a></div>';\n                if (html != \"\") {\n                    html = \"<strong>#</strong>\" + html;\n                    this.parent.statistics.drawHTML(\"hashtags\", 'Most Used <i>Hashtags</i>', html);\n                }\n            }\n        },\n        links: {\n            data: [],\n            links: [],\n            pics: [],\n            parent: this,\n            count: function (content, id, response, replurk, loved) {\n                var result = content.match(/href\\=\\\"(.*?)\\\"\\ class=\\\"(.*?)\\\"\\ rel/g);\n                var count = 0;\n                var pics = [];\n                var links = [];\n\n                if (result) for (var data of result) {\n                    if (!this.data[id]) {\n                        count = response + (replurk * 250) + (loved * 50);\n                    }\n\n                    if (data.includes(\"pictureservices\")) {\n                        this.pics.push(data);\n                        if (count > 0) {\n                            var pic = data.split('\\\"')\n                            pics.push({\n                                url: pic[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n                    }\n                    else {\n                        this.links.push(data);\n                        if (count > 0) {\n                            var link = data.split('\\\"')\n                            links.push({\n                                url: link[1],\n                                response: response,\n                                replurk: replurk,\n                                loved: loved\n                            });\n                        }\n\n                    }\n                }\n\n                if (count) this.data.push({\n                    id: id,\n                    pics: pics,\n                    links: links,\n                    count: count,\n                    content: content\n                });\n            },\n            drawLinks: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].links.length > 0) {\n                        var link = this.data[index].links[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].id.toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"post\"><div class=\"info\">' + this.data[index].content + '</div><div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> ' + link.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/noto:megaphone.svg\" /> ' + link.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/noto:red-heart.svg\" /> ' + link.loved + '</span>' + url + '</div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n                if (this.links.length > 0) this.parent.statistics.drawDiv('spansmall sharedlinks', \"<div class='title'>I shared <i>🔗 \" + plural(this.links.length, 'link') + '</i> and this is the most popular one</div>' + result);\n            },\n            drawPics: function () {\n                var max = 1;\n                var index = 0;\n                var result = \"\";\n                this.data.sort(this.parent.most.sort);\n                while (index < this.data.length && max > 0) {\n                    if (this.data[index].pics.length > 0) {\n                        var pics = this.data[index].pics[0];\n                        var url = '<a href=\"https://plurk.com/p/' + this.data[index].toString(36) + '\" class=\"link\" target=\"_BLANK\">' + iconLink + '</a>';\n                        result += '<div class=\"box\"><div class=\"image\" style=\"background-image: url(' + api.url + \"?img=\" + pics.url + ')\"></div><div class=\"post\">' + this.data[index].content + '<div class=\"meta\"><span class=\"response\"><img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> ' + pics.response + '</span><span class=\"replurk\"><img src=\"https://api.iconify.design/noto:megaphone.svg\" /> ' + pics.replurk + '</span><span class=\"loved\"><img src=\"https://api.iconify.design/noto:red-heart.svg\" /> ' + pics.loved + '</span>' + url + '</div></div></div>';\n                        max--;\n                    }\n                    index++;\n                }\n\n                if (this.pics.length > 0) this.parent.statistics.draw('spansmall sharedpictures', this.pics.length, 'I shared <i>🖼 ' + plural(this.pics.length, 'image') + '</i>');\n                if (result != \"\") this.parent.statistics.drawHTML('span2 previewpics', '<i>🖼 Most Popular Image</i>', result);\n            }\n        },\n        types: {\n            words: 0,\n            chars: 0,\n            parent: this,\n            count: function (content) {\n                var words = content.split(\" \");\n\n                this.chars += content.length;\n                this.words += words.length;\n            },\n            draw: function () {\n                if (this.chars > 0) this.parent.statistics.draw('span2 mediumnumber', this.chars, 'I typed more than  <i>' + pluralinwords(this.chars, 'character') + '</i>, around <i>' + pluralinwords(this.words, 'word') + '</i> this year');\n            }\n        },\n        responses: {\n            parent: this,\n            sort: function (a, b) {\n                return b.response_count - a.response_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.response_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostresponded', value.plurk_id, '<i><img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> Most Responded</i> ' + datediff(value.posted), value.content, value.response_count);\n                        return;\n                    }\n                }\n            }\n        },\n        replurk: {\n            parent: this,\n            sort: function (a, b) {\n                return b.replurkers_count - a.replurkers_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.replurkers_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostreplurked', value.plurk_id, '<i><img src=\"https://api.iconify.design/noto:megaphone.svg\" /> Most Replurked</i> ' + datediff(value.posted), value.content, value.replurkers_count);\n                        return;\n                    }\n                }\n            }\n        },\n        favorite: {\n            parent: this,\n            sort: function (a, b) {\n                return b.favorite_count - a.favorite_count;\n            },\n            draw: function (data) {\n                data.sort(this.sort);\n                for (var index in data) {\n                    var value = data[index];\n                    if (value.owner_id == this.parent.me.id && value.plurk_type != 3 && value.favorite_count > 0) {\n                        this.parent.statistics.drawPost('postcontent span2 mostfavorited', value.plurk_id, '<i><img src=\"https://api.iconify.design/noto:red-heart.svg\" /> Most Loved</i> ' + datediff(value.posted), value.content, value.favorite_count);\n                        return;\n                    }\n                }\n            }\n        },\n        interaction: {\n            data: [],\n            parent: this,\n            count: function (response) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier++;\n                    else this.data[index].multiplier = 1;\n                    this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span2\", \"mostinteraction\", \"Plurkers who really like to <i><img src='https://api.iconify.design/noto:speaking-head.svg' /> interact</i> with me\", result);\n                } catch {\n                    console.info(\"Error while counting most interacted plurker\");\n                }\n            }\n        },\n        mvp: {\n            data: [],\n            parent: this,\n            count: function (response, type) {\n                var index = this.data.findIndex(function (el) {\n                    return el.id == response.user_id;\n                });\n\n                if (index < 0) {\n                    this.data.push({\n                        id: response.user_id,\n                        count: 1,\n                        multiplier: 1,\n                        plurk_id: response.plurk_id\n                    });\n                } else {\n                    if (type == \"replurk\") {\n                        this.data[index].count += (response.count * 250);\n                    } else if (type == \"favorite\") {\n                        this.data[index].count += (response.count * 50);\n                    } else if (response.content_raw.length > 16) {\n                        if (this.data[index].plurk_id == response.plurk_id) this.data[index].multiplier += .5;\n                        else this.data[index].multiplier = .5;\n                        this.data[index].count += (this.data[index].multiplier * response.content_raw.length);\n                    }\n                }\n                this.data.sort(this.parent.most.sort);\n            },\n            draw: function () {\n                var result = [];\n                var length = 0;\n                var index = 0;\n                while (this.data[index] && length <= 5) {\n                    if (this.data[index].id != this.parent.me.id) {\n                        result.push(this.data[index]);\n                        length++;\n                    }\n                    index++;\n                }\n\n                try {\n                    if (result.length > 0) this.parent.statistics.drawUserList(\"bubble span3\", \"mvp\", \"My \" + this.parent.year + \" <i><img src='https://api.iconify.design/noto:biting-lip.svg' /> MVP</i>\", result);\n                } catch (error) {\n                    console.info(\"Error while counting my mvp\", error);\n                }\n            }\n        }\n    };\n\n    // Inactive plurker object\n    inactive = {\n        draw: (data, year) => {\n            this.statistics.draw('inactive', year + \" &#8617;\", 'I\\'ve been inactive since ' + year + ' <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n            this.statistics.drawPost('postcontent span2 inactivemore', data.plurk_id, '<i>My last Plurk</i> ' + datediff(data.posted), data.content, data.response_count);\n        },\n        empty: () => {\n            this.statistics.draw('inactive', '-', 'I didn\\'t post anything at this year <img src=\"https://s.plurk.com/emoticons/platinum/318416eab5a856bddb1e106a21ff557a.gif\" />');\n        }\n    }\n\n    // Loading object\n    loading = {\n        count: 0,\n        prev_count: 0,\n        counts: -1,\n        clean: false,\n        next: document.createElement('div'),\n        parent: this,\n        isComplete: function () { return this.count == this.counts },\n        init: function (next) {\n            this.count = 0;\n            this.prev_count = 0;\n            this.counts = -1;\n            this.clean = false;\n            this.next = next;\n        },\n        draw: function (item) {\n            return new Promise(resolve => {\n                var length = reduceMotionFilter(1);\n                this.prev_count = item;\n\n                if (!this.next.querySelector(\".statistics.loading\")) {\n                    this.parent.statistics.draw(\"loading\", item + \"%\", \"<i class='month'>Data from \" + this.year + \"</i>. Loading. <small>As long as you didn't close this browser tab, You can resume later by refreshing this page.</small>\");\n                }\n\n                // Animate loading\n                var load = { progress: this.prev_count };\n                gsap.to(load, {\n                    progress: Math.round(item),\n                    snap: \"progress\",\n                    ease: \"linear\",\n                    duration: length / 4,\n                    onUpdate: () => {\n                        var el = this.next.querySelector(\".loading .big\");\n                        if (el) el.innerHTML = load.progress + \"%\";\n                    },\n                    onComplete: async () => {\n                        if (this.clean) await this.done();\n                        resolve();\n                    }\n                });\n            });\n        },\n        loop: async function (length) {\n            this.clean = true;\n            this.counts = length;\n            await this.draw(0);\n        },\n        update: async function (month, value) {\n            var el = this.next.querySelector(\".loading .month\");\n            if (month && el) el.innerHTML = month;\n\n            if (this.counts >= 0) {\n                this.count = value ? value : this.count + 1;\n                await this.draw(Math.round(100 * (this.count / this.counts)));\n            }\n        },\n        fakeupdate: async function () {\n            if (this.counts >= 0) {\n                this.count++;\n                if (this.count >= (this.counts - 10)) this.count = (this.counts - 10);\n                await this.draw(100 * (this.count / this.counts));\n            }\n        },\n        forcedone: async function () {\n            this.count = this.counts;\n            await this.draw(100);\n        },\n        done: function () {\n            return new Promise(resolve => {\n                var length = reduceMotionFilter(1);\n\n                if (this.isComplete()) {\n                    var el = this.next.querySelector(\".statistics.loading\");\n\n                    this.clean = false;\n                    gsap.to(el, {\n                        opacity: 0,\n                        width: 0,\n                        height: 0,\n                        padding: 0,\n                        margin: 0,\n                        overflow: \"hidden\",\n                        duration: length / 2,\n                        ease: \"power3.out\",\n                        onComplete: () => {\n                            el.remove();\n                            scroll.refresh();\n                            resolve();\n                        }\n                    });\n                } else resolve();\n            });\n        }\n    }\n\n    // Scroll Animation\n    scrollAnimate = {\n        credits: (tl) => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation, #credits .made\"), {\n                y: window.innerHeight * 1 / 8\n            }, {\n                y: 0,\n                ease: \"linear\",\n                duration: length * 2,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .like, #credits .noaffiliation\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                stagger: {\n                    from: 'end',\n                    amount: length / 10\n                },\n                duration: length,\n                ease: \"power3.in\"\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#credits .made\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length,\n                ease: \"power3.in\"\n            }, length * 3 / 10);\n\n            return tl;\n        },\n        statistics: () => {\n            var next = this.next;\n\n            // Scroll animate statistics\n            scroll.push(tl => this.scrollAnimate.credits(tl), tl => ScrollTrigger.create({\n                trigger: next.querySelectorAll(\"#statistics\"),\n                start: \"100%-=\" + window.innerHeight + \" 0\",\n                end: \"100% 0\",\n                animation: tl,\n                scrub: .5\n            }));\n        },\n        permisions: () => {\n            var next = this.next;\n\n            // Scroll animation permission section\n            scroll.push((tl) => {\n                tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n                    y: 0\n                }, {\n                    y: window.innerHeight * -3 / 4,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sup\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * -1 / 10,\n                    rotation: -10,\n                    ease: \"linear\"\n                }, 0);\n                tl.fromTo(next.querySelectorAll(\"#permission .bgtext sub\"), {\n                    y: 0,\n                    x: 0,\n                    rotation: 0\n                }, {\n                    y: window.innerHeight * -1 / 4,\n                    x: window.innerHeight * 1 / 10,\n                    rotation: 10,\n                    ease: \"linear\"\n                }, 0);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n            scroll.push((tl) => {\n                tl = this.scrollAnimate.credits(tl);\n                return tl;\n            }, (tl) => {\n                return ScrollTrigger.create({\n                    trigger: next.querySelectorAll(\"#permission\"),\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    scrub: .5\n                });\n            });\n        },\n        menu: () => {\n            // Scroll animation menu and logout\n            scroll.push(tl => tl, tl => {\n                return ScrollTrigger.create({\n                    trigger: 'main',\n                    start: \"0 0\",\n                    end: \"100% 0\",\n                    animation: tl,\n                    onUpdate: update => {\n                        var el1 = '.logo, .size, .lamp, .switch';\n                        var el2 = el1 + \", .footer > *\";\n\n                        if (update.direction > 0) {\n                            gsap.killTweensOf(_qAll(el2));\n                            gsap.to(_qAll(el1), { y: -100, opacity: 0 });\n                            gsap.to(_qAll('.footer > *'), { y: 100, opacity: 0 });\n                        } else {\n                            gsap.to(_qAll(el2), { y: 0, opacity: 1 });\n                        }\n                    }\n                });\n            });\n        },\n        browserBar: (login = true) => {\n            if (login) {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#hello',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#statistics',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnter: () => {\n                            this.browserColor(\"white\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"white\");\n                        }\n                    });\n                });\n            } else {\n                scroll.push((tl) => {\n                    return tl;\n                }, (tl) => {\n                    return ScrollTrigger.create({\n                        trigger: '#permission',\n                        start: \"0 0\",\n                        end: \"100% 10px\",\n                        animation: tl,\n                        scrub: true,\n                        onLeave: () => {\n                            this.browserColor(\"yellow\");\n                        },\n                        onEnterBack: () => {\n                            this.browserColor(\"green\");\n                        }\n                    });\n                });\n            }\n        }\n    }\n\n    constructor(year) {\n        // Which year?\n        this.year = year;\n        this.startDate = this.year + '-10-29T09:00:00';\n        this.endDate = new Date((this.year - 1) + '-10-29T09:00:00');\n        this.days = 60 * 60 * 24 * 1000;\n        this.fulldays = 365;\n    }\n\n    // Browser color\n    getSetStateColor(state) {\n        if (typeof (state) == \"object\" && state.length >= 1) {\n            if (state.length == 1) {\n                darkmode.browserColorDark = state[0];\n                darkmode.browserColorLight = state[0];\n            } else {\n                darkmode.browserColorDark = state[1];\n                darkmode.browserColorLight = state[0];\n            }\n        } else if (state == \"green\") {\n            darkmode.browserColorDark = \"#0d4f03\";\n            darkmode.browserColorLight = \"#60e670\";\n        } else if (state == \"yellow\") {\n            darkmode.browserColorDark = \"#705f02\";\n            darkmode.browserColorLight = \"#FFD700\";\n        } else {\n            darkmode.browserColorDark = \"#000000\";\n            darkmode.browserColorLight = \"#FFFFFF\";\n        }\n\n        return [darkmode.browserColorLight, darkmode.browserColorDark];\n    }\n    browserColor(state, duration, ease) {\n        this.getSetStateColor(state);\n        darkmode.setDarkMode(duration, ease);\n    }\n\n    // Show/hide Animations\n    // Login Pages\n    showLoginPage(tl) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n\n        this.browserColor(\"green\", 1);\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            display: \"\",\n            opacity: 0,\n            top: 0\n        }, {\n            opacity: 1,\n            duration: length,\n            ease: \"power3.in\"\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: length / 5,\n            duration: length,\n            ease: \"power3.out\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    top: \"\"\n                });\n            }\n        }, \">-\" + (length / 2));\n\n        return tl;\n    }\n    hideLoginPage(tl) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n\n        tl.set(next.querySelectorAll(\"#permission\"), {\n            position: \"fixed\",\n            top: 0,\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission .bgtext *, #permission form\"), {\n            y: 0,\n            opacity: 1,\n        }, {\n            y: 200,\n            opacity: 0,\n            stagger: {\n                from: \"end\",\n                amount: length / 5\n            },\n            duration: length,\n            ease: \"power3.in\",\n            onComplete: () => {\n                this.browserColor(\"yellow\");\n            }\n        });\n        tl.fromTo(next.querySelectorAll(\"#permission\"), {\n            opacity: 1\n        }, {\n            opacity: 0,\n            duration: length,\n            ease: \"power3.in\",\n            onComplete: () => {\n                gsap.set(next.querySelectorAll(\"#permission\"), {\n                    position: \"\",\n                    display: \"none\",\n                    top: \"\"\n                }, \">\");\n            }\n        }, \">-\" + (length / 4));\n\n        return tl;\n    }\n    // Statistic Pages\n    showStatisticPages() {\n        return new Promise(resolve => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n            var tl = gsap.timeline();\n\n            tl.fromTo(next.querySelectorAll(\"#hello\"), {\n                display: \"\",\n                opacity: 0\n            }, {\n                opacity: 1,\n                ease: \"power3.in\",\n                duration: length,\n                onStart: () => this.browserColor(\"green\", .5)\n            }, length / 4);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext > *\"), {\n                display: \"\",\n                opacity: 0,\n                y: 200\n            }, {\n                opacity: 1,\n                y: 0,\n                duration: length,\n                stagger: length / 5,\n                ease: \"power3.out\"\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\" #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n                display: \"\",\n                opacity: 0,\n                y: 200\n            }, {\n                opacity: 1,\n                y: 0,\n                duration: length,\n                stagger: length / 5,\n                ease: \"power3.out\"\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n                display: \"\",\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length / 2,\n                onComplete: () => resolve()\n            }, length / 2);\n        });\n    }\n    hideStatisticPages() {\n        return new Promise(async resolve => {\n            var next = this.next;\n            var length = reduceMotionFilter(1);\n            var tl = gsap.timeline();\n\n            await animate.top(next);\n\n            tl.fromTo(next.querySelectorAll(\".footer > *, #hello .bgtext > *, #hello .thumbs, #hello .text > *, #hello .arrow-big\"), {\n                opacity: 1,\n                y: 0\n            }, {\n                opacity: 0,\n                y: 200,\n                duration: length,\n                stagger: {\n                    from: \"end\",\n                    amount: length / 5\n                },\n                ease: \"power3.in\"\n            }, length / 5);\n            tl.set(next.querySelectorAll(\".grant:not(#hello), .statistics\"), {\n                opacity: 0\n            }, length / 2);\n            tl.fromTo(next.querySelectorAll(\"#hello\"), {\n                opacity: 1\n            }, {\n                opacity: 0,\n                duration: length,\n                ease: \"power3.in\",\n                onComplete: () => {\n                    gsap.set(next.querySelectorAll(\".grant\"), { display: \"none\" });\n                    resolve();\n                }\n            }, length / 2);\n        });\n    }\n\n    // Login messages\n    message(message, quick) {\n        var next = this.next;\n\n        var loginmessage = next.querySelector(\"#login-message\");\n\n        if (quick) {\n            loginmessage.innerHTML = message;\n        } else {\n            gsap.to(loginmessage, {\n                opacity: 0,\n                onComplete: function () {\n                    loginmessage.innerHTML = message;\n                    gsap.to(loginmessage, {\n                        opacity: 1\n                    });\n                }\n            });\n        }\n    }\n\n    // Logout\n    async requestLogout() {\n        var tl = gsap.timeline();\n\n        api.abort();\n\n        // Hide statistic pages\n        await this.hideStatisticPages(tl);\n\n        // Logout\n        await api.call(\"?fetch=logout\");\n        this.statistics.clear();\n        api.clear();\n        this.login();\n\n        scroll.refresh();\n    }\n\n    // Request token\n    async requestToken(text) {\n        var next = this.next;\n        var length = reduceMotionFilter(1);\n        var tokenlink = next.querySelector(\"#tokenurl\");\n        tokenlink.textContent = \"Connecting Plurk...\";\n\n        var tl = gsap.timeline();\n        tl.fromTo(next.querySelectorAll(\"#permission form\"), {\n            display: \"\",\n            y: 200,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            duration: length,\n            ease: \"power3.out\"\n        }, length);\n        tl.fromTo(next.querySelectorAll(\"#permission h1, #permission li\"), {\n            display: \"\",\n            y: 50,\n            opacity: 0,\n        }, {\n            y: 0,\n            opacity: 1,\n            stagger: length / 10,\n            duration: length,\n            ease: \"power3.out\"\n        }, length);\n\n        api.call(\"?request=token\").then(data => {\n            if (text) {\n                message(text);\n            } else {\n                tokenlink.textContent = \"Grant Access\";\n                tokenlink.setAttribute(\"href\", api.url + \"?redirect=\" + data.message.url);\n            }\n        }, () => {\n            message(\"Error when requesting verification from Plurk, please reload your browser again.\");\n        });\n\n        if (!text) next.querySelector(\"#permission form\").style.display = \"none\";\n    }\n\n    // Display current Plurker data\n    async displayPlurkerData() {\n        var plurker = this.me;\n        var next = this.next;\n        var extra = \"\";\n        var length = reduceMotionFilter(1);\n\n        // plurks_count\n        var days = (plurker.anniversary.years * 365) + plurker.anniversary.days;\n        var responses = Math.round(plurker.response_count / days);\n\n        next.querySelector(\"#hello .thumbs\").innerHTML = \"<img src='\" + plurker.avatar_big + \"' />\";\n        if (this.year == 2021) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>If \" + this.year + \" have been a rough year you, hopefully RePlurk will cheer you by bringing some good memories</p>\";\n        else if (this.year == 2022) next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>It's 2020 v2, and this is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n        else next.querySelector(\"#hello .text\").innerHTML = \"<h1>Hello \" + plurker.display_name + \"</h1><p style='max-width: 500px; margin: 0 auto'>This is your year end RePlurk recap. Hopefully it will bring lots of good memories.</p>\";\n\n        // Draw statistic\n        this.statistics.title('All Time', 'alltime');\n        if (plurker.anniversary.years && plurker.anniversary.days) {\n            this.statistics.draw('spansmall center posted', Math.round(plurker.plurks_count / days), 'I posted around <i><img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> ' + plural(Math.round(plurker.plurks_count / days), \"plurk\") + \" per day</i>\");\n\n            // Responses\n            var oneday = 16;\n            if (responses <= oneday) extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday / responses), \"hour\") + '</i>';\n            else extra = \"That's almost 1 response every <i>\" + plural(Math.round(oneday * 60 / responses), \"minute\") + '</i>';\n            this.statistics.draw('span2 center responded', responses, 'I responded around <i><img src=\"https://api.iconify.design/noto:left-speech-bubble.svg\" /> ' + plural(responses, \"time\") + \"</i> per day. \" + extra + \" when I'm not asleep\");\n\n            var join = new Date(plurker.join_date)\n            this.statistics.draw('spansmall center anniversary', \"<strong><i>\" + monthNames[join.getMonth()] + \"</i> <i>\" + join.getFullYear() + \"</i></strong> <em>\" + join.getDate() + \"</em>\", \"I joined Plurk <i>\" + plural(plurker.anniversary.years, \"year\") + \"</i> and <i>\" + plural(plurker.anniversary.days, \"day\") + \"</i> ago\");\n            this.statistics.draw('spansmall center badges', plurker.badges.length, \"I have <i><img src='https://api.iconify.design/noto:shield.svg' /> \" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        } else {\n            this.statistics.draw('', '-', \"There is no data in my timeline\");\n            this.statistics.draw('', plurker.badges.length, \"But at least I have <i>\" + plural(plurker.badges.length, \"badge\") + \"</i> right now\");\n        }\n\n        // Scroll animation hello section\n        scroll.push(tl => {\n            tl.fromTo(next.querySelectorAll(\"#hello .text, #hello .thumbs\"), {\n                y: 0\n            }, {\n                y: window.innerHeight * -3 / 4,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sup\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * -1 / 10,\n                rotation: -10,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .bgtext sub\"), {\n                y: 0,\n                x: 0,\n                rotation: 0\n            }, {\n                y: window.innerHeight * -1 / 4,\n                x: window.innerHeight * 1 / 10,\n                rotation: 10,\n                ease: \"linear\",\n                duration: length,\n            }, 0);\n            tl.fromTo(next.querySelectorAll(\"#hello .arrow-big\"), {\n                y: 0,\n                opacity: 1\n            }, {\n                y: window.innerHeight * 1 / 4,\n                opacity: 0,\n                ease: \"linear\",\n                duration: length / 4,\n            }, 0);\n            return tl;\n        }, tl => ScrollTrigger.create({\n            trigger: next.querySelectorAll(\"#hello\"),\n            start: \"0 0\",\n            end: \"100% 0\",\n            animation: tl,\n            scrub: true\n        }));\n        scroll.refresh();\n    }\n    // Display statistics\n    async displayStatistics() {\n        this.statistics.title('This Year', 'thisyear');\n        this.statistics.draw(\"loading thisyearloading\", \"\", \"<i class='month'>Data from December</i>1 of 2. Loading \" + this.year + \" timeline. It can take up to 1 minute.\");\n\n        this.loading.init(this.next);\n        this.loading.loop(this.fulldays);\n\n        // Load loop timeline\n        var getTimeline = async (offset) => {\n            offset = (!offset) ? \"\" : \"&offset=\" + offset;\n\n            var data = await api.call(\"?fetch=plurk&filter=my\" + offset, 1);\n            if (data.success) {\n                this.friends.add(data.message.plurk_users);\n                this.plurks = this.plurks.concat(data.message.plurks);\n\n                if (data.message.plurks.length > 0) {\n                    var lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n\n                    if (lastposted >= this.endDate) {\n                        this.loading.update(\"Data from \" + monthNames[lastposted.getMonth()] + \" \" + lastposted.getFullYear(), this.fulldays - Math.floor((lastposted - this.endDate) / this.days));\n\n                        // Load next plurks\n                        await getTimeline(data.message.offset);\n                    } else {\n                        while (lastposted < this.endDate && this.plurks.length > 1) {\n                            this.plurks.pop();\n                            lastposted = new Date(this.plurks[this.plurks.length - 1].posted);\n                        }\n                        await this.loading.forcedone();\n                    }\n                } else {\n                    await this.loading.forcedone();\n                }\n            } else {\n                this.requestLogout();\n            }\n        }\n        await getTimeline(this.startDate);\n\n        // When loading done\n        var largest_poll_result = 0;\n        if (this.plurks.length > 1) {\n            // Count user statistics\n            this.statistics.plurks_count = 0;\n            this.plurks.forEach(plurk => {\n                // Calculate the statistics\n                if (plurk.responded) this.statistics.responded_count++;\n                if (plurk.owner_id == this.me.id) {\n                    this.statistics.plurks_count++;\n                    this.statistics.replurker_count += plurk.replurkers.length;\n                    this.statistics.replurker_list = this.statistics.listCount(this.statistics.replurker_list, plurk.replurkers);\n                    this.statistics.favourite_count += plurk.favorers.length;\n                    this.statistics.favorite_list = this.statistics.listCount(this.statistics.favorite_list, plurk.favorers);\n                    if (plurk.anonymous) this.statistics.whispers_count++;\n                    if (plurk.coins) this.statistics.coins_count += plurk.coins;\n                    if (plurk.porn) this.statistics.porn_count++;\n                    if (!plurk.response_count) this.statistics.noresponse_count++;\n                    if (plurk.plurk_type == 3) this.statistics.private_count++;\n                    this.statistics.response_count += plurk.response_count;\n\n                    if (plurk.content_raw.includes(\"instagram.com\")) this.statistics.instagrammer_count++;\n                    if (plurk.content_raw.includes(\"facebook.com\")) this.statistics.facebooker_count++;\n                    else if (plurk.content_raw.includes(\"fb.watch\")) this.statistics.facebooker_count++;\n                    if (plurk.content_raw.includes(\"twitter.com\")) this.statistics.twitterer_count++;\n                    if (plurk.content_raw.includes(\"reddit.com\")) this.statistics.redditor_count++;\n                    if (plurk.content_raw.includes(\"tiktok.com\")) this.statistics.tiktoker_count++;\n                    if (plurk.content_raw.includes(\"imgur.com\")) this.statistics.imgurer_count++;\n                    if (plurk.content_raw.includes(\"youtube.com\")) this.statistics.youtuber_count++;\n\n                    // Calculate polls\n                    if (plurk.with_poll) {\n                        var response_count = plurk.poll.response.response_count;\n                        this.statistics.poll_count++;\n                        this.statistics.poll_responder_count += response_count;\n\n                        if (largest_poll_result < response_count) {\n                            largest_poll_result = response_count;\n                            this.statistics.poll_popular_plurk = plurk;\n                        }\n                    }\n                } else if (plurk.responded) this.statistics.responded_other_count++;\n            });\n\n            // Sort based on date\n            this.plurks.sort((a, b) => new Date(b.posted) - new Date(a.posted));\n\n            // Draw statistics\n            try {\n                await this.statistics.drawAll(this.plurks);\n            } catch (error) {\n                console.info(\"Error while counting statistics\", error);\n            }\n\n            // Display extended statistics\n            this.displayExtendedStatistics();\n        } else {\n            if (this.plurks[0]) {\n                var date = new Date(plurk[0].posted);\n                inactive.draw(plurk[0], date.getFullYear());\n            }\n            else inactive.empty();\n        }\n    }\n    // Display extended statistics\n    async displayExtendedStatistics() {\n        // Deeper user statistics\n        this.statistics.title('Dig Deeper', 'digdeeper');\n        this.statistics.draw(\"loading digdeeperloading\", \"\", \"<i class='month'>Data from \" + this.year + \"</i> 2 of 2. Loading all responses. <small>If the loading seems to stop, refresh your browser tab to resume your download. Closing your browser tab will clear all downloaded data.</small>\");\n\n        // Load each post responses and calculate statistics\n        this.loading.init(this.next);\n        this.loading.loop(this.plurks.length);\n\n        // Get the responses for each plurks in parallel\n        this.plurks.sort((a, b) => new Date(a.posted) < new Date(b.posted));\n        for (var plurk of this.plurks) {\n            var date = new Date(plurk.posted);\n            this.loading.update(\"Data from \" + monthNames[date.getMonth()] + \" \" + date.getFullYear());\n\n            // Count all\n            await this.most.countAll(plurk);\n\n            // Count responses\n            if (plurk.response_count > 0 && (plurk.responded || plurk.owner_id == this.me.id)) {\n                var result = await api.call(\"?fetch=response&plurk_ids=\" + plurk.plurk_id);\n                if (result.success) for (var message of result.message) {\n                    // Add friends from response lists\n                    this.friends.add(message.friends);\n\n                    // Count the rest of statistics\n                    for (var response of message.responses) {\n                        // Find and count all responders\n                        await this.most.responders.count(response);\n                        this.most.interaction.count(response);\n                        this.most.mvp.count(response, \"response\");\n                        // Count all\n                        await this.most.countAll(response);\n                    }\n                } else {\n                    this.requestLogout();\n                    break;\n                }\n            }\n        }\n\n        // Display How Many Links\n        this.most.links.drawLinks();\n        // Display How Many Pictures\n        this.most.links.drawPics();\n\n        // Draw Results\n        // Display Most Responder\n        // this.most.responders.draw();\n\n        // Display Most Interaction\n        this.most.interaction.draw();\n\n        // Display Most Mentioned by me\n        // this.most.mentions.draw();\n\n        // Display How Many Words-Characters\n        this.most.types.draw();\n\n        // Display Most hashtags by me\n        this.most.hashtags.draw();\n\n        // Display Most My Emoticons\n        this.most.myemoticons.draw();\n\n        // Display MVP\n        this.statistics.replurker_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"replurk\");\n        });\n        this.statistics.favorite_list.forEach(value => {\n            this.most.mvp.count({ user_id: value.id, count: value.count }, \"favorite\");\n        });\n        this.most.mvp.draw();\n\n        // Replurk Badges\n        var gender = \"<img src='https://api.iconify.design/noto:crown.svg' /> Leader\";\n        if (this.me.gender == 1) gender = \"<img src='https://api.iconify.design/noto:crown.svg' /> King\";\n        if (this.me.gender == 0) gender = \"<img src='https://api.iconify.design/noto:crown.svg' /> Queen\";\n\n        var tiktok = \"<img src='https://api.iconify.design/noto:mirror-ball.svg' />\";\n        if (this.me.gender == 1) tiktok = \"<img src='https://api.iconify.design/noto:man-dancing-medium-dark-skin-tone.svg' />\";\n        if (this.me.gender == 0) tiktok = \"<img src='https://api.iconify.design/noto:woman-dancing-medium-dark-skin-tone.svg' />\";\n\n        var facebook = \"<img src='https://api.iconify.design/noto:older-person.svg' />\";\n        if (this.me.gender == 1) facebook = \"<img src='https://api.iconify.design/noto:old-man.svg' />\";\n        if (this.me.gender == 0) facebook = \"<img src='https://api.iconify.design/noto:old-woman.svg' />\";\n\n        var plurker = \"<img src='https://api.iconify.design/noto:person-bowing.svg' />\";\n        if (this.me.gender == 1) plurker = \"<img src='https://api.iconify.design/noto:man-bowing.svg' />\";\n        if (this.me.gender == 0) plurker = \"<img src='https://api.iconify.design/noto:woman-bowing.svg' />\";\n\n        this.statistics.title('RePlurk Badges', 'replurkbadges');\n        this.statistics.title('What are RePlurk Badges consist of? They are badges based on your activities in Plurk. Currently there are 16 badges in total, for activities such as: creating lots of polls (Polling ' + gender + '), receiving lots of coins (Plurk Coins Billionaire), writing lots of posts (Novelist and Keyboard Warrior), sharing lots of pictures and links (Meme Lord & Missing Link), sharing social medias urls (there are 7 badges), posting lots of adult posts (Adult-er), getting lots of replurks (Trendsetter), and constantly posting in Plurk almost everyday (Active Plurker).', 'replurkbadges description');\n        if (this.statistics.poll_count >= 5) this.statistics.draw('spansmall center badges pollbadges', \"<img src='https://api.iconify.design/noto:ballot-box-with-ballot.svg' />\", \"<strong>Polling \" + gender + \"</strong>\");\n        if (this.statistics.coins_count >= 5) this.statistics.draw('spansmall center badges coinbadges', \"<img src='https://api.iconify.design/noto:coin.svg' />\", \"<strong>Plurk Coins Billionaire</strong>\");\n        if (this.most.types.words >= 50000) this.statistics.draw('spansmall center badges novelistbadges', \"<img src='https://api.iconify.design/noto:book.svg' />\", \"<strong>Novelist</strong>\");\n        if (this.most.types.chars >= 1000000) this.statistics.draw('spansmall center badges keyboardbadges', \"<img src='https://api.iconify.design/noto:keyboard.svg' />\", \"<strong>Keyboard Warrior</strong>\");\n        if (this.most.links.pics.length >= 356) this.statistics.draw('spansmall center badges memebadges', \"<img src='https://api.iconify.design/noto:cat.svg' />\", \"<strong>Meme Lord</strong>\");\n        if (this.most.links.links.length >= 356 / 2) this.statistics.draw('spansmall center badges missingbadges', \"<img src='https://api.iconify.design/noto:orangutan.svg' />\", \"<strong>The Missing Link</strong>\");\n        if (this.statistics.instagrammer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/noto:camera.svg' />\", \"<strong>Instagrammer</strong>\");\n        if (this.statistics.facebooker_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', facebook, \"<strong>Facebooker</strong>\");\n        if (this.statistics.twitterer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/noto:hatching-chick.svg' />\", \"<strong>The Real Chief Twit</strong>\");\n        if (this.statistics.redditor_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/noto:robot.svg' />\", \"<strong>/r</strong>\");\n        if (this.statistics.tiktoker_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', tiktok, \"<strong>Tiktoker</strong>\");\n        if (this.statistics.imgurer_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/noto:framed-picture.svg' />\", \"<strong>Imgur-er</strong>\");\n        if (this.statistics.youtuber_count >= 10) this.statistics.draw('spansmall center badges socmedbadges', \"<img src='https://api.iconify.design/noto:movie-camera.svg' />\", \"<strong>Youtuber <img src='https://api.iconify.design/noto:sleepy-face.svg' /></strong>\");\n        if (this.statistics.porn_count >= 10) this.statistics.draw('spansmall center badges adultbadges', \"<img src='https://api.iconify.design/noto:face-with-peeking-eye.svg' />\", \"<strong>Adult-er</strong>\");\n        if (this.statistics.replurker_count >= 50) this.statistics.draw('spansmall center badges plurkerbadges', \"<img src='https://api.iconify.design/noto:trophy.svg' />\", \"<strong>Trendsetter</strong>\");\n        if (this.statistics.plurks_count >= 356 * 1.5) this.statistics.draw('spansmall center badges plurkerbadges', \"<img src='https://api.iconify.design/noto:military-medal.svg' />\", \"<strong>Active Plurker \" + plurker + \"</strong>\");\n\n        this.logSessionStrorageSize();\n    }\n\n    // Display LocalStorage stats\n    logSessionStrorageSize() {\n        function getSessionStorageSize() {\n            var totalBytes = 0;\n\n            for (var key in sessionStorage) {\n                if (sessionStorage.hasOwnProperty(key)) {\n                    var itemValue = sessionStorage.getItem(key);\n                    totalBytes += itemValue.length;\n                }\n            }\n\n            // Convert bytes to Megabytes\n            var totalMegabytes = Math.round((totalBytes / 1024 / 1024) * 100) / 100;\n\n            return totalMegabytes;\n        }\n\n        // Usage\n        var sessionStorageSize = getSessionStorageSize();\n        console.info('SessionStorage Size: ' + sessionStorageSize + ' MB');\n    }\n\n    // Check login status\n    async login(clear) {\n        var next = this.next;\n\n        this.me = { id: 0 };\n        this.friends.init();\n        this.statistics.init(next);\n        this.most.init();\n        this.plurks = [];\n\n        scroll.destroy();\n\n        window.scrollTo(0, 0);\n        this.browserColor(\"yellow\");\n\n        // Scroll animation menu and logout\n        this.scrollAnimate.menu();\n\n        // Check is server have open session\n        var tl = gsap.timeline();\n        tl.set(next.querySelector(\"#hello .arrow-big\"), {\n            opacity: 0\n        });\n\n        var data = await api.call(\"?\");\n        var interval = null;\n        if (data.success) {\n            this.me = data.message;\n\n            // Initial Plurk statistics\n            await this.displayPlurkerData();\n\n            // Display the rest of the statistics\n            this.displayStatistics();\n\n            // Scroll top top\n            await animate.top(next);\n\n            // Hide login page\n            if (clear) next.querySelector(\"#permission\").style.display = \"none\";\n            else tl = this.hideLoginPage(tl);\n\n            // Show statistic pages\n            await this.showStatisticPages(tl);\n\n            // Add logout event\n            next.querySelector(\"#logout\").onclick = () => this.requestLogout();\n\n            // Scroll animate statistics\n            this.scrollAnimate.statistics();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar();\n\n            scroll.refresh();\n        } else {\n            // Hide statistic pages\n            if (clear) next.querySelectorAll(\".grant\").forEach(function (el) { el.style.display = \"none\"; });\n            // Show login page\n            this.showLoginPage(tl);\n            // Request token\n            this.requestToken();\n\n            // Scroll animation permission section\n            this.scrollAnimate.permisions();\n            // Scroll browser bar\n            this.scrollAnimate.browserBar(false);\n\n            scroll.refresh();\n\n            // Automatic login\n            interval = setInterval(async () => {\n                var data = await api.call(\"?\");\n\n                if (data.success) {\n                    clearInterval(interval);\n                    this.login();\n                }\n            }, 3000);\n        }\n\n        // Snap\n        next.querySelectorAll(\"section.snap\").forEach(el => scroll.snap(el));\n        next.querySelectorAll(\"section.snap-bottom\").forEach(el => scroll.snap(el, \"bottom\"));\n    }\n\n    // Run the API call\n    run(el) {\n        return new Promise(resolve => {\n            var length = reduceMotionFilter(1);\n            this.next = el;\n            this.browserColor(\"yellow\");\n\n            // Run the login\n            gsap.fromTo(this.next.querySelectorAll('#credits'), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: length,\n                ease: \"power3.in\",\n                onComplete: async () => {\n                    // Change color\n                    this.browserColor(\"yellow\", 0);\n\n                    // Display login\n                    await this.login(true);\n\n                    resolve();\n                }\n            });\n        });\n    }\n}\n\nexport default replurk;"],"names":["iconLink","span","constructor","classname","text","this","el","document","createElement","setAttribute","innerHTML","update","textContent","updateHTML","colors","oldcolor","randomcolors","getRandomColor","color","utils","shuffle","slice","pop","plurkerElement","id","data","avatarurl","customcreate","user","user_id","value","nick_name","attached","hidden","count","position","created","counts","create","avatar","name","display_name","appendChild","insertTo","element","insertAdjacentElement","destroy","remove","next","plurks","me","friends","unavailable","parent","init","add","new_friends","Object","assign","find","async","findIndex","result","call","success","temp","message","user_info","push","findByUsername","index","toLowerCase","getAvatar","has_profile_image","getAvatarByUsername","user_name","statistics","whispers_count","coins_count","porn_count","noresponse_count","private_count","replurker_count","replurker_list","favourite_count","favorite_list","response_count","responded_count","responded_other_count","responded_other_list","plurks_count","poll_count","poll_responder_count","poll_popular_plurk","redditor_count","tiktoker_count","instagrammer_count","imgurer_count","facebooker_count","twitterer_count","youtuber_count","querySelector","MutationObserver","mutationsList","forEach","mutation","addedNodes","afterDraw","observe","attributes","childList","subtree","clear","listCount","list","collection","length","title","style","loading","insertAdjacentHTML","anim","set","background","to","opacity","duration","ease","screen","matchMedia","tl","fromTo","children","y","window","innerHeight","trigger","start","end","animation","scrub","number","Number","load","progress","snap","onUpdate","toggleActions","querySelectorAll","x","height","getAttribute","capture","refresh","onclick","generating","imgs","body","cursor","img","includes","localUrl","url","_","Math","round","canvas","backgroundColor","logging","link","display","download","year","Date","now","href","toDataURL","click","removeChild","setTimeout","wrapper","draw","drawDiv","drawGraph","drawImage","image","badge","drawHTML","html","drawLink","drawPost","toString","drawUserList","max","friend","plurker","outerHTML","scale","stagger","amount","from","attach","charttitle","node","chart","that","zIndex","maxTop","top","currentTop","killTweensOf","onComplete","drawAll","response_percentage","most","responses","replurk","favorite","sort","a","b","findregex","regex","replace","content","storage","match","idx","responders","mentions","dataAll","myemoticons","hashtags","links","pics","types","words","chars","countAll","content_raw","plurk_id","replurkers_count","favorite_count","response","i","undefined","loved","pic","split","drawLinks","drawPics","owner_id","plurk_type","posted","interaction","multiplier","console","info","mvp","type","error","inactive","empty","prev_count","clean","isComplete","item","Promise","resolve","done","loop","month","fakeupdate","forcedone","width","padding","margin","overflow","scrollAnimate","credits","permisions","rotation","menu","el1","el2","direction","browserBar","login","onLeave","browserColor","onEnterBack","onEnter","startDate","endDate","days","fulldays","getSetStateColor","state","browserColorDark","browserColorLight","setDarkMode","showLoginPage","hideLoginPage","showStatisticPages","timeline","onStart","hideStatisticPages","quick","loginmessage","requestLogout","abort","requestToken","tokenlink","then","displayPlurkerData","extra","anniversary","years","avatar_big","oneday","join","join_date","getMonth","getFullYear","getDate","badges","displayStatistics","getTimeline","offset","plurk_users","concat","lastposted","floor","largest_poll_result","plurk","responded","replurkers","favorers","anonymous","coins","porn","with_poll","poll","displayExtendedStatistics","date","gender","tiktok","facebook","logSessionStrorageSize","sessionStorageSize","totalBytes","key","sessionStorage","hasOwnProperty","getItem","getSessionStorageSize","scrollTo","interval","setInterval","clearInterval","run"],"sourceRoot":""}